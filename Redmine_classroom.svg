<?xml version="1.0" encoding="UTF-8" standalone="no"?>
<!-- Created with Inkscape (http://www.inkscape.org/) -->

<svg xmlns:ns1="https://launchpad.net/jessyink" xmlns:dc="http://purl.org/dc/elements/1.1/" xmlns:cc="http://creativecommons.org/ns#" xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#" xmlns:svg="http://www.w3.org/2000/svg" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" xmlns:sodipodi="http://sodipodi.sourceforge.net/DTD/sodipodi-0.dtd" xmlns:inkscape="http://www.inkscape.org/namespaces/inkscape" width="1024" height="640" id="svg2" version="1.1" inkscape:version="0.48.0 r9654" sodipodi:docname="Redmine_classroom.svg" style="display:inline">
  <sodipodi:namedview id="base" pagecolor="#000000" bordercolor="#f81e1e" borderopacity="1" inkscape:pageopacity="0" inkscape:pageshadow="2" inkscape:zoom="0.609375" inkscape:cx="514.7337" inkscape:cy="320" inkscape:document-units="px" inkscape:current-layer="g17035" showgrid="false" borderlayer="true" inkscape:window-width="1024" inkscape:window-height="580" inkscape:window-x="-3" inkscape:window-y="-3" inkscape:window-maximized="1" showguides="true" inkscape:guide-bbox="true">
    <sodipodi:guide orientation="1,0" position="69.860445,284.95708" id="guide19504" />
    <sodipodi:guide id="guide3266" position="309.62594,537.85536" orientation="0,1" />
    <sodipodi:guide id="guide3290" position="201.09726,422.94264" orientation="0,1" />
    <sodipodi:guide id="guide3292" position="116.50873,236.20948" orientation="1,0" />
    <sodipodi:guide id="guide3327" position="427.73067,153.21696" orientation="1,0" />
    <sodipodi:guide id="guide3952" position="545.0894,256.18073" orientation="0,1" />
  </sodipodi:namedview>
  <defs id="defs3136">
    <linearGradient id="linearGradient3917">
      <stop id="stop3919" offset="0" style="stop-color:#3c94d6;stop-opacity:1;" />
      <stop id="stop3921" offset="1" style="stop-color:#ffffff;stop-opacity:1;" />
    </linearGradient>
    <linearGradient id="linearGradient3906">
      <stop id="stop3908" offset="0" style="stop-color:#ffffff;stop-opacity:1;" />
      <stop id="stop3910" offset="1" style="stop-color:#000000;stop-opacity:1;" />
    </linearGradient>
    <linearGradient gradientTransform="matrix(1.1848135,0,0,1,0.29496456,0)" gradientUnits="userSpaceOnUse" y2="514.50684" x2="417.4541" y1="1177.3174" x1="538.26624" id="linearGradient3912" xlink:href="#linearGradient3906" inkscape:collect="always" />
    <linearGradient gradientUnits="userSpaceOnUse" y2="593.90845" x2="116.50873" y1="924.28253" x1="257.25894" id="linearGradient3923" xlink:href="#linearGradient3917" inkscape:collect="always" />
    <filter color-interpolation-filters="sRGB" id="filter4107" inkscape:collect="always">
      <feGaussianBlur id="feGaussianBlur4109" stdDeviation="7.4817806" inkscape:collect="always" />
    </filter>
    <filter id="filter4107-4" inkscape:collect="always" color-interpolation-filters="sRGB">
      <feGaussianBlur id="feGaussianBlur4109-8" stdDeviation="7.4817806" inkscape:collect="always" />
    </filter>
    <filter id="filter4107-4-2" inkscape:collect="always" color-interpolation-filters="sRGB">
      <feGaussianBlur id="feGaussianBlur4109-8-2" stdDeviation="7.4817806" inkscape:collect="always" />
    </filter>
  </defs>
  <title id="title3278">Guía de Redmine</title>
  <metadata id="metadata7">
    <rdf:RDF>
      <cc:Work rdf:about="">
        <dc:format>image/svg+xml</dc:format>
        <dc:type rdf:resource="http://purl.org/dc/dcmitype/StillImage" />
        <dc:title>Guía de Redmine</dc:title>
        <dc:creator>
          <cc:Agent>
            <dc:title>Jesús E. Franco Mtz.</dc:title>
          </cc:Agent>
        </dc:creator>
        <dc:language>Español</dc:language>
        <dc:subject>
          <rdf:Bag>
            <rdf:li>redmine</rdf:li>
            <rdf:li>fedora</rdf:li>
          </rdf:Bag>
        </dc:subject>
        <cc:license rdf:resource="http://creativecommons.org/licenses/by-sa/3.0/" />
        <dc:publisher>
          <cc:Agent>
            <dc:title>Fedora Project</dc:title>
          </cc:Agent>
        </dc:publisher>
        <dc:identifier>http://tezcatl.fedorapeople.org/redmine-quick-guide.svg</dc:identifier>
        <dc:date>2010-12-07</dc:date>
        <dc:description>Guía básica para los usuarios de rpmdev.proyectofedora.org</dc:description>
      </cc:Work>
      <cc:License rdf:about="http://creativecommons.org/licenses/by-sa/3.0/">
        <cc:permits rdf:resource="http://creativecommons.org/ns#Reproduction" />
        <cc:permits rdf:resource="http://creativecommons.org/ns#Distribution" />
        <cc:requires rdf:resource="http://creativecommons.org/ns#Notice" />
        <cc:requires rdf:resource="http://creativecommons.org/ns#Attribution" />
        <cc:permits rdf:resource="http://creativecommons.org/ns#DerivativeWorks" />
        <cc:requires rdf:resource="http://creativecommons.org/ns#ShareAlike" />
      </cc:License>
    </rdf:RDF>
  </metadata>
  <g sodipodi:insensitive="true" ns1:masterSlide="masterSlide" style="display:inline" transform="translate(0,-412.36218)" id="layer1" inkscape:groupmode="layer" inkscape:label="Base">
    <g id="g3914">
      <rect style="fill:url(#linearGradient3912);fill-opacity:1;fill-rule:nonzero;stroke:none" id="background" width="1023.1795" height="636.89282" x="-1.5960118" y="415.18015" ry="0" rx="0" />
    </g>
    <g transform="matrix(0.81446476,0,0,0.81446476,50.82175,416.41619)" id="fedora-brand" style="fill:#ffffff;fill-opacity:1">
      <g id="layer2-5-2" inkscape:label="font1" style="fill:#ffffff;fill-opacity:1;display:inline">
        <g style="fill:#ffffff;fill-opacity:1;stroke:url(#linearGradient18619);stroke-width:1.5552702;display:inline" id="g25800-7-9" transform="matrix(0.1080981,0,0,0.1080981,130.50321,217.16237)">
          <g id="g25818-38-4" style="fill:#ffffff;fill-opacity:1;stroke:url(#linearGradient18601);stroke-width:1.70651138" transform="matrix(2.8407906,0,0,2.8407906,-1118.1965,-1829.3627)">
            <g id="g25820-38-0" style="fill:#ffffff;fill-opacity:1;stroke:url(#linearGradient18599);stroke-width:1.5552702">
              <g id="g25824-8-4" style="fill:#ffffff;fill-opacity:1;stroke:url(#linearGradient18597);stroke-width:1.5552702" />
            </g>
          </g>
          <g id="g25802-1-7" style="fill:#ffffff;fill-opacity:1;stroke:url(#linearGradient18617);stroke-width:1.70651138" transform="matrix(2.8407906,0,0,2.8407906,-1118.1965,-1829.3627)">
            <path id="path25804-9-8" style="fill:#ffffff;fill-opacity:1;stroke:url(#linearGradient18603);stroke-width:1.5552702" d="m 171.913,178.874 c 0,0 0,0 -70.316,0 1.138,15.243 13.426,26.623 29.809,26.623 11.605,0 21.619,-4.779 29.583,-12.514 1.594,-1.599 3.414,-2.053 5.461,-2.053 2.731,0 5.463,1.368 7.282,3.644 1.139,1.593 1.822,3.414 1.822,5.232 0,2.504 -1.139,5.233 -3.188,7.283 -9.558,10.238 -25.714,17.066 -41.645,17.066 -28.899,0 -52.109,-23.21 -52.109,-52.111 0,-28.898 22.528,-52.109 51.427,-52.109 28.673,0 50.063,22.3 50.063,51.653 0.002,4.326 -3.866,7.286 -8.189,7.286 l 0,0 z M 130.04,138.595 c -15.246,0 -25.713,10.012 -27.988,24.571 34.36,0 55.978,0 55.978,0 -2.048,-13.876 -12.971,-24.571 -27.99,-24.571 z" inkscape:connector-curvature="0" />
            <path id="path25806-5-9" style="fill:#ffffff;fill-opacity:1;stroke:url(#linearGradient18605);stroke-width:1.5552702" d="m 372.838,224.156 c -28.899,0 -52.108,-23.21 -52.108,-52.111 0,-28.898 23.209,-52.109 52.108,-52.109 28.902,0 52.111,23.211 52.111,52.109 10e-4,28.901 -23.208,52.111 -52.111,52.111 z m 0,-84.425 c -18.203,0 -30.038,14.566 -30.038,32.313 0,17.747 11.835,32.312 30.038,32.312 18.205,0 30.041,-14.565 30.041,-32.312 0,-17.747 -11.836,-32.313 -30.041,-32.313 z" inkscape:connector-curvature="0" />
            <path id="path25808-3-6" style="fill:#ffffff;fill-opacity:1;stroke:url(#linearGradient18607);stroke-width:1.5552702" d="m 500.19,119.935 c -15.268,0 -25.367,4.516 -34.283,15.851 l -0.823,-5.272 0,0 c -0.692,-5.504 -5.387,-9.754 -11.071,-9.754 -6.167,0 -11.168,4.994 -11.168,11.164 0,0.008 0,0.017 0,0.025 l 0,0 0,0.01 0,0 0,80.136 c 0,6.144 5.005,11.151 11.15,11.151 6.144,0 11.151,-5.008 11.151,-11.151 l 0,-43.007 c 0,-19.569 17.066,-29.356 35.044,-29.356 5.462,0 9.783,-4.551 9.783,-10.013 0,-5.462 -4.321,-9.784 -9.783,-9.784 l 0,0 z" inkscape:connector-curvature="0" />
            <path id="path25810-2-9" style="fill:#ffffff;fill-opacity:1;stroke:url(#linearGradient18609);stroke-width:1.5552702" d="m 617.836,172.044 c 0.229,-27.988 -19.799,-52.109 -52.112,-52.109 -28.9,0 -52.339,23.211 -52.339,52.109 0,28.901 22.756,52.111 50.292,52.111 13.742,0 26.11,-7.074 31.628,-14.464 l 2.717,6.896 0,0 c 1.458,3.874 5.195,6.632 9.578,6.632 5.649,0 10.229,-4.576 10.236,-10.221 l 0,0 0,-26.728 0,0 0,-14.226 0,0 z m -52.112,32.313 c -18.206,0 -30.038,-14.565 -30.038,-32.312 0,-17.747 11.832,-32.313 30.038,-32.313 18.204,0 30.038,14.566 30.038,32.313 0,17.747 -11.834,32.312 -30.038,32.312 z" inkscape:connector-curvature="0" />
            <path id="path25812-1-5" style="fill:#ffffff;fill-opacity:1;stroke:url(#linearGradient18611);stroke-width:1.5552702" d="m 302.833,78.744 c 0,-6.142 -5.005,-10.922 -11.148,-10.922 -6.144,0 -11.153,4.78 -11.153,10.922 l 0,58.712 c -5.687,-10.467 -17.975,-17.521 -32.54,-17.521 -29.582,0 -49.379,22.3 -49.379,52.109 0,29.812 20.48,52.111 49.379,52.111 12.891,0 24.068,-5.32 30.762,-14.568 l 2.476,6.279 c 1.534,4.312 5.646,7.396 10.478,7.396 6.116,0 11.126,-4.979 11.126,-11.12 0,-0.017 0,-0.031 0,-0.048 l 0,0 0,-133.35 -10e-4,0 0,0 z m -52.111,125.613 c -18.203,0 -29.809,-14.565 -29.809,-32.312 0,-17.747 11.605,-32.313 29.809,-32.313 18.206,0 29.81,13.881 29.81,32.313 0,18.428 -11.604,32.312 -29.81,32.312 z" inkscape:connector-curvature="0" />
            <path id="path25814-5-2" style="fill:#ffffff;fill-opacity:1;stroke:url(#linearGradient18613);stroke-width:1.5552702" d="m 70.718,68.496 c -2.034,-0.301 -4.107,-0.453 -6.166,-0.453 -23.044,0 -41.793,18.75 -41.793,41.795 l 0,13.055 -13.655,0 c -5.006,0 -9.104,4.097 -9.104,9.101 0,5.009 4.098,10.057 9.104,10.057 l 13.654,0 0,70.045 c 0,6.144 5.007,11.151 11.149,11.151 6.146,0 11.152,-5.008 11.152,-11.151 l 0,-70.045 15.097,0 c 5.005,0 9.101,-5.048 9.101,-10.057 0,-5.004 -4.095,-9.101 -9.101,-9.101 l -15.09,0 0,-13.055 c 0,-10.745 8.741,-20.934 19.486,-20.934 0.968,0 1.943,0.072 2.899,0.213 6.095,0.902 11.764,-1.858 12.668,-7.954 0.9,-6.093 -3.307,-11.763 -9.401,-12.667 l 0,0 z" inkscape:connector-curvature="0" />
            <path id="path25816-7-0" style="fill:#ffffff;fill-opacity:1;stroke:url(#linearGradient18615);stroke-width:1.5552702" d="m 625.41124,210.7096 0,8.43365 -1.72458,0 0,-8.43365 -2.88668,0 0,-1.69959 7.49298,0 0,1.69959 -2.88172,0 z m 12.00264,8.43365 0,-5.34865 c 0,-0.35625 0,-0.79413 0,-1.1578 -0.12884,0.30677 -0.28743,0.66796 -0.41132,1.00442 l -2.52987,5.81375 -2.47784,-5.81375 c -0.12389,-0.33893 -0.27999,-0.69765 -0.40389,-0.97968 0.0248,0.36119 0.0248,0.79908 0.0248,1.13306 l 0,5.34865 -1.64776,0 0,-10.13324 1.72458,0 2.29943,5.24474 c 0.17593,0.44284 0.38159,1.00442 0.53521,1.39035 0.15363,-0.41314 0.36177,-0.92277 0.54265,-1.39035 l 2.23996,-5.24474 1.74936,0 0,10.13324 -1.64529,0 0,0 0,0 z" inkscape:connector-curvature="0" />
          </g>
        </g>
      </g>
    </g>
    <g transform="matrix(1.9357344,0,0,1.9357344,347.28476,402.41873)" style="display:inline" inkscape:label="font1" id="logo-fedora">
      <g transform="matrix(0.1080981,0,0,0.1080981,130.50321,217.16237)" id="g25800-8" style="fill-opacity:1;stroke:url(#linearGradient18639);stroke-width:1.5552702;display:inline">
        <g transform="matrix(2.8407906,0,0,2.8407906,-1118.1965,-1829.3627)" style="fill-opacity:1;stroke:url(#linearGradient18635);stroke-width:1.70651138" id="g25818-1">
          <g style="fill-opacity:1;stroke:url(#linearGradient18633);stroke-width:1.5552702" id="g25820-4">
            <path inkscape:connector-curvature="0" d="M 737.644,62.432 C 737.644,27.952 709.693,0 675.213,0 640.749,0 612.809,27.929 612.784,62.388 l -0.002,-0.002 0,48.312 0.002,0.002 c 0.019,7.824 6.364,14.158 14.193,14.158 0.022,0 0.044,-0.002 0.067,-0.002 l 0.004,0.002 48.189,0 0,0 c 34.47,-0.014 62.407,-27.956 62.407,-62.426 l 0,0 z" style="fill:#072b61;fill-opacity:1;stroke:url(#linearGradient10081);stroke-width:1.5552702" id="path25822-3" />
            <g style="fill-opacity:1;stroke:url(#linearGradient18631);stroke-width:1.5552702" id="g25824-5">
              <path inkscape:connector-curvature="0" d="m 693.543,14.799 c -16.183,0 -29.301,13.118 -29.301,29.301 0,0.006 0,0.013 0,0.021 l 0,15.509 -15.46,0 c -0.003,0 -0.003,0 -0.005,0 -16.184,0 -29.301,13.054 -29.301,29.235 0,16.183 13.117,29.302 29.301,29.302 16.182,0 29.301,-13.12 29.301,-29.302 0,-0.005 0,-0.013 0,-0.019 l 0,-15.575 15.459,0 c 0.003,0 0.005,0 0.006,0 16.182,0 29.301,-12.988 29.301,-29.171 0,-16.183 -13.119,-29.301 -29.301,-29.301 l 0,0 z m -29.3,74.092 c -0.014,8.529 -6.934,15.441 -15.465,15.441 -8.541,0 -15.529,-6.925 -15.529,-15.466 0,-8.542 6.988,-15.596 15.529,-15.596 0.008,0 0.015,0.002 0.021,0.002 l 13.251,0 c 0.004,0 0.007,-0.002 0.01,-0.002 1.206,0 2.185,0.976 2.185,2.182 0,0.001 -10e-4,0.003 -10e-4,0.005 l 0,13.434 -10e-4,0 0,0 z m 29.299,-29.262 c -0.005,0 -0.01,0 -0.015,0 l -13.26,0 c -0.002,0 -0.006,0 -0.006,0 -1.208,0 -2.184,-0.978 -2.184,-2.184 l 0,-0.002 0,-13.369 c 0.015,-8.532 6.933,-15.441 15.464,-15.441 8.542,0 15.531,6.924 15.531,15.467 0.002,8.541 -6.988,15.529 -15.53,15.529 l 0,0 z" style="fill:#0a57a4;fill-opacity:1;stroke:url(#linearGradient10083);stroke-width:1.5552702" id="path25826-6" />
            </g>
            <path inkscape:connector-curvature="0" d="m 664.243,59.629 0,-15.509 c 0,-0.008 0,-0.015 0,-0.021 0,-16.183 13.118,-29.301 29.301,-29.301 2.456,0 4.2,0.275 6.474,0.871 3.313,0.868 6.02,3.583 6.021,6.744 10e-4,3.82 -2.772,6.597 -6.916,6.597 -1.975,0 -2.688,-0.378 -5.58,-0.378 -8.531,0 -15.449,6.909 -15.464,15.441 l 0,13.369 0,0.002 c 0,1.206 0.976,2.184 2.184,2.184 0,0 0.004,0 0.006,0 l 10.155,0 c 3.785,0 6.84,3.028 6.843,6.822 0,3.797 -3.059,6.819 -6.843,6.819 l -12.345,0 0,15.575 c 0,0.006 0,0.014 0,0.021 0,16.181 -13.119,29.3 -29.301,29.3 -2.455,0 -4.2,-0.277 -6.473,-0.871 -3.313,-0.867 -6.021,-3.584 -6.022,-6.744 0,-3.82 2.772,-6.598 6.917,-6.598 1.973,0 2.688,0.379 5.578,0.379 8.531,0 15.451,-6.91 15.466,-15.441 0,0 0,-13.438 0,-13.438 0,-1.204 -0.979,-2.18 -2.185,-2.18 -0.002,0 -0.003,0 -0.006,0 L 651.899,73.27 c -3.785,0 -6.844,-3.02 -6.844,-6.815 -0.002,-3.819 3.09,-6.826 6.916,-6.826 l 12.272,0 0,0 0,0 z" style="fill:#ffffff;fill-opacity:1;stroke:url(#linearGradient10087);stroke-width:1.5552702" id="path25828-8" />
          </g>
          <path inkscape:connector-curvature="0" d="m 723.59654,111.27823 0,6.56764 -1.28183,0 0,-6.56764 -2.14868,0 0,-1.32123 5.57735,0 0,1.32123 -2.14684,0 z m 8.93779,6.56764 0,-4.164 c 0,-0.27927 0,-0.62017 0,-0.90329 -0.0941,0.24075 -0.21026,0.52195 -0.30616,0.78581 l -1.88125,4.52223 -1.84252,-4.52223 c -0.0922,-0.26386 -0.21026,-0.54506 -0.30432,-0.76655 0.0184,0.28505 0.0184,0.62402 0.0184,0.88403 l 0,4.164 -1.2265,0 0,-7.88887 1.28552,0 1.70604,4.08311 c 0.13464,0.34282 0.28587,0.7858 0.40022,1.08241 0.11435,-0.31972 0.27113,-0.7184 0.40207,-1.08241 l 1.671,-4.08311 1.30212,0 0,7.88887 -1.22466,0 0,0 0,0 z" style="fill:#0a57a4;fill-opacity:1;stroke:url(#linearGradient10091);stroke-width:1.5552702" id="path25830-2" />
        </g>
        <g transform="matrix(2.8407906,0,0,2.8407906,-1118.1965,-1829.3627)" style="fill:#0a57a4;fill-opacity:1;stroke:url(#linearGradient18637);stroke-width:1.70651138" id="g25802-0" />
      </g>
    </g>
    <text sodipodi:linespacing="125%" id="url-main" y="1006.8026" x="48.637512" style="font-size:40px;font-style:normal;font-variant:normal;font-weight:normal;font-stretch:normal;line-height:125%;letter-spacing:0px;word-spacing:0px;fill:#072b61;fill-opacity:1;stroke:none;font-family:'Crash  Test';-inkscape-font-specification:'Crash  Test'" xml:space="preserve"><tspan style="font-size:40px;font-style:normal;font-variant:normal;font-weight:500;font-stretch:normal;fill:#072b61;fill-opacity:1;font-family:Cantarell;-inkscape-font-specification:Cantarell Medium" y="1006.8026" x="48.637512" id="tspan4287" sodipodi:role="line">rpmdev.proyectofedora.org</tspan></text>
  </g>
  <g sodipodi:insensitive="true" style="display:none" inkscape:label="Title" id="title" inkscape:groupmode="layer">
    <text id="version" y="824.0564" x="670.33057" style="font-size:40px;font-style:normal;font-variant:normal;font-weight:normal;font-stretch:normal;text-align:center;text-anchor:middle;fill:#ffffff;fill-opacity:1;fill-rule:nonzero;stroke:none;display:inline;font-family:Comfortaa;-inkscape-font-specification:Comfortaa" xml:space="preserve" transform="translate(0,-412.36218)"><tspan y="824.0564" x="670.33057" id="tspan18688" sodipodi:role="line">Versión 0.1</tspan></text>
    <text transform="matrix(0.6259636,0,0,0.6259636,275.57333,-136.74185)" sodipodi:linespacing="108%" id="text18707" y="602.66394" x="525.08728" style="font-size:24px;font-style:normal;font-variant:normal;font-weight:bold;font-stretch:normal;text-align:center;line-height:108.00000429%;letter-spacing:0.01px;text-anchor:middle;fill:#00acfc;fill-opacity:0.4627451;fill-rule:nonzero;stroke:none;display:inline;filter:url(#filter9691);font-family:Liberation Sans;-inkscape-font-specification:Liberation Sans Bold" xml:space="preserve"><tspan id="tspan9664" style="font-size:144px;font-style:normal;font-variant:normal;font-weight:normal;font-stretch:normal;line-height:108.00000429%;letter-spacing:0.01px;fill:#00acfc;fill-opacity:0.4627451;font-family:Comfortaa;-inkscape-font-specification:Comfortaa" y="602.66394" x="525.09229" sodipodi:role="line">Guía de</tspan><tspan id="tspan9666" style="font-size:144px;font-style:normal;font-variant:normal;font-weight:normal;font-stretch:normal;line-height:108.00000429%;letter-spacing:0.01px;fill:#00acfc;fill-opacity:0.4627451;font-family:Comfortaa;-inkscape-font-specification:Comfortaa" y="758.18396" x="525.09229" sodipodi:role="line">Redmine</tspan></text>
    <path sodipodi:nodetypes="cscccccccsccccccsscccccccccccccccccscccccccccccccccccccsccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccssccccccccccccccsccccccccccccscccccccccccsscccccccccccccccccccccccccccccccccccccccccccccccccccsssscccccccccccccccccsccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccsccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccscccccccccccccsccccccccccsccccccccccccccccccccsccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccssccccccccccccccccccccccccccccccccccccssscccccccccccccsscccccccssccccccccccccccccccccccccccccccccccscccccccccccccccccccsscccccccccccccccccccscccccccccccccccccccccccccccccccccscccccccccccccccccccccccccccccscccccccccccccccccccccsccccccccccccccccccccccccccccccccccscccccscccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccscccccccccccccccccccccccccccccsssccccccccccccccccccssscccccscccccccccccsccccsccccccccccccccccccccccccccccccccccsccccccssscccccccccscccccccccscccccccscccccccsccccccccccccccccccccccccccccccccccccccccccccccssscccccccccccccssssssscccss" style="fill:url(#linearGradient3923);fill-opacity:1;display:inline" d="m 245.24968,919.06645 c -0.36513,-0.0542 -1.87185,-0.5367 -3.34845,-1.07291 -1.47653,-0.53621 -3.24557,-1.53593 -3.93119,-2.22155 l -1.24654,-1.24662 0.8339,-2.19333 0.83397,-2.19341 1.25105,0 1.25113,0 0,0.87525 c 0,0.48139 0.8686,2.05064 1.93027,3.4872 1.06159,1.43657 2.19111,3.0735 2.50997,3.63761 l 0.57969,1.02565 z m 5.7077,-0.63131 -4.29517,0.31894 -2.52072,-3.57738 c -1.38635,-1.96752 -2.38705,-3.71096 -2.22369,-3.87433 0.16337,-0.16336 2.12285,0.92735 4.35441,2.42373 2.23149,1.49647 5.16501,3.0964 6.51887,3.55548 l 2.46155,0.83463 z m -14.86748,-9.33513 -2.2776,1.68387 -1.39907,-0.78294 -1.39906,-0.78293 -1.55825,0.4946 -1.55833,0.49453 -0.54762,-1.7253 -0.54761,-1.72539 -1.77495,-0.83316 -1.77503,-0.83315 -2.1203,-3.42452 c -1.16621,-1.8835 -2.78296,-5.22285 -3.59281,-7.42078 l -1.4725,-3.99626 -2.35079,-1.33711 c -1.29289,-0.73544 -2.35309,-1.58919 -2.35596,-1.89721 0,-0.3081 0.68932,-0.78056 1.53815,-1.04993 l 1.54331,-0.48985 0.50421,-2.52105 0.50421,-2.52105 -1.7139,-2.40692 -1.7139,-2.40691 0.51643,-1.34566 0.51636,-1.34565 -3.45094,-3.51633 -3.45094,-3.51626 -0.15442,-3.70505 -0.15434,-3.70506 -0.9482,-1.14249 -0.94819,-1.14257 0.51192,-8.10763 0.51193,-8.10764 -1.41072,-6.97441 -1.41072,-6.97441 -0.35036,-9.43598 c -0.19266,-5.18978 -0.35373,-10.45136 -0.35783,-11.69239 0,-1.24104 0.064,-4.56414 0.15106,-7.38468 l 0.15852,-5.12824 -0.97092,-3.47704 -0.97092,-3.47703 -3.94186,-3.94186 -3.94185,-3.94185 -5.82372,-3.06029 -5.82372,-3.06029 -2.27653,-4.70043 c -1.25211,-2.58529 -3.64508,-6.44904 -5.3177,-8.58624 l -3.04109,-3.88573 -1.00005,-3.08869 c -0.55,-1.69872 -1.87555,-4.83581 -2.94567,-6.97129 l -1.94561,-3.88278 -2.02964,-1.3299 -2.02972,-1.3299 -0.80501,-2.91555 -0.80501,-2.91563 0.42413,-0.6862 0.42412,-0.68636 3.26559,1.66598 3.26558,1.66598 0.73248,-0.45268 c 0.40287,-0.24903 1.12764,-1.6476 1.6106,-3.10805 l 0.87812,-2.6552 4.08233,-2.29113 4.08233,-2.29106 0.97297,-3.24745 0.97297,-3.24737 0.66954,0 c 0.36825,0 1.22734,1.07858 1.90902,2.39682 l 1.23948,2.3969 2.43218,1.73179 2.4321,1.73187 2.01668,-0.50609 2.01667,-0.50618 1.72793,0.92472 1.72785,0.92473 -0.86885,1.62356 -0.86893,1.62356 0.42134,0.68177 0.42133,0.68169 -3.15785,0.94614 -3.15793,0.94614 -0.79262,1.02187 c -0.43594,0.56198 -1.41031,2.96036 -2.16527,5.3296 l -1.37265,4.30773 1.57565,3.07695 1.57564,3.07695 2.44228,1.79578 2.44235,1.79587 1.6632,-0.43495 1.66327,-0.43496 0.5605,1.76609 0.56058,1.76608 1.95636,0.89141 1.95637,0.89133 0.90462,2.74087 0.90454,2.74086 -0.55082,4.40848 -0.55081,4.40849 1.23111,2.38074 1.2311,2.38073 -1.2535,2.45172 c -0.68949,1.34844 -1.85356,3.19017 -2.58686,4.09275 l -1.33317,1.64103 1.73457,-1.46216 1.73466,-1.46208 1.28723,1.96456 c 0.70803,1.08055 1.83542,4.06371 2.50538,6.62923 l 1.21814,4.66465 2.11899,2.77819 2.11907,2.7782 0,1.32629 c 0,0.72944 -0.58708,2.46156 -1.3047,3.84922 l -1.30463,2.52293 0.81634,3.21619 0.81641,3.21627 -1.89408,3.45094 -1.89417,3.45094 0.18461,5.74364 0.18454,5.74363 1.74245,3.36602 1.74246,3.36601 -0.43775,1.67378 -0.43766,1.6737 1.21051,2.31033 1.21051,2.31034 -1.16957,1.78504 -1.16965,1.78504 1.2147,3.17262 c 0.66806,1.745 1.59139,5.73223 2.05187,8.8607 l 0.83718,5.68792 3.62661,7.09544 3.62669,7.09546 0.62893,5.26798 c 0.34593,2.89742 0.72017,6.56038 0.83168,8.13988 0.11151,1.5795 0.24132,3.15662 0.28833,3.50477 0.0468,0.34814 1.00161,1.05034 2.12121,1.56046 l 2.03546,0.92743 0.48419,1.52551 0.48419,1.52551 2.36268,1.22175 2.36269,1.22184 1.92789,0 1.92797,0 0.89199,-0.89207 0.89199,-0.89198 0.47073,0.76152 0.47065,0.76152 z m 27.85392,-0.60242 c -0.49297,0 -0.89625,-0.29539 -0.89625,-0.65642 0,-0.36102 0.44308,-1.09949 0.98462,-1.64103 l 0.98462,-0.98463 -0.68907,0 c -0.37891,0 -1.13174,0.60546 -1.67287,1.34549 l -0.98389,1.34557 -1.56817,-0.91037 -1.5681,-0.91028 1.07406,-0.0246 1.07406,-0.0246 -0.50708,-0.82052 -0.50708,-0.82052 1.48432,-0.087 c 0.81633,-0.0476 2.59202,-0.0115 3.94588,0.0812 1.35385,0.0925 2.75087,0.34568 3.10443,0.56263 l 0.64288,0.39442 -2.00305,1.57564 c -1.10172,0.86655 -2.40642,1.57565 -2.89931,1.57565 z m -30.05398,-1.88194 -2.43226,0.16935 -1.75255,-0.86835 -1.75263,-0.86844 -0.86409,-1.89647 -0.86409,-1.89655 -1.69109,-0.5367 c -0.93006,-0.29522 -1.72957,-0.78876 -1.77667,-1.09679 -0.0468,-0.3081 -0.17682,-1.8524 -0.28833,-3.4319 -0.11151,-1.5795 -0.48575,-5.24246 -0.83168,-8.13988 l -0.62893,-5.26798 -3.62669,-7.09546 -3.62661,-7.09544 -0.83718,-5.68792 c -0.46048,-3.12847 -1.38381,-7.1157 -2.05187,-8.8607 l -1.2147,-3.17262 1.16965,-1.78504 1.16957,-1.78504 -1.21051,-2.31034 -1.21052,-2.31033 0.43767,-1.6737 0.43775,-1.67378 -1.74246,-3.36601 -1.74245,-3.36602 -0.18454,-5.74363 -0.18461,-5.74364 1.89416,-3.45094 1.89409,-3.45094 -0.81642,-3.21627 -0.81633,-3.21619 1.30463,-2.52293 c 0.71762,-1.38766 1.3047,-3.26674 1.3047,-4.17587 l 0,-1.65294 1.64014,-0.87771 1.64013,-0.87779 3.89837,0.49994 3.89837,0.49986 1.47439,-1.10409 1.47448,-1.10409 3.98616,3.84217 3.98608,3.84216 4.94806,1.80408 4.94806,1.80415 0.42864,1.11706 0.42864,1.11705 -0.8878,2.5469 -0.88788,2.5468 0.71729,0.71632 c 0.39459,0.39401 2.27998,0.96608 4.1899,1.27115 l 3.47244,0.55475 2.47633,-2.65077 2.47624,-2.65085 0.0328,-1.75944 0.0328,-1.75936 1.22544,2.25889 1.22545,2.25897 -0.9468,1.84363 c -0.52078,1.014 -2.43555,3.15407 -4.25513,4.75565 l -3.30825,2.91202 -0.17141,1.60083 c -0.0942,0.8805 -0.37473,2.15477 -0.62327,2.8317 -0.24853,0.67692 -0.85366,2.48584 -1.34466,4.01988 -0.49108,1.53405 -0.89281,3.44848 -0.89281,4.25431 0,0.80584 0.42847,2.50464 0.95213,3.77505 0.52366,1.27041 0.87656,2.77188 0.78425,3.33656 l -0.16779,1.02671 1.98442,0.90413 1.98435,0.90422 1.76247,3.52889 1.76239,3.52889 -0.91857,2.01609 -0.91857,2.0161 -2.81988,1.34467 -2.81979,1.34475 -3.20585,0 -3.20585,0 -0.49658,0.80353 -0.49666,0.80354 0.88731,1.65802 0.88739,1.65802 -0.96058,1.84617 c -0.52825,1.01539 -1.06077,1.96564 -1.18336,2.11177 -0.12258,0.14614 -1.40735,-0.34683 -2.85499,-1.09547 l -2.63207,-1.36108 -0.79606,0.79607 -0.79607,0.79606 1.29158,2.49766 1.29166,2.49767 1.70996,0.54277 1.70996,0.54269 -1.3902,1.53618 -1.39029,1.53617 0.50667,1.32022 0.50659,1.32023 -2.14394,2.81077 -2.14385,2.81085 1.37437,2.0975 c 0.75586,1.15365 1.93495,2.31263 2.62017,2.57561 l 1.24579,0.47803 0.75316,1.98098 0.75315,1.9809 -1.76781,3.44569 -1.76781,3.44569 -0.10314,2.87181 -0.10322,2.87182 -2.43218,0.16936 z m 24.64487,-62.18414 c -0.90257,-0.0159 -3.55703,-0.89995 -5.89871,-1.96449 l -4.25776,-1.93552 -0.54154,-2.88683 -0.54154,-2.88692 0.96411,-3.13044 c 0.53022,-1.7217 1.14552,-3.68422 1.36723,-4.36114 l 0.40312,-1.23078 0.80936,1.44165 0.80928,1.44165 3.44322,1.73425 c 1.89376,0.95377 5.10478,3.01262 7.13557,4.57513 l 3.69233,2.84105 -3.28207,-3.01713 -3.28208,-3.01705 -3.69234,-1.90426 -3.69233,-1.90426 -1.04444,-1.72982 -1.04436,-1.72982 0.83759,-1.56506 c 0.46064,-0.8608 1.9516,-2.35833 3.31317,-3.32786 l 2.47567,-1.7628 1.23948,-2.3969 1.23939,-2.39682 -1.25178,-2.42086 c -0.68858,-1.33146 -1.25187,-2.96019 -1.25187,-3.61939 l 0,-1.19854 -2.36908,-1.91911 c -1.30299,-1.05552 -4.22338,-2.91572 -6.48974,-4.13378 l -4.12073,-2.21466 -0.56418,-2.70845 c -0.31024,-1.48965 -1.23768,-3.88016 -2.06082,-5.31229 l -1.49679,-2.60375 1.06044,-0.4069 1.06035,-0.40689 0.54064,-2.15403 0.54064,-2.15403 -2.04235,-3.42476 -2.04227,-3.42477 -3.04495,-0.85432 -3.04495,-0.85433 -1.16817,-3.50444 -1.16809,-3.50443 -3.83453,-1.94308 c -2.10898,-1.06872 -5.36759,-2.35595 -7.24133,-2.86049 l -3.40696,-0.91734 -1.70759,-3.5275 c -0.93916,-1.94003 -1.70758,-3.94292 -1.70758,-4.45066 0,-0.50782 -0.35824,-1.1447 -0.79607,-1.41531 l -0.79606,-0.49206 -4.1012,1.76428 c -2.25569,0.97042 -4.51015,2.257 -5.00993,2.85918 l -0.90864,1.0949 -1.89852,-0.86499 -1.89852,-0.86508 -0.93153,-2.04457 -0.93162,-2.04465 -1.82558,0.44169 -1.82557,0.44168 -2.15846,-1.79382 -2.15854,-1.79373 -1.3454,-2.65832 -1.34549,-2.65824 1.5324,-4.72644 1.53232,-4.72635 3.61267,-1.3509 3.61258,-1.35082 0.95262,0.7753 0.95254,0.77531 0.39221,-0.65526 c 0.21571,-0.36038 0.81363,-2.70632 1.32883,-5.21326 l 0.93654,-4.55798 -1.30339,-3.11961 -1.30348,-3.11962 1.22052,-1.3486 1.22044,-1.34861 -0.85793,-1.53306 -0.85802,-1.53314 1.12116,-0.73346 1.12107,-0.73346 1.59829,0.38654 1.59837,0.38663 1.20182,-0.99135 1.20173,-0.99127 0.39467,1.174 c 0.21711,0.64575 1.30594,2.01856 2.41963,3.05069 l 2.02496,1.87669 2.5752,-1.29313 c 1.41638,-0.71123 3.17073,-2.0449 3.8987,-2.9638 l 1.32341,-1.67066 -1.24628,-3.17262 -1.24621,-3.1727 0.46786,-0.46795 0.46794,-0.46794 1.75633,0.93999 1.75623,0.9399 4.39553,-2.48067 4.39544,-2.48068 0.86835,1.04633 0.86844,1.04632 -0.82848,3.0004 -0.82848,3.00039 1.30619,2.5258 1.30618,2.52589 1.1237,0.43118 1.12379,0.43127 1.91025,-1.02737 c 1.05067,-0.56509 3.38726,-1.38282 5.19241,-1.81729 l 3.28207,-0.79 5.4846,0.14606 5.4846,0.14605 2.18324,-3.72549 2.18332,-3.72548 0.64148,0.39656 c 0.3529,0.21801 1.08349,2.15164 1.62372,4.29697 l 0.98216,3.90051 0.84448,0.52193 0.84456,0.52193 -0.99988,1.86832 c -0.54991,1.02754 -2.50135,3.2966 -4.33653,5.04234 l -3.33664,3.1741 0.93867,0.93867 0.93876,0.93876 3.70497,-3.41517 3.70506,-3.41516 1.19049,0 1.19049,0 1.33474,1.33473 1.33474,1.33474 -1.82943,1.94734 -1.82935,1.94734 -1.29289,0.052 -1.29289,0.0519 2.0133,0.80394 2.01339,0.80387 2.08921,-1.68806 c 1.14914,-0.92841 2.88864,-2.097 3.86571,-2.59686 l 1.77643,-0.90881 3.55695,1.98714 3.55695,1.98721 -0.17937,1.59993 c -0.0986,0.88001 -0.0131,2.07436 0.19036,2.65422 l 0.36973,1.05428 1.99632,-1.30807 1.99633,-1.30807 6.67919,0.91455 6.67927,0.91447 3.20438,3.20446 3.20445,3.20445 4.52073,1.31423 4.52074,1.31422 0.82831,2.9999 0.82832,2.99999 -0.87788,3.26017 -0.87787,3.26017 -2.69565,3.32983 c -1.4826,1.83148 -3.2971,4.51474 -4.03228,5.96296 -0.73519,1.44821 -2.29852,3.59502 -3.47416,4.77066 l -2.13762,2.13753 0.53293,5.07557 0.53284,5.07565 -1.3285,6.94578 -1.32858,6.94578 -1.94513,4.78691 -1.94504,4.78699 -1.88727,1.59599 -1.88728,1.59607 -2.99276,-0.46351 -2.99276,-0.46351 -0.58487,0.94639 c -0.32164,0.52045 -2.11341,1.61839 -3.98165,2.43981 -1.86824,0.82142 -4.64964,2.56363 -6.18097,3.87154 l -2.78411,2.37811 0.93687,2.83892 0.93695,2.83891 -0.75471,2.63157 c -0.4151,1.4474 -1.33769,3.46391 -2.05023,4.48118 l -1.29552,1.84962 0,1.9964 0,1.99641 -1.89146,2.53902 c -1.04034,1.39644 -2.93401,4.38518 -4.2082,6.64161 -1.27427,2.25642 -3.1,4.74055 -4.0573,5.5202 l -1.74057,1.4177 z m -9.60196,-27.94385 c -1.03689,-0.0615 -2.71608,-0.27176 -3.73148,-0.46737 l -1.84617,-0.35553 0,-0.71008 c 0,-0.39048 0.36924,-1.68132 0.82061,-2.86845 l 0.82068,-2.15846 -0.78343,-1.4638 -0.78343,-1.46381 -5.01133,-1.82721 -5.01132,-1.82722 -3.69865,-3.5439 -3.69857,-3.54391 2.06221,-4.06961 2.06221,-4.06961 2.42365,-1.00391 2.42365,-1.0039 2.54582,1.31652 c 1.40022,0.72403 2.55625,1.39931 2.56888,1.50048 0.0123,0.10126 0.68957,2.21491 1.5041,4.69699 l 1.48095,4.51285 4.44476,2.60006 c 2.44457,1.43009 5.30835,3.28208 6.36403,4.11565 l 1.91944,1.51549 -0.56985,3.03724 -0.56977,3.03723 -1.92584,2.07797 -1.92576,2.07804 z m -36.35458,-18.42049 -1.94931,1.27722 -1.77897,-2.4984 -1.77897,-2.49832 -1.21289,-4.64463 -1.21289,-4.64471 -1.60395,-2.25258 -1.60404,-2.25257 1.1946,-2.31009 1.19459,-2.31009 -0.95369,-1.61568 -0.95377,-1.61569 -0.10896,-6.56415 c -0.0599,-3.61028 -0.24452,-7.28416 -0.41026,-8.16417 l -0.3013,-1.59993 3.28208,-1.79833 c 1.80514,-0.98905 4.07002,-2.03423 5.03298,-2.32256 l 1.75091,-0.52423 0.56952,2.28145 c 0.31319,1.25482 1.30963,3.48212 2.21425,4.94954 l 1.6449,2.66808 2.18865,0.50503 c 1.20379,0.27775 4.29764,1.42894 6.87538,2.55822 l 4.68664,2.05318 0.95878,2.9789 c 0.52726,1.63841 1.31693,3.43075 1.75476,3.98288 l 0.79607,1.0039 2.59784,0.48739 2.59785,0.48739 1.85085,3.21594 1.85092,3.21595 -0.50265,2.00264 -0.50265,2.00264 -1.16645,0.44768 -1.16645,0.44759 -1.92789,-0.87837 -1.92781,-0.87844 -2.57101,1.32956 -2.57102,1.32957 -2.0545,4.05427 -2.05441,4.05427 -1.73598,0.92907 -1.73605,0.92908 -3.6532,-0.54786 -3.65328,-0.54786 z m -47.03094,-65.19362 c -0.30343,-0.0181 -1.65942,-0.62064 -3.01327,-1.33901 -1.35386,-0.71845 -2.59416,-1.42081 -2.75621,-1.56095 -0.16205,-0.14015 0.52604,-1.40736 1.52912,-2.81603 l 1.82377,-2.56125 -1.70709,-0.44636 -1.70709,-0.44644 -0.47787,-1.50574 -0.47796,-1.50582 1.79038,-3.53389 c 0.98462,-1.94357 3.54973,-5.75414 5.70014,-8.46784 l 3.90986,-4.93395 0.93933,-3.48852 0.93941,-3.48852 -0.5504,-3.0648 c -0.30269,-1.68559 -0.83636,-3.60085 -1.18598,-4.2562 l -0.63549,-1.19139 4.4331,-4.2937 4.4331,-4.29361 0,-0.91316 c 0,-0.50216 0.97699,-1.81856 2.1711,-2.92522 l 2.17109,-2.01212 1.68149,0 1.68141,0 2.22024,-2.12709 2.22016,-2.12708 1.51706,0.3569 1.51706,0.35691 -2.25741,0.92972 -2.25742,0.92972 -1.77043,3.64416 -1.77052,3.64414 1.62635,3.96557 1.62636,3.96565 1.99123,0.9573 c 1.09523,0.52653 3.62727,1.62807 5.62671,2.44785 1.99944,0.81979 4.03023,1.53282 4.51286,1.58443 0.48263,0.0516 1.3683,0.15007 1.96826,0.21883 l 1.09088,0.12497 -0.50938,2.31895 -0.50929,2.31903 0.85448,2.24757 0.85458,2.24756 -0.85605,1.59952 -0.85605,1.59944 1.29035,0.49518 1.29026,0.49511 -1.46003,1.08546 -1.46003,1.08555 -1.64104,-0.39861 -1.64104,-0.39861 -1.5507,1.13511 -1.5507,1.13519 0.8773,1.5676 0.8773,1.5676 -1.22044,1.34861 -1.22052,1.3486 1.29314,3.095 1.29314,3.09492 -0.95328,4.84549 -0.95328,4.8455 -1.19279,-1.19271 -1.19279,-1.19279 0.91455,-1.70873 0.91447,-1.70881 -2.03185,-1.3313 -2.03177,-1.33129 -2.36818,0.52013 -2.3681,0.52012 -2.3832,-2.48436 c -1.31078,-1.36641 -3.18674,-3.40015 -4.16882,-4.51942 l -1.78561,-2.03497 -2.31698,-0.48427 c -1.27435,-0.26634 -4.28319,-1.39751 -6.68633,-2.51366 -2.40306,-1.11616 -4.1812,-1.72506 -3.95129,-1.35312 0.22991,0.37202 2.19612,1.46479 4.36934,2.42841 2.17323,0.96361 4.9438,1.96251 6.15693,2.21966 l 2.20564,0.46762 -1.18795,3.48638 -1.18786,3.48631 -4.03573,2.26857 -4.03572,2.26865 -0.9431,2.85763 c -0.51874,1.5717 -1.1914,2.84277 -1.49491,2.82472 z m 46.94732,-21.87488 -2.55271,1.31898 -1.75501,-1.63513 c -0.96534,-0.89929 -1.79883,-2.08223 -1.85224,-2.62878 -0.0533,-0.54655 -0.05,-1.28091 0.008,-1.63193 0.0574,-0.35102 -0.44579,-0.8494 -1.11861,-1.10762 l -1.2234,-0.4695 0.80567,-1.50524 0.80559,-1.50533 -0.85449,-2.24756 -0.85457,-2.24757 0.49682,-2.26193 0.49683,-2.262 -1.66049,-0.88862 c -0.91323,-0.48879 -1.95989,-0.7914 -2.32576,-0.67242 -0.36595,0.11889 -2.31936,-0.47032 -4.34096,-1.30939 -2.02159,-0.83906 -4.44204,-1.8172 -5.37875,-2.17363 l -1.70307,-0.64805 -1.48382,-3.8854 -1.48383,-3.88533 1.74032,-3.5821 1.74032,-3.58213 0.72099,0 0.72108,0 -0.63558,3.47572 -0.63557,3.47575 0.85801,1.6033 0.8581,1.60337 1.56145,-1.92838 1.56153,-1.9283 -0.85334,-0.85328 c -0.46909,-0.4693 -0.85301,-1.26383 -0.85301,-1.76564 l 0,-0.91237 2.4906,-1.84141 2.49069,-1.84141 1.63973,0.52043 c 0.90183,0.28623 2.27333,1.19754 3.04781,2.02511 l 1.40818,1.50469 5.11487,1.32202 5.11479,1.32206 1.91854,-0.48154 1.91845,-0.48151 5.45564,2.60606 c 3.00064,1.43328 5.8809,3.11838 6.40062,3.74452 l 0.94491,1.13863 -0.91677,0 -0.91684,0 -1.78151,3.79006 -1.7816,3.79015 0.95689,1.53207 c 0.5262,0.84275 0.95681,1.84773 0.95681,2.23345 0,0.38565 -1.8369,1.70094 -4.08192,2.92286 l -4.08192,2.22163 -1.74984,-0.93645 -1.74976,-0.93646 -0.86811,0.86802 -0.86802,0.86811 1.24792,3.17697 1.24793,3.17697 -0.90716,1.23825 c -0.49896,0.68103 -2.0559,1.83181 -3.45981,2.55723 z m 20.00115,-1.06676 c -0.32214,0 -1.16366,-1.11763 -1.87005,-2.48363 l -1.28436,-2.48363 0.83209,-3.01344 0.83201,-3.01344 -1.04009,-1.27221 c -0.57207,-0.69974 -1.53733,-2.26751 -2.14509,-3.48393 l -1.10491,-2.21171 1.46676,-3.12166 c 0.80674,-1.71694 1.87374,-3.39293 2.37114,-3.7245 0.4974,-0.33158 1.14479,-0.6085 1.4387,-0.61539 0.29391,-0.007 1.29486,1.2764 2.22434,2.85179 l 1.69003,2.86435 2.46221,1.49737 2.46213,1.49728 -2.09249,2.94099 -2.09257,2.94091 1.20584,1.92822 c 0.66323,1.06052 1.41876,2.85327 1.67903,3.98386 l 0.47311,2.05573 -3.46111,1.43148 c -1.90361,0.78737 -3.72459,1.43156 -4.04672,1.43156 z m 9.86814,-2.91325 -1.40162,0.60086 -0.54219,-2.33101 c -0.29826,-1.28206 -1.07981,-3.191 -1.7368,-4.242 l -1.19451,-1.91099 1.80194,-2.62968 1.80194,-2.62977 4.41333,-0.0638 c 2.42734,-0.035 4.41333,0.094 4.41333,0.28694 0,0.1929 -0.36932,1.04075 -0.82068,1.88408 l -0.82061,1.53338 0.80157,2.10833 0.80156,2.10824 -0.89715,1.96892 -0.89707,1.969 -2.16076,0.37325 c -1.18844,0.20538 -2.79149,0.64378 -3.56228,0.97429 z m -81.47445,-20.34568 c -0.44932,0.1431 -2.33955,-0.51914 -4.20048,-1.47169 l -3.3835,-1.73195 0.39574,-1.51303 0.39565,-1.51304 2.30509,1.19197 2.30508,1.19205 2.91276,-1.21708 c 1.60207,-0.66938 3.75544,-1.21519 4.78535,-1.21297 l 1.87251,0.004 2.35809,1.88695 2.35809,1.88695 -1.39102,1.39102 c -0.76514,0.76514 -1.74697,1.39111 -2.18185,1.39111 l -0.79081,0 0.88017,-1.64465 0.88017,-1.64457 -2.11514,-0.96378 -2.11513,-0.9637 -2.22336,0.78426 -2.22336,0.78433 0,1.55168 0,1.55169 -0.81708,0.26035 z m -8.84224,-2.99769 c -0.15574,0 -1.3404,-1.10351 -2.63248,-2.45212 -1.29207,-1.34869 -2.98857,-2.65503 -3.77004,-2.90308 l -1.42073,-0.45096 -0.51298,-1.33672 -0.51299,-1.33675 0.64698,-0.64695 0.64698,-0.64696 3.34378,0.84875 3.34378,0.84874 1.275,2.19186 1.27501,2.19186 -0.69958,1.84616 c -0.38474,1.0154 -0.827,1.84617 -0.98273,1.84617 z m 73.06034,-4.92311 -1.64579,0 0.91389,-1.10118 0.91381,-1.10115 -0.5399,-0.53989 -0.53982,-0.53989 1.70094,0 1.70094,0 -0.42914,1.64104 -0.42913,1.64107 z m -75.08645,-4.18743 c -0.33847,-0.0466 -1.99756,-0.45198 -3.68692,-0.90075 l -3.07154,-0.81594 -2.07944,-2.47131 -2.07944,-2.4713 2.12933,-1.97344 c 1.17121,-1.08539 3.48909,-2.59398 5.15097,-3.35241 1.66188,-0.75844 3.76012,-1.63926 4.66269,-1.95739 l 1.64104,-0.57843 -1.23078,-0.0743 c -0.67693,-0.0409 -2.92425,0.75312 -4.99401,1.76438 -2.06976,1.01127 -4.40726,2.48823 -5.19438,3.28212 l -1.43115,1.44345 -0.81035,-0.5008 -0.81034,-0.50079 0.44907,-1.17026 0.44907,-1.17026 -2.43727,-1.48222 -2.43735,-1.48222 1.83911,-1.67089 1.83903,-1.6709 4.63076,-0.51367 4.63085,-0.51367 2.49627,0.49926 2.49626,0.49926 0.41133,1.07184 0.41132,1.07185 -1.17629,7.24639 c -0.6469,3.98553 -1.17761,7.52334 -1.17933,7.8618 0,0.33847 -0.28005,0.57723 -0.61851,0.53059 z m 79.38524,-0.73572 -1.094,0 0.54696,-0.54702 0.54704,-0.547 0.54704,0.547 0.54696,0.54702 z m -2.73504,-2.73506 -0.54704,0.54701 0,-1.09403 0,-1.09402 0.54704,0.54701 0.54696,0.54701 z m -23.64466,-1.79147 -0.42396,0.42393 -0.54696,-0.54701 c -0.30088,-0.30085 -0.54704,-0.92855 -0.54704,-1.39489 l 0,-0.84786 0.97092,0.97094 0.971,0.97096 z m -4.75162,-0.39659 -0.86893,0 0,-0.82052 c 0,-0.45128 0.16279,-0.82051 0.36184,-0.82051 0.19898,0 0.59004,0.36923 0.86893,0.82051 l 0.50709,0.82052 z m 30.03732,-1.09402 -0.54704,0.54701 0,-1.09402 0,-1.09403 0.54704,0.54701 0.54696,0.54702 z m 8.52708,-0.54701 -0.86893,0 0,-0.82052 c 0,-0.45129 0.16279,-0.82052 0.36185,-0.82052 0.19898,0 0.59004,0.36923 0.86893,0.82052 l 0.50708,0.82052 z m -102.09844,-1.70582 c -0.96009,-0.0356 -2.1976,-0.24782 -2.75005,-0.47156 l -1.0044,-0.40677 1.29035,-1.96929 1.29026,-1.9693 2.43883,1.26116 2.43883,1.26117 -0.97904,1.17968 -0.97905,1.17969 -1.74573,-0.0648 z m 95.2124,-1.02925 -0.54704,0.54701 0,-1.09402 0,-1.09402 0.54704,0.547 0.54696,0.54702 z m -100.24013,-0.57699 c -0.45129,0.0131 -1.94398,-0.66129 -3.3172,-1.49867 l -2.49668,-1.52253 -1.4085,-2.14967 -1.4085,-2.14968 -2.50587,-1.29583 -2.50586,-1.29585 -3.56738,1.36237 -3.56729,1.36237 -10.94482,-5.30357 -10.94491,-5.30358 -2.63091,-2.78228 -2.63099,-2.78229 0.87549,-3.44895 0.87541,-3.44895 -1.9041,-3.93353 -1.90401,-3.93353 -3.18066,-3.45079 -3.18066,-3.45078 0.4416,-0.71447 0.44152,-0.71447 -3.17992,-5.17083 -3.17992,-5.17084 -0.55746,-4.05354 -0.55755,-4.05354 -2.05646,-0.93698 -2.05647,-0.937 -1.17745,1.60857 -1.17744,1.60857 0.49133,2.0513 c 0.27027,1.12822 1.52649,4.28818 2.79165,7.02214 l 2.30024,4.97083 0.60522,4.03562 0.60513,4.03562 1.57958,3.0962 1.57958,3.09621 -0.76825,0 c -0.42257,0 -1.91977,-1.45394 -3.3272,-3.23096 l -2.55896,-3.23096 0.50848,-2.02623 0.50856,-2.02622 -2.49143,-1.84204 c -1.37035,-1.01312 -2.69278,-2.36648 -2.93877,-3.00745 l -0.44718,-1.1654 0.83873,-1.56716 0.83874,-1.56716 -2.12999,-4.20332 -2.12999,-4.20332 0.53991,-3.1958 0.5399,-3.19579 3.23334,0 3.23342,0 4.87626,2.46156 4.87635,2.46156 4.89809,0 4.89809,0 0.50708,-0.82052 0.50716,-0.82052 2.03169,0 2.03177,0 1.97047,1.29111 1.97048,1.29111 0.50872,2.31615 0.50873,2.31614 1.54429,1.39757 1.5443,1.39757 1.87382,-1.31249 c 1.03066,-0.72187 2.47297,-1.31249 3.2052,-1.31249 l 1.33129,0 1.35337,1.49548 1.35336,1.49548 1.17843,3.91548 1.17835,3.9155 1.4149,1.56344 1.4149,1.56345 1.1914,0 1.19139,0 -0.58659,1.43591 c -0.32263,0.78975 -1.30561,3.51914 -2.18447,6.06532 l -1.59796,4.62942 1.3258,5.11615 1.32571,5.11616 1.30307,1.98876 1.30306,1.98877 2.40388,1.24308 2.40387,1.24308 4.13329,-0.88644 4.13336,-0.88644 2.30763,-1.64317 2.30755,-1.64315 0.93564,-2.83491 0.93555,-2.83491 3.02099,-0.83905 c 1.66147,-0.46148 3.57476,-0.83545 4.25169,-0.83106 0.67692,0.004 1.71825,0.31706 2.31394,0.69481 l 1.08325,0.68682 -4.16143,9.22318 -4.16142,9.22317 0.46367,0.75012 0.4636,0.75012 -3.12905,3.6595 c -1.72096,2.01273 -3.49829,3.67023 -3.94957,3.68334 z m -5.20021,-5.91879 0.82413,-2.25642 1.47218,0 1.47217,0 0.88665,-1.06835 0.88666,-1.06834 -0.46778,-1.78886 -0.46778,-1.78885 2.19661,-0.83514 c 1.20814,-0.45932 2.58119,-0.83514 3.05143,-0.83514 l 0.8549,0 -0.44997,1.17252 c -0.24747,0.64487 -0.69728,2.49104 -0.99964,4.10259 l -0.54967,2.93008 1.52724,-0.0126 1.52723,-0.0125 -1.04469,-0.663 -1.04468,-0.663 0.96386,-4.1754 0.96379,-4.17541 1.92575,-1.03066 c 1.05921,-0.56685 1.76305,-1.19345 1.56408,-1.39243 -0.19906,-0.19898 -1.42098,0.39242 -2.71551,1.31421 -1.29453,0.9218 -3.33147,1.92139 -4.52639,2.22131 -1.19501,0.29993 -2.5615,1.01374 -3.03666,1.58624 l -0.86385,1.04091 0.21481,1.9219 0.21482,1.92189 -1.64104,0.30799 -1.64104,0.30798 -1.02565,1.31838 c -0.56411,0.72511 -0.99644,1.89398 -0.96083,2.59747 l 0.0648,1.27909 0.82413,-2.25643 z m 106.26086,-0.0684 -0.54704,0.54701 0,-1.09402 0,-1.09402 0.54704,0.547 0.54695,0.54702 z m -4.23938,-3.82911 c -0.22564,0 -0.41026,-0.18462 -0.41026,-0.41026 0,-0.22565 0.18462,-0.41026 0.41026,-0.41026 0.22564,0 0.41026,0.18461 0.41026,0.41026 0,0.22564 -0.18462,0.41026 -0.41026,0.41026 z m -3.64393,-1.64104 c -0.42462,0 -0.99767,-0.36501 -1.27336,-0.81113 l -0.50134,-0.81111 1.27337,0.48864 c 0.70039,0.26876 1.27344,0.63376 1.27344,0.81113 0,0.17735 -0.34749,0.32247 -0.77211,0.32247 z m 2.87182,-1.64104 c -0.19898,0 -0.59003,-0.36923 -0.86893,-0.82052 l -0.50708,-0.82052 0.86893,0 0.86893,0 0,0.82052 c 0,0.45129 -0.16287,0.82052 -0.36185,0.82052 z m 3.69234,0 -0.86893,0 0,-0.82052 c 0,-0.45129 0.16279,-0.82052 0.36185,-0.82052 0.19897,0 0.59003,0.36923 0.86893,0.82052 l 0.50708,0.82052 z m -53.79243,-2.55243 c -1.35385,-0.0213 -2.9231,-0.22492 -3.4872,-0.45254 -0.56411,-0.22762 -1.02565,-0.75233 -1.02565,-1.166 l 0,-0.75215 1.8945,0 1.89441,0 1.59279,1.20469 1.59271,1.20468 -2.46156,-0.0386 z m 19.07708,0.0659 c -0.11282,-0.0137 -0.8654,-0.4092 -1.67238,-0.87883 l -1.46726,-0.85388 -2.2748,0.49962 -2.27481,0.49963 -2.00158,-0.80065 -2.00157,-0.80066 3.35617,0.0784 3.35625,0.0784 0.95377,-0.58944 0.95369,-0.58943 -0.85162,-1.59124 -0.85161,-1.59125 2.49044,0 2.49044,0 0,3.28208 c 0,1.80514 -0.0923,3.27085 -0.20513,3.25713 z m 1.64104,-0.8114 -0.61539,0.0158 0,-2.97438 0,-2.97439 2.45803,0.49161 c 1.35197,0.27038 3.43682,1.13293 4.63314,1.91677 l 2.17503,1.42515 -4.01775,1.04179 c -2.20974,0.57299 -4.2946,1.04891 -4.63306,1.05762 z m 20.30785,-0.80469 c -0.67693,0 -1.23078,-0.14512 -1.23078,-0.32247 0,-0.17737 0.55385,-0.535 1.23078,-0.79477 l 1.23078,-0.47229 0,0.79476 0,0.79477 z m 4.10259,0 c -0.22564,0 -0.41026,-0.18462 -0.41026,-0.41026 0,-0.22564 0.18462,-0.41026 0.41026,-0.41026 0.22565,0 0.41026,0.18462 0.41026,0.41026 0,0.22564 -0.18461,0.41026 -0.41026,0.41026 z m -60.30816,-4.1026 -1.094,0 0.54696,-0.54701 0.54704,-0.54701 0.54704,0.54701 0.54696,0.54701 z m 21.26515,-1.72282 c -0.71459,0.045 -1.50639,-0.12544 -1.75969,-0.37871 -0.25329,-0.25327 -1.98532,-0.48154 -3.84905,-0.50726 l -3.38858,-0.0468 0.83127,-1.00158 0.83118,-1.00158 -4.11343,-2.66546 -4.1135,-2.66546 -2.92639,-0.808 -2.92638,-0.80802 -3.22398,1.28997 c -1.77323,0.70949 -3.40114,1.28998 -3.61767,1.28998 -0.21645,0 -0.39361,-0.31316 -0.39361,-0.6959 l 0,-0.6959 3.23236,-1.45762 3.23243,-1.4576 4.76763,0.36243 4.76771,0.36244 3.69234,1.84245 c 2.03078,1.01335 5.35389,2.73137 7.38467,3.81781 2.03079,1.08645 4.4308,2.42489 5.33338,2.97431 l 1.64103,0.99894 -2.05129,0.58486 c -1.12822,0.32169 -2.63592,0.62169 -3.35043,0.66667 z m 4.78634,-6.49493 -1.84617,-0.0126 1.23078,-0.79539 c 0.67692,-0.43747 1.5077,-0.80105 1.84616,-0.80796 0.33847,-0.007 0.61539,0.35667 0.61539,0.80796 l 0,0.82052 -1.84616,-0.0126 z m 6.36386,-2.74127 -2.04531,0.118 0.45326,-0.73338 0.45325,-0.73338 1.59263,0 1.59263,0 -5.8e-4,0.61538 -5.7e-4,0.61539 z m -7.79977,-2.98977 -1.094,0 0.54696,-0.54702 0.54704,-0.547 0.54704,0.547 0.54695,0.54702 z m -0.27348,-3.55558 -0.54704,0.54701 0,-1.09403 0,-1.09402 0.54704,0.54701 0.54696,0.54701 z m -8.00515,-1.06458 -0.48362,0.52762 -1.25547,-1.44094 -1.2554,-1.44093 0.37153,-1.02565 c 0.20439,-0.56411 0.75308,-1.02565 1.21938,-1.02565 l 0.84784,0 -0.41879,1.60169 -0.41888,1.6017 0.93851,0.33727 0.93859,0.33727 z m 0.89395,-4.40555 -1.094,0 0.54696,-0.54702 0.54704,-0.54701 0.54704,0.54701 0.54696,0.54702 z m 3.07457,-1.98052 c -0.22564,0.22564 -0.64919,-0.21237 -0.94122,-0.97335 -0.29202,-0.76098 -0.34634,-1.56823 -0.1207,-1.79387 0.22565,-0.22564 0.6492,0.21237 0.94122,0.97335 0.29203,0.76098 0.34634,1.56822 0.1207,1.79387 z m -5.75102,-0.48104 c -0.18265,0 -0.33215,-0.55385 -0.33215,-1.23078 l 0,-1.23078 1.56293,0 1.56284,0 -1.23078,1.23078 c -0.67692,0.67693 -1.38019,1.23078 -1.56284,1.23078 z" id="mapita-latam" inkscape:connector-curvature="0" transform="translate(0,-412.36218)" />
  </g>
  <g ns1:transitionOut="name:fade;length:800" ns1:transitionIn="name:fade;length:800" inkscape:groupmode="layer" id="slide1" inkscape:label="TOC" style="display:none">
    <text xml:space="preserve" style="font-size:40px;font-style:normal;font-variant:normal;font-weight:normal;font-stretch:normal;text-align:center;text-anchor:middle;fill:#ffffff;fill-opacity:1;fill-rule:nonzero;stroke:none;display:inline;font-family:Comfortaa;-inkscape-font-specification:Comfortaa" x="417.98557" y="102.14464" id="text19019"><tspan sodipodi:role="line" id="tspan19021" x="417.98557" y="102.14464" style="font-size:56px;font-weight:normal;-inkscape-font-specification:Comfortaa">Contenidos</tspan></text>
    <text sodipodi:linespacing="167%" id="text20558" y="311.29752" x="105.21875" style="font-size:40px;font-style:normal;font-variant:normal;font-weight:normal;font-stretch:normal;text-align:start;line-height:166.99999571%;text-anchor:start;fill:#ffffff;fill-opacity:1;fill-rule:nonzero;stroke:none;font-family:Comfortaa;-inkscape-font-specification:Comfortaa" xml:space="preserve"><tspan id="tspan20576" y="311.29752" x="105.21875" sodipodi:role="line" /></text>
    <text sodipodi:linespacing="180%" id="text3268" y="217.05736" x="116.50873" style="font-size:40px;font-style:normal;font-variant:normal;font-weight:normal;font-stretch:normal;text-align:start;line-height:179.99999523%;text-anchor:start;fill:#ffffff;fill-opacity:1;fill-rule:nonzero;stroke:none;font-family:Comfortaa;-inkscape-font-specification:Comfortaa" xml:space="preserve"><tspan y="217.05736" x="116.50873" id="tspan3270" sodipodi:role="line"># Wiki</tspan><tspan id="tspan3272" y="289.05734" x="116.50873" sodipodi:role="line">* Textile</tspan><tspan id="tspan3282" y="361.05734" x="116.50873" sodipodi:role="line">* Versiones</tspan><tspan id="tspan3288" y="433.05734" x="116.50873" sodipodi:role="line"># Peticiones</tspan></text>
    <text xml:space="preserve" style="font-size:40px;font-style:normal;font-variant:normal;font-weight:normal;font-stretch:normal;text-align:start;line-height:179.99999523%;text-anchor:start;fill:#ffffff;fill-opacity:1;fill-rule:nonzero;stroke:none;font-family:Comfortaa;-inkscape-font-specification:Comfortaa" x="456.50873" y="217.05736" id="text3294" sodipodi:linespacing="180%"><tspan sodipodi:role="line" id="tspan3296" x="456.50873" y="217.05736">#Actividad</tspan><tspan id="tspan3313" sodipodi:role="line" x="456.50873" y="289.05734"># Documentos</tspan><tspan sodipodi:role="line" x="456.50873" y="361.05734" id="tspan3298"># Archivos</tspan><tspan id="tspan3306" sodipodi:role="line" x="456.50873" y="433.05734"># Foros</tspan><tspan sodipodi:role="line" x="456.50873" y="505.05734" id="tspan3304" /></text>
  </g>
  <g sodipodi:insensitive="true" inkscape:groupmode="layer" id="slide2" inkscape:label="Wiki features" style="display:none" ns1:transitionIn="name:fade;length:800" ns1:transitionOut="name:fade;length:800">
    <text id="text19057" y="102.14464" x="417.98557" style="font-size:40px;font-style:normal;font-variant:normal;font-weight:normal;font-stretch:normal;text-align:center;text-anchor:middle;fill:#ffffff;fill-opacity:1;fill-rule:nonzero;stroke:none;display:inline;font-family:Comfortaa;-inkscape-font-specification:Comfortaa" xml:space="preserve"><tspan style="font-size:56px;font-weight:normal;-inkscape-font-specification:Comfortaa" y="102.14464" x="417.98557" id="tspan19059" sodipodi:role="line">Wiki</tspan></text>
    <text sodipodi:linespacing="180%" id="text3317" y="217.05736" x="245.42154" style="font-size:48px;font-style:normal;font-variant:normal;font-weight:normal;font-stretch:normal;text-align:start;line-height:179.99999523%;letter-spacing:0.02px;text-anchor:start;fill:#ffffff;fill-opacity:1;fill-rule:nonzero;stroke:none;font-family:Comfortaa;-inkscape-font-specification:Comfortaa" xml:space="preserve"><tspan y="217.05736" x="245.42154" id="tspan3319" sodipodi:role="line"># Sintaxis textile</tspan><tspan style="font-size:40px;line-height:179.99999523%;letter-spacing:0.02px" id="tspan3321" y="292.12079" x="245.42154" sodipodi:role="line">* Por todas partes</tspan><tspan id="tspan3323" style="font-size:48px;line-height:179.99999523%;letter-spacing:0.02px" y="375.45737" x="245.42154" sodipodi:role="line"># Versionado</tspan><tspan id="tspan3325" style="font-size:48px;line-height:179.99999523%;letter-spacing:0.02px" y="461.85736" x="245.42154" sodipodi:role="line"># Permisos</tspan></text>
  </g>
  <g sodipodi:insensitive="true" style="display:none" inkscape:label="Textile syntax" id="slide3" inkscape:groupmode="layer" ns1:transitionIn="name:fade;length:800" ns1:transitionOut="name:fade;length:800">
    <text xml:space="preserve" style="font-size:40px;font-style:normal;font-variant:normal;font-weight:normal;font-stretch:normal;text-align:center;text-anchor:middle;fill:#ffffff;fill-opacity:1;fill-rule:nonzero;stroke:none;display:inline;font-family:Comfortaa;-inkscape-font-specification:Comfortaa" x="427.73068" y="102.14464" id="text19750"><tspan sodipodi:role="line" id="tspan19752" x="427.73068" y="102.14464" style="font-size:56px;font-weight:normal;-inkscape-font-specification:Comfortaa">Textile</tspan></text>
    <text sodipodi:linespacing="180%" id="text3343" y="217.05736" x="287.2818" style="font-size:48px;font-style:normal;font-variant:normal;font-weight:normal;font-stretch:normal;text-align:start;line-height:179.99999523%;text-anchor:start;fill:#ffffff;fill-opacity:1;fill-rule:nonzero;stroke:none;font-family:Comfortaa;-inkscape-font-specification:Comfortaa" xml:space="preserve"><tspan y="217.05736" x="287.2818" id="tspan3345" sodipodi:role="line"># Fuentes</tspan><tspan id="tspan3347" y="303.45737" x="287.2818" sodipodi:role="line"># Estructura</tspan><tspan id="tspan3349" y="389.85736" x="287.2818" sodipodi:role="line"># Enlaces</tspan><tspan id="tspan3351" y="476.25735" x="287.2818" sodipodi:role="line"># Adjuntos</tspan></text>
  </g>
  <g ns1:transitionOut="name:fade;length:800" ns1:transitionIn="name:fade;length:800" inkscape:groupmode="layer" id="slide4" inkscape:label="textile-inline-fonts" style="display:none" sodipodi:insensitive="true">
    <text xml:space="preserve" style="font-size:40px;font-style:normal;font-variant:normal;font-weight:normal;font-stretch:normal;text-align:start;line-height:131.99999332%;text-anchor:start;fill:#ffffff;fill-opacity:1;fill-rule:nonzero;stroke:none;display:inline;font-family:Comfortaa;-inkscape-font-specification:Comfortaa" x="261.38165" y="102.14464" id="text19349" sodipodi:linespacing="131.99999%"><tspan sodipodi:role="line" x="261.38165" y="102.14464" style="font-size:40px;font-weight:normal;text-align:start;line-height:131.99999332%;text-anchor:start;-inkscape-font-specification:Comfortaa" id="tspan19498"><tspan id="tspan19770" style="font-size:56px;font-weight:normal;text-align:start;text-anchor:start;-inkscape-font-specification:Comfortaa">Textile:</tspan>Fuentes</tspan></text>
    <text ns1:effectIn="name:fade;order:1;length:800" xml:space="preserve" style="font-size:48px;font-style:italic;font-variant:normal;font-weight:normal;font-stretch:normal;text-align:start;line-height:150%;text-anchor:start;fill:#ffffff;fill-opacity:1;fill-rule:nonzero;stroke:none;font-family:Comfortaa;-inkscape-font-specification:Comfortaa Italic" x="116.50873" y="217.05736" id="text19515" sodipodi:linespacing="150%"><tspan sodipodi:role="line" id="tspan19517" x="116.50873" y="217.05736" style="font-size:40px;font-style:normal;font-weight:normal;line-height:150%;-inkscape-font-specification:Comfortaa">*negrita*</tspan><tspan sodipodi:role="line" x="116.50873" y="277.05737" style="font-size:40px;font-style:normal;font-weight:normal;line-height:150%;-inkscape-font-specification:Comfortaa" id="tspan19527">_cursiva_</tspan><tspan sodipodi:role="line" x="116.50873" y="337.05737" style="font-size:40px;font-style:normal;font-weight:normal;line-height:150%;-inkscape-font-specification:Comfortaa" id="tspan19531">@código@</tspan><tspan sodipodi:role="line" x="116.50873" y="397.05737" style="font-size:40px;font-style:normal;font-weight:normal;line-height:150%;-inkscape-font-specification:Comfortaa" id="tspan19535">??cita??</tspan><tspan id="tspan3353" sodipodi:role="line" x="116.50873" y="457.05737" style="font-size:40px;font-style:normal;font-weight:normal;line-height:150%;-inkscape-font-specification:Comfortaa">+subrayado+</tspan><tspan id="tspan3355" sodipodi:role="line" x="116.50873" y="517.05737" style="font-size:40px;font-style:normal;font-weight:normal;line-height:150%;-inkscape-font-specification:Comfortaa">-suprimido-</tspan></text>
    <text sodipodi:linespacing="150%" id="text19554" y="217.05736" x="427.73068" style="font-size:40px;font-style:italic;font-variant:normal;font-weight:normal;font-stretch:normal;text-align:start;line-height:150%;text-anchor:start;fill:#ffffff;fill-opacity:1;fill-rule:nonzero;stroke:none;font-family:Comfortaa;-inkscape-font-specification:Comfortaa Italic" xml:space="preserve" ns1:effectIn="name:fade;order:1;length:800"><tspan id="tspan19560" style="font-size:40px;font-style:normal;font-weight:normal;line-height:150%;-inkscape-font-specification:Comfortaa" y="217.05736" x="427.73068" sodipodi:role="line">&lt;pre&gt;</tspan><tspan style="font-size:40px;font-style:normal;font-weight:normal;line-height:150%;-inkscape-font-specification:Comfortaa" y="277.05737" x="427.73068" sodipodi:role="line" id="tspan19564">bloque de código</tspan><tspan id="tspan19562" style="font-size:40px;font-style:normal;font-weight:normal;line-height:150%;-inkscape-font-specification:Comfortaa" y="337.05737" x="427.73068" sodipodi:role="line">&lt;/pre&gt;</tspan></text>
    <rect ns1:effectIn="name:fade;order:3;length:1200" y="350.64355" x="405.39175" height="197.82507" width="438.92221" id="rect3906" style="opacity:0.49652782;fill:#ffffff;fill-opacity:1;fill-rule:nonzero;stroke:none;display:inline;filter:url(#filter4107)" />
    <text ns1:effectIn="name:fade;order:3;length:1200" id="text3920" y="382.79297" x="429.08087" style="font-size:24px;font-style:normal;font-variant:normal;font-weight:bold;font-stretch:normal;text-align:start;text-anchor:start;fill:#000000;fill-opacity:1;fill-rule:nonzero;stroke:none;display:inline;font-family:Droid Sans;-inkscape-font-specification:Droid Sans Bold" xml:space="preserve"><tspan style="font-size:28px;font-style:normal;font-variant:normal;font-weight:normal;font-stretch:normal;font-family:Comfortaa;-inkscape-font-specification:Comfortaa" y="382.79297" x="429.08087" id="tspan3922" sodipodi:role="line">Textile</tspan><tspan id="tspan3924" style="font-weight:bold;-inkscape-font-specification:Droid Sans Bold" y="414.1608" x="429.08087" sodipodi:role="line">*bold*</tspan><tspan id="tspan3926" style="font-style:italic;font-weight:normal;-inkscape-font-specification:Droid Sans Italic" y="444.1608" x="429.08087" sodipodi:role="line">_italic_</tspan><tspan id="tspan3956" style="font-style:italic;font-weight:bold;-inkscape-font-specification:Droid Sans Bold Italic" y="474.1608" x="429.08087" sodipodi:role="line">_*italicbold*_</tspan><tspan id="tspan3928" style="font-style:normal;font-variant:normal;font-weight:normal;font-stretch:normal;font-family:Droid Sans Mono;-inkscape-font-specification:Droid Sans Mono" y="504.1608" x="429.08087" sodipodi:role="line">@code@</tspan><tspan id="tspan3930" style="font-weight:normal;-inkscape-font-specification:Droid Sans" y="534.16083" x="429.08087" sodipodi:role="line">+underline+</tspan></text>
    <text ns1:effectIn="name:fade;order:3;length:1200" id="text3938" y="382.99329" x="835.10516" style="font-size:24px;font-style:normal;font-variant:normal;font-weight:normal;font-stretch:normal;text-align:end;text-anchor:end;fill:#000000;fill-opacity:1;fill-rule:nonzero;stroke:none;display:inline;font-family:Droid Sans;-inkscape-font-specification:Droid Sans" xml:space="preserve"><tspan style="font-size:28px;font-style:normal;font-variant:normal;font-weight:normal;font-stretch:normal;text-align:end;text-anchor:end;font-family:Comfortaa;-inkscape-font-specification:Comfortaa" y="382.99329" x="835.10516" id="tspan3940" sodipodi:role="line">MediaWiki</tspan><tspan style="font-style:normal;font-weight:bold;text-align:end;text-anchor:end;-inkscape-font-specification:Droid Sans Bold" id="tspan3944" y="414.36111" x="835.10516" sodipodi:role="line">'''negrita'''</tspan><tspan style="font-style:italic;font-weight:normal;text-align:end;text-anchor:end;-inkscape-font-specification:Droid Sans Italic" id="tspan3948" y="444.36111" x="835.10516" sodipodi:role="line">''cursiva''</tspan><tspan style="font-style:italic;font-weight:bold;text-align:end;text-anchor:end;-inkscape-font-specification:Droid Sans Bold Italic" id="tspan3958" y="474.36111" x="835.10516" sodipodi:role="line">'''''anidadas'''''</tspan><tspan id="tspan3960" style="font-style:normal;font-variant:normal;font-weight:normal;font-stretch:normal;text-align:end;text-anchor:end;font-family:Droid Sans Mono;-inkscape-font-specification:Droid Sans Mono" y="504.36111" x="835.10516" sodipodi:role="line">&lt;nowiki&gt;&lt;/nowiki&gt;</tspan><tspan id="tspan3962" style="font-style:normal;font-variant:normal;font-weight:normal;font-stretch:normal;text-align:end;text-anchor:end;font-family:Droid Sans;-inkscape-font-specification:Droid Sans" y="534.36115" x="835.10516" sodipodi:role="line">&lt;u&gt;subrayado&lt;/u&gt;</tspan><tspan id="tspan3950" y="564.36115" x="835.10516" sodipodi:role="line" /></text>
    <path ns1:effectIn="name:fade;order:3;length:1200" inkscape:connector-curvature="0" id="path3964" d="m 431.33797,539.66136 130.91174,0 0,0" style="fill:none;stroke:#000000;stroke-width:1px;stroke-linecap:butt;stroke-linejoin:miter;stroke-opacity:1;display:inline" />
    <path ns1:effectIn="name:fade;order:3;length:1200" sodipodi:nodetypes="cc" inkscape:connector-curvature="0" id="path3966" d="m 631.09123,541.91846 203.42104,0" style="fill:none;stroke:#000000;stroke-width:1px;stroke-linecap:butt;stroke-linejoin:miter;stroke-opacity:1;display:inline" />
  </g>
  <g sodipodi:insensitive="true" inkscape:groupmode="layer" id="slide5" inkscape:label="textile-outline" style="display:none" ns1:transitionIn="name:fade;length:800" ns1:transitionOut="name:fade;length:800">
    <text sodipodi:linespacing="131.99999%" id="text19506" y="102.14464" x="261.96805" style="font-size:40px;font-style:normal;font-variant:normal;font-weight:normal;font-stretch:normal;text-align:start;line-height:131.99999332%;text-anchor:start;fill:#ffffff;fill-opacity:1;fill-rule:nonzero;stroke:none;display:inline;font-family:Comfortaa;-inkscape-font-specification:Comfortaa" xml:space="preserve"><tspan style="font-size:56px;font-weight:normal;text-align:start;line-height:131.99999332%;text-anchor:start;-inkscape-font-specification:Comfortaa" y="102.14464" x="261.96805" sodipodi:role="line" id="tspan19832">Textile:<tspan id="tspan3167" style="font-size:40px;text-align:start;text-anchor:start">Estructura</tspan></tspan></text>
    <text ns1:effectIn="name:fade;order:1;length:1200" xml:space="preserve" style="font-size:40px;font-style:normal;font-variant:normal;font-weight:normal;font-stretch:normal;text-align:start;line-height:166.99999571%;text-anchor:start;fill:#ffffff;fill-opacity:1;fill-rule:nonzero;stroke:none;display:inline;font-family:Comfortaa;-inkscape-font-specification:Comfortaa" x="69.860443" y="184.11771" id="text19602" sodipodi:linespacing="167%"><tspan style="font-size:48px" sodipodi:role="line" x="69.860443" y="184.11771" id="tspan19604">h1. Header nivel 1</tspan><tspan id="tspan3172" style="font-size:40px" sodipodi:role="line" x="69.860443" y="253.7599">h2. Header nivel 2</tspan><tspan id="tspan3174" style="font-size:36px" sodipodi:role="line" x="69.860443" y="315.30099">h3. Header nivel 3</tspan><tspan style="font-size:36px" sodipodi:role="line" x="69.860443" y="375.42099" id="tspan19614" /></text>
    <text id="text3185" y="384.31421" x="72.11969" style="font-size:36px;font-style:normal;font-variant:normal;font-weight:normal;font-stretch:normal;text-align:start;text-anchor:start;fill:#ffffff;fill-opacity:1;fill-rule:nonzero;stroke:none;font-family:Comfortaa;-inkscape-font-specification:Comfortaa" xml:space="preserve" ns1:effectIn="name:fade;order:2;length:1200"><tspan y="384.31421" x="72.11969" id="tspan3187" sodipodi:role="line">Listas numeradas (&lt;ol&gt;)</tspan><tspan id="tspan3189" y="429.31421" x="72.11969" sodipodi:role="line"># Crea tu cuenta</tspan><tspan id="tspan3191" y="474.31421" x="72.11969" sodipodi:role="line"># Elige un proyecto</tspan><tspan id="tspan3193" y="519.31421" x="72.11969" sodipodi:role="line"># Encuentra tus tareas</tspan></text>
    <rect ns1:effectIn="name:fade;order:3;length:1200" transform="matrix(0.79357692,0,0,1.8267278,116.54982,-153.76657)" y="185.9942" x="482.78326" height="197.82507" width="438.92221" id="rect3906-7" style="opacity:0.49652782;fill:#ffffff;fill-opacity:1;fill-rule:nonzero;stroke:none;display:inline;filter:url(#filter4107-4)" />
    <g id="g3245" ns1:effectIn="name:fade;order:3;length:1200">
      <text xml:space="preserve" style="font-size:40px;font-style:normal;font-variant:normal;font-weight:normal;font-stretch:normal;text-align:start;line-height:166.99999571%;text-anchor:start;fill:#000000;fill-opacity:1;fill-rule:nonzero;stroke:none;display:inline;font-family:Comfortaa;-inkscape-font-specification:Comfortaa" x="509.86047" y="224.11771" id="text3195" sodipodi:linespacing="167%"><tspan style="font-size:36px;fill:#000000" sodipodi:role="line" x="509.86047" y="224.11771" id="tspan3203">Listas sin ordenar</tspan><tspan style="font-size:36px;fill:#000000" sodipodi:role="line" x="509.86047" y="284.2377" id="tspan3211">* Similar a reST</tspan><tspan style="font-size:36px;fill:#000000" sodipodi:role="line" x="509.86047" y="344.3577" id="tspan3213">** Niveles anidados</tspan><tspan style="font-size:36px;fill:#000000" sodipodi:role="line" x="509.86047" y="404.47769" id="tspan3215">** Igual a MediaWiki</tspan><tspan style="font-size:36px;fill:#000000" sodipodi:role="line" x="509.86047" y="464.59769" id="tspan3217">** u org-mode</tspan><tspan style="font-size:36px;fill:#000000" sodipodi:role="line" x="509.86047" y="524.71771" id="tspan3219">* <tspan id="tspan3254" style="font-style:italic;-inkscape-font-specification:Comfortaa Italic">¿Complejo?</tspan> LOL</tspan></text>
    </g>
  </g>
  <g sodipodi:insensitive="true" ns1:transitionOut="name:fade;length:800" ns1:transitionIn="name:fade;length:800" inkscape:groupmode="layer" id="slide7" inkscape:label="textile-links-wikis" style="display:none">
    <text xml:space="preserve" style="font-size:40px;font-style:normal;font-variant:normal;font-weight:normal;font-stretch:normal;text-align:start;line-height:150%;text-anchor:start;fill:#ffffff;fill-opacity:1;fill-rule:nonzero;stroke:none;display:inline;font-family:Comfortaa;-inkscape-font-specification:Comfortaa" x="261.38165" y="102.14464" id="text19647" sodipodi:linespacing="150%"><tspan sodipodi:role="line" x="261.38165" y="102.14464" style="font-size:40px;font-weight:normal;text-align:start;line-height:131.99999332%;text-anchor:start;-inkscape-font-specification:Comfortaa" id="tspan19948"><tspan id="tspan19860" style="font-size:56px;font-weight:normal;text-align:start;text-anchor:start;-inkscape-font-specification:Comfortaa">Textile:</tspan>Enlaces</tspan></text>
    <text ns1:effectIn="name:fade;order:1;length:1200" xml:space="preserve" style="font-size:40px;font-style:normal;font-variant:normal;font-weight:normal;font-stretch:normal;text-align:start;line-height:166.99999571%;text-anchor:start;fill:#ffffff;fill-opacity:1;fill-rule:nonzero;stroke:none;display:inline;font-family:Comfortaa;-inkscape-font-specification:Comfortaa" x="69.860443" y="253.20482" id="text19663" sodipodi:linespacing="167%"><tspan style="font-size:40px" sodipodi:role="line" x="69.860443" y="253.20482" id="tspan19671">[[Página Wiki]]</tspan><tspan style="font-size:40px" sodipodi:role="line" x="69.860443" y="320.00482" id="tspan19940">[[Wiki|Otro texto]]</tspan><tspan style="font-size:40px" sodipodi:role="line" x="69.860443" y="386.80481" id="tspan19916">[[proyecto:Wiki]]</tspan><tspan style="font-size:40px" sodipodi:role="line" x="69.860443" y="453.60483" id="tspan19918">[[Wiki#sección]]</tspan></text>
    <text id="text3260" y="167.58105" x="427.73068" style="font-size:36px;font-style:normal;font-variant:normal;font-weight:normal;font-stretch:normal;text-align:center;text-anchor:middle;fill:#ffffff;fill-opacity:1;fill-rule:nonzero;stroke:none;font-family:Comfortaa;-inkscape-font-specification:Comfortaa" xml:space="preserve"><tspan style="font-size:40px;text-align:center;text-anchor:middle" y="167.58105" x="427.73068" id="tspan3262" sodipodi:role="line">A páginas Wikis</tspan></text>
    <rect ns1:effectIn="name:fade;order:3;length:800" transform="matrix(0.53476527,0,0,1.382894,263.8257,-48.122513)" y="185.9942" x="482.78326" height="197.82507" width="438.92221" id="rect3906-7-4" style="opacity:0.49652782;fill:#ffffff;fill-opacity:1;fill-rule:nonzero;stroke:none;display:inline;filter:url(#filter4107-4-2)" />
    <text sodipodi:linespacing="189%" id="text3264" y="253.20482" x="551.86047" style="font-size:36px;font-style:normal;font-variant:normal;font-weight:normal;font-stretch:normal;text-align:start;line-height:188.99999857%;text-anchor:start;fill:#0e0eaf;fill-opacity:1;fill-rule:nonzero;stroke:none;display:inline;font-family:Comfortaa;-inkscape-font-specification:Comfortaa" xml:space="preserve" ns1:effectIn="name:fade;order:3;length:800"><tspan id="tspan3266" y="253.20482" x="551.86047" sodipodi:role="line" style="font-size:36px;line-height:188.99999857%;fill:#0e0eaf;fill-opacity:1">Página Wiki</tspan><tspan id="tspan3268" y="321.24481" x="551.86047" sodipodi:role="line" style="font-size:36px;line-height:188.99999857%;fill:#0e0eaf;fill-opacity:1">Otro texto</tspan><tspan id="tspan3271" y="389.28482" x="551.86047" sodipodi:role="line" style="font-size:36px;line-height:188.99999857%;fill:#0e0eaf;fill-opacity:1">Wiki</tspan><tspan id="tspan3273" y="457.32483" x="551.86047" sodipodi:role="line" style="font-size:36px;line-height:188.99999857%;fill:#0e0eaf;fill-opacity:1">Wiki</tspan></text>
    <text id="text4067" y="204.64217" x="754.11395" style="font-size:32px;font-style:normal;font-variant:normal;font-weight:normal;font-stretch:normal;text-align:end;text-anchor:end;fill:#0e0eaf;fill-opacity:1;fill-rule:nonzero;stroke:none;font-family:Comfortaa;-inkscape-font-specification:Comfortaa" xml:space="preserve" ns1:effectIn="name:fade;order:2;length:800"><tspan style="font-size:32px;text-align:end;text-anchor:end;fill:#ffffff" y="204.64217" x="754.11395" id="tspan4069" sodipodi:role="line">así se ve</tspan></text>
    <text ns1:effectIn="name:fade;order:4;length:800" id="text4071" y="506.78305" x="427.73068" style="font-size:36px;font-style:normal;font-variant:normal;font-weight:normal;font-stretch:normal;text-align:end;text-anchor:end;fill:#ffffff;fill-opacity:1;fill-rule:nonzero;stroke:none;font-family:Comfortaa;-inkscape-font-specification:Comfortaa" xml:space="preserve"><tspan style="font-size:28px;text-align:center;text-anchor:middle" y="506.78305" x="427.73068" id="tspan4073" sodipodi:role="line">Y se pueden combinar</tspan></text>
  </g>
  <g style="display:none" inkscape:label="textile-links-by-ids" id="slide8" inkscape:groupmode="layer" ns1:transitionIn="name:fade;length:800" ns1:transitionOut="name:fade;length:800" sodipodi:insensitive="true">
    <text sodipodi:linespacing="150%" id="text19954" y="102.14464" x="261.98425" style="font-size:40px;font-style:normal;font-variant:normal;font-weight:normal;font-stretch:normal;text-align:start;line-height:150%;text-anchor:start;fill:#ffffff;fill-opacity:1;fill-rule:nonzero;stroke:none;display:inline;font-family:Comfortaa;-inkscape-font-specification:Comfortaa" xml:space="preserve"><tspan id="tspan19960" style="font-size:40px;font-weight:normal;text-align:start;line-height:131.99999332%;text-anchor:start;-inkscape-font-specification:Comfortaa" y="102.14464" x="261.98425" sodipodi:role="line"><tspan style="font-size:56px;font-weight:normal;text-align:start;text-anchor:start;-inkscape-font-specification:Comfortaa" id="tspan19958">Textile:</tspan>Enlaces</tspan></text>
    <text sodipodi:linespacing="167%" id="text19962" y="272.29022" x="69.860443" style="font-size:40px;font-style:normal;font-variant:normal;font-weight:normal;font-stretch:normal;text-align:start;line-height:166.99999571%;text-anchor:start;fill:#ffffff;fill-opacity:1;fill-rule:nonzero;stroke:none;display:inline;font-family:Comfortaa;-inkscape-font-specification:Comfortaa" xml:space="preserve" ns1:effectIn="name:fade;order:1;length:800"><tspan id="tspan19964" y="272.29022" x="69.860443" sodipodi:role="line" style="font-size:36px;text-align:start;text-anchor:start">* A peticiones: #394</tspan><tspan id="tspan19966" y="327.15131" x="69.860443" sodipodi:role="line" style="font-size:32px;text-align:start;text-anchor:start">* A documentos:</tspan><tspan id="tspan4100" y="380.59131" x="69.860443" sodipodi:role="line" style="font-size:32px;text-align:start;text-anchor:start">** document#13 (por Id)</tspan><tspan id="tspan19970" y="434.03131" x="69.860443" sodipodi:role="line" style="font-size:32px;text-align:start;text-anchor:start">** document#Título</tspan><tspan id="tspan4108" y="487.47131" x="69.860443" sodipodi:role="line" style="font-size:32px;text-align:start;text-anchor:start">** document#&quot;Con espacios&quot;</tspan></text>
    <text id="text3260-0" y="183.29425" x="427.73068" style="font-size:36px;font-style:normal;font-variant:normal;font-weight:normal;font-stretch:normal;text-align:center;text-anchor:middle;fill:#ffffff;fill-opacity:1;fill-rule:nonzero;stroke:none;display:inline;font-family:Comfortaa;-inkscape-font-specification:Comfortaa" xml:space="preserve"><tspan style="font-size:40px;text-align:center;text-anchor:middle" y="183.29425" x="427.73068" id="tspan3262-5" sodipodi:role="line">A objetos por Id único o nombre</tspan></text>
    <text ns1:effectIn="name:fade;order:2;length:1200" id="text4110" y="257.28204" x="841.10938" style="font-size:32px;font-style:normal;font-variant:normal;font-weight:normal;font-stretch:normal;text-align:end;text-anchor:end;fill:#ffffff;fill-opacity:1;fill-rule:nonzero;stroke:none;font-family:Comfortaa;-inkscape-font-specification:Comfortaa" xml:space="preserve"><tspan style="font-size:28px;font-style:normal;font-variant:normal;font-weight:bold;font-stretch:normal;text-align:end;text-anchor:end;font-family:Droid Sans;-inkscape-font-specification:Droid Sans Bold" y="257.28204" x="841.10938" id="tspan4112" sodipodi:role="line">Otros ejemplos</tspan><tspan style="font-size:28px;text-align:end;text-anchor:end" id="tspan4114" y="291.92722" x="841.10938" sodipodi:role="line">version#3 (Id)</tspan><tspan style="font-size:28px;text-align:end;text-anchor:end" id="tspan4116" y="326.92722" x="841.10938" sodipodi:role="line">version#&quot;Fedora 15&quot;</tspan><tspan style="font-size:28px;text-align:end;text-anchor:end" id="tspan4118" y="361.92722" x="841.10938" sodipodi:role="line">attachment:slides.svg</tspan><tspan id="tspan4120" style="font-size:28px;text-align:end;text-anchor:end" y="396.92722" x="841.10938" sodipodi:role="line">export:ruta/archivo</tspan><tspan id="tspan4122" style="font-size:28px;text-align:end;text-anchor:end" y="431.92722" x="841.10938" sodipodi:role="line">source:etc/yum.conf#L10</tspan></text>
  </g>
  <g ns1:transitionOut="name:fade;length:800" ns1:transitionIn="name:fade;length:800" style="display:none" inkscape:label="textile-links-external" id="slide9" inkscape:groupmode="layer" sodipodi:insensitive="true">
    <text sodipodi:linespacing="131.99999%" id="text19898" y="102.14464" x="263.50146" style="font-size:40px;font-style:normal;font-variant:normal;font-weight:normal;font-stretch:normal;text-align:start;line-height:131.99999332%;text-anchor:start;fill:#ffffff;fill-opacity:1;fill-rule:nonzero;stroke:none;display:inline;font-family:Comfortaa;-inkscape-font-specification:Comfortaa" xml:space="preserve"><tspan id="tspan19900" style="font-size:40px;font-weight:normal;text-align:start;line-height:131.99999332%;text-anchor:start;-inkscape-font-specification:Comfortaa" y="102.14464" x="263.50146" sodipodi:role="line"><tspan style="font-size:56px;font-weight:normal;text-align:start;text-anchor:start;-inkscape-font-specification:Comfortaa" id="tspan19902">Textile:</tspan>Enlaces</tspan><tspan style="font-size:40px;font-weight:normal;text-align:start;line-height:131.99999332%;text-anchor:start;-inkscape-font-specification:Comfortaa" y="176.06464" x="263.50146" sodipodi:role="line" id="tspan19972" /></text>
    <text ns1:effectIn="name:fade;order:2;length:1200" sodipodi:linespacing="167%" id="text19904" y="383.81927" x="427.73068" style="font-size:40px;font-style:normal;font-variant:normal;font-weight:normal;font-stretch:normal;text-align:center;line-height:166.99999571%;text-anchor:middle;fill:#ffffff;fill-opacity:1;fill-rule:nonzero;stroke:none;display:inline;font-family:Comfortaa;-inkscape-font-specification:Comfortaa" xml:space="preserve"><tspan id="tspan19906" y="383.81927" x="427.73068" sodipodi:role="line" style="font-size:40px;text-align:center;text-anchor:middle">&quot;EFF:Call to Action&quot;:http://eff.org/r.5uT</tspan><tspan id="tspan19908" y="434.84256" x="427.73068" sodipodi:role="line" style="font-size:28px;text-align:center;text-anchor:middle">con descripción, así de fácil</tspan></text>
    <text id="text3260-0-9" y="174.23196" x="427.73068" style="font-size:36px;font-style:normal;font-variant:normal;font-weight:normal;font-stretch:normal;text-align:center;text-anchor:middle;fill:#ffffff;fill-opacity:1;fill-rule:nonzero;stroke:none;display:inline;font-family:Comfortaa;-inkscape-font-specification:Comfortaa" xml:space="preserve"><tspan style="font-size:40px;text-align:center;text-anchor:middle" y="174.23196" x="427.73068" id="tspan3262-5-5" sodipodi:role="line">Externos</tspan></text>
    <text id="text4145" y="255.99998" x="427.73068" style="font-size:28px;font-style:normal;font-variant:normal;font-weight:bold;font-stretch:normal;text-align:center;text-anchor:middle;fill:#ffffff;fill-opacity:1;fill-rule:nonzero;stroke:none;font-family:Droid Sans;-inkscape-font-specification:Droid Sans Bold" xml:space="preserve" ns1:effectIn="name:fade;order:1;length:1200"><tspan style="font-size:40px;font-style:normal;font-variant:normal;font-weight:normal;font-stretch:normal;text-align:center;text-anchor:middle;font-family:Comfortaa;-inkscape-font-specification:Comfortaa" y="255.99998" x="427.73068" id="tspan4147" sodipodi:role="line">http://fedoraproject.org/wiki/Classroom</tspan><tspan id="tspan4151" style="font-size:28px;font-style:normal;font-variant:normal;font-weight:normal;font-stretch:normal;text-align:center;text-anchor:middle;font-family:Comfortaa;-inkscape-font-specification:Comfortaa" y="294.19107" x="427.73068" sodipodi:role="line">muestra el enlace tal cual, no hace falta más que escribirlo</tspan><tspan id="tspan4149" style="font-size:40px;font-style:normal;font-variant:normal;font-weight:normal;font-stretch:normal;text-align:center;text-anchor:middle;font-family:Comfortaa;-inkscape-font-specification:Comfortaa" y="329.19107" x="427.73068" sodipodi:role="line" /></text>
  </g>
  <g inkscape:groupmode="layer" id="slideA" inkscape:label="textile-images-more" style="display:none" ns1:transitionIn="name:fade;length:800" ns1:transitionOut="name:fade;length:800">
    <text sodipodi:linespacing="131.99999%" id="text19898-6" y="457.56409" x="430.12213" style="font-size:56px;font-style:normal;font-variant:normal;font-weight:normal;font-stretch:normal;text-align:center;line-height:131.99999332%;text-anchor:middle;fill:#ffffff;fill-opacity:1;fill-rule:nonzero;stroke:none;display:inline;font-family:Comfortaa;-inkscape-font-specification:Comfortaa" xml:space="preserve" ns1:effectIn="name:fade;order:3;length:1200"><tspan style="font-size:28px;font-weight:normal;text-align:center;line-height:131.99999332%;text-anchor:middle;-inkscape-font-specification:Comfortaa" y="457.56409" x="430.12213" sodipodi:role="line" id="tspan20036">Más sobre Textile: http://ur1.ca/2j0li ¡Se solicitan traductores!</tspan></text>
    <text xml:space="preserve" style="font-size:56px;font-style:normal;font-variant:normal;font-weight:normal;font-stretch:normal;text-align:start;text-anchor:start;fill:#ffffff;fill-opacity:1;fill-rule:nonzero;stroke:none;font-family:Comfortaa;-inkscape-font-specification:Comfortaa" x="347.30768" y="171.41026" id="text20030"><tspan sodipodi:role="line" id="tspan20032" x="347.30768" y="171.41026" /></text>
    <text sodipodi:linespacing="131.99999%" id="text19898-8" y="102.44011" x="260.28903" style="font-size:40px;font-style:normal;font-variant:normal;font-weight:normal;font-stretch:normal;text-align:start;line-height:131.99999332%;text-anchor:start;fill:#ffffff;fill-opacity:1;fill-rule:nonzero;stroke:none;display:inline;font-family:Comfortaa;-inkscape-font-specification:Comfortaa" xml:space="preserve"><tspan id="tspan19900-4" style="font-size:40px;font-weight:normal;text-align:start;line-height:131.99999332%;text-anchor:start;-inkscape-font-specification:Comfortaa" y="102.44011" x="260.28903" sodipodi:role="line"><tspan style="font-size:56px;font-weight:normal;text-align:start;text-anchor:start;-inkscape-font-specification:Comfortaa" id="tspan19902-4">Textile:</tspan>Imágenes</tspan><tspan style="font-size:40px;font-weight:normal;text-align:start;line-height:131.99999332%;text-anchor:start;-inkscape-font-specification:Comfortaa" y="176.36011" x="260.28903" sodipodi:role="line" id="tspan19972-1" /></text>
    <text ns1:effectIn="name:fade;order:2;length:1200" sodipodi:linespacing="167%" id="text19904-9" y="253.34549" x="427.73068" style="font-size:40px;font-style:normal;font-variant:normal;font-weight:normal;font-stretch:normal;text-align:center;line-height:166.99999571%;text-anchor:middle;fill:#ffffff;fill-opacity:1;fill-rule:nonzero;stroke:none;display:inline;font-family:Comfortaa;-inkscape-font-specification:Comfortaa" xml:space="preserve"><tspan id="tspan19906-6" y="253.34549" x="427.73068" sodipodi:role="line" style="font-size:28px;text-align:center;text-anchor:middle" /><tspan id="tspan4207" y="315.8822" x="427.73068" sodipodi:role="line" style="font-size:40px;text-align:center;text-anchor:middle">Externa (url completa)</tspan><tspan id="tspan4211" y="366.90549" x="427.73068" sodipodi:role="line" style="font-size:28px;text-align:center;text-anchor:middle">!http://cbrhackinglab.files.wordpress.com/2010/12/wall3.jpg!</tspan></text>
    <text sodipodi:linespacing="180%" id="text4145-3" y="183.01338" x="427.73068" style="font-size:28px;font-style:normal;font-variant:normal;font-weight:bold;font-stretch:normal;text-align:center;line-height:179.99999523%;text-anchor:middle;fill:#ffffff;fill-opacity:1;fill-rule:nonzero;stroke:none;display:inline;font-family:Droid Sans;-inkscape-font-specification:Droid Sans Bold" xml:space="preserve" ns1:effectIn="name:fade;order:1;length:1200"><tspan style="font-size:40px;font-style:normal;font-variant:normal;font-weight:normal;font-stretch:normal;text-align:center;line-height:179.99999523%;text-anchor:middle;font-family:Comfortaa;-inkscape-font-specification:Comfortaa" y="183.01338" x="427.73068" id="tspan4147-6" sodipodi:role="line">!imagen_adjunta.png!</tspan><tspan id="tspan4151-3" style="font-size:28px;font-style:normal;font-variant:normal;font-weight:normal;font-stretch:normal;text-align:center;line-height:179.99999523%;text-anchor:middle;font-family:Comfortaa;-inkscape-font-specification:Comfortaa" y="238.00854" x="427.73068" sodipodi:role="line">al mismo objeto: Wiki, documento, petición, etc.</tspan><tspan id="tspan4149-8" style="font-size:40px;font-style:normal;font-variant:normal;font-weight:normal;font-stretch:normal;text-align:center;line-height:179.99999523%;text-anchor:middle;font-family:Comfortaa;-inkscape-font-specification:Comfortaa" y="288.40854" x="427.73068" sodipodi:role="line" /></text>
  </g>
  <g ns1:transitionOut="name:fade;length:800" ns1:transitionIn="name:fade;length:800" inkscape:groupmode="layer" id="g17035" inkscape:label="wiki-versions" style="display:none" sodipodi:insensitive="true">
    <text id="text17037" y="102.14464" x="468.75632" style="font-size:40px;font-style:normal;font-variant:normal;font-weight:normal;font-stretch:normal;text-align:center;text-anchor:middle;fill:#ffffff;fill-opacity:1;fill-rule:nonzero;stroke:none;display:inline;font-family:Comfortaa;-inkscape-font-specification:Comfortaa" xml:space="preserve"><tspan style="font-size:56px;font-weight:normal;-inkscape-font-specification:Comfortaa" y="102.14464" x="468.75632" id="tspan17039" sodipodi:role="line">Wiki:<tspan style="font-size:40px" id="tspan17051">Versiones</tspan></tspan></text>
    <text xml:space="preserve" style="font-size:48px;font-style:normal;font-variant:normal;font-weight:normal;font-stretch:normal;text-align:start;line-height:179.99999523%;text-anchor:start;fill:#ffffff;fill-opacity:1;fill-rule:nonzero;stroke:none;font-family:Comfortaa;-inkscape-font-specification:Comfortaa" x="259.02539" y="247.05736" id="text17041" sodipodi:linespacing="180%"><tspan sodipodi:role="line" id="tspan17043" x="259.02539" y="247.05736">* Histórico</tspan><tspan sodipodi:role="line" x="259.02539" y="333.45737" id="tspan17045">* Anotado</tspan><tspan sodipodi:role="line" x="259.02539" y="419.85736" id="tspan17049">* Feed de cambios</tspan></text>
  </g>
  <g inkscape:groupmode="layer" id="layer2" inkscape:label="wiki-diffs" style="display:inline">
    <text id="text17037-7" y="102.14464" x="321.15668" style="font-size:40px;font-style:normal;font-variant:normal;font-weight:normal;font-stretch:normal;text-align:start;text-anchor:start;fill:#ffffff;fill-opacity:1;fill-rule:nonzero;stroke:none;display:inline;font-family:Comfortaa;-inkscape-font-specification:Comfortaa" xml:space="preserve"><tspan style="font-size:56px;font-weight:normal;text-align:start;text-anchor:start;-inkscape-font-specification:Comfortaa" y="102.14464" x="321.15668" id="tspan17039-4" sodipodi:role="line">Wiki:<tspan style="font-size:40px;text-align:start;text-anchor:start" id="tspan17051-4">Cambios</tspan></tspan></text>
    <text xml:space="preserve" style="font-size:32px;font-style:normal;font-variant:normal;font-weight:normal;font-stretch:normal;text-align:start;line-height:150%;text-anchor:start;fill:#ffffff;fill-opacity:1;fill-rule:nonzero;stroke:none;font-family:Comfortaa;-inkscape-font-specification:Comfortaa" x="116.50873" y="217.05736" id="text17080" sodipodi:linespacing="150%"><tspan sodipodi:role="line" id="tspan17082" x="116.50873" y="217.05736" style="font-size:40px">* Historial de ediciones</tspan><tspan sodipodi:role="line" x="116.50873" y="363.61023" id="tspan17090" /></text>
  </g>
  <script ns1:version="1.5.1" id="JessyInk">// Copyright 2008, 2009 Hannes Hochreiner
// This program is free software: you can redistribute it and/or modify
// it under the terms of the GNU General Public License as published by
// the Free Software Foundation, either version 3 of the License, or
// (at your option) any later version.
//
// This program is distributed in the hope that it will be useful,
// but WITHOUT ANY WARRANTY; without even the implied warranty of
// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
// GNU General Public License for more details.
//
// You should have received a copy of the GNU General Public License
// along with this program.  If not, see http://www.gnu.org/licenses/.

// Set onload event handler.
window.onload = jessyInkInit;

// Creating a namespace dictionary. The standard Inkscape namespaces are taken from inkex.py.
var NSS = new Object();
NSS['sodipodi']='http://sodipodi.sourceforge.net/DTD/sodipodi-0.dtd';
NSS['cc']='http://web.resource.org/cc/';
NSS['svg']='http://www.w3.org/2000/svg';
NSS['dc']='http://purl.org/dc/elements/1.1/';
NSS['rdf']='http://www.w3.org/1999/02/22-rdf-syntax-ns#';
NSS['inkscape']='http://www.inkscape.org/namespaces/inkscape';
NSS['xlink']='http://www.w3.org/1999/xlink';
NSS['xml']='http://www.w3.org/XML/1998/namespace';
NSS['jessyink']='https://launchpad.net/jessyink';

// Keycodes.
var LEFT_KEY = 37; // cursor left keycode
var UP_KEY = 38; // cursor up keycode
var RIGHT_KEY = 39; // cursor right keycode
var DOWN_KEY = 40; // cursor down keycode
var PAGE_UP_KEY = 33; // page up keycode
var PAGE_DOWN_KEY = 34; // page down keycode
var HOME_KEY = 36; // home keycode
var END_KEY = 35; // end keycode
var ENTER_KEY = 13; // next slide
var SPACE_KEY = 32;
var ESCAPE_KEY = 27;

// Presentation modes.
var SLIDE_MODE = 1;
var INDEX_MODE = 2;
var DRAWING_MODE = 3;

// Mouse handler actions.
var MOUSE_UP = 1;
var MOUSE_DOWN = 2;
var MOUSE_MOVE = 3;
var MOUSE_WHEEL = 4;

// Parameters.
var ROOT_NODE = document.getElementsByTagNameNS(NSS[&quot;svg&quot;], &quot;svg&quot;)[0];
var HEIGHT = 0;
var WIDTH = 0;
var INDEX_COLUMNS_DEFAULT = 4;
var INDEX_COLUMNS = INDEX_COLUMNS_DEFAULT;
var INDEX_OFFSET = 0;
var STATE_START = -1;
var STATE_END = -2;
var BACKGROUND_COLOR = null;
var slides = new Array();

// Initialisation.
var currentMode = SLIDE_MODE;
var masterSlide = null;
var activeSlide = 0;
var activeEffect = 0;
var timeStep = 30; // 40 ms equal 25 frames per second.
var lastFrameTime = null;
var processingEffect = false;
var transCounter = 0;
var effectArray = 0;
var defaultTransitionInDict = new Object();
defaultTransitionInDict[&quot;name&quot;] = &quot;appear&quot;;
var defaultTransitionOutDict = new Object();
defaultTransitionOutDict[&quot;name&quot;] = &quot;appear&quot;;
var jessyInkInitialised = false;

// Initialise char and key code dictionaries.
var charCodeDictionary = getDefaultCharCodeDictionary();
var keyCodeDictionary = getDefaultKeyCodeDictionary();

// Initialise mouse handler dictionary.
var mouseHandlerDictionary = getDefaultMouseHandlerDictionary();

var progress_bar_visible = false;
var timer_elapsed = 0;
var timer_start = timer_elapsed;
var timer_duration = 15; // 15 minutes

var history_counter = 0;
var history_original_elements = new Array();
var history_presentation_elements = new Array();

var mouse_original_path = null;
var mouse_presentation_path = null;
var mouse_last_x = -1;
var mouse_last_y = -1;
var mouse_min_dist_sqr = 3 * 3;
var path_colour = &quot;red&quot;;
var path_width_default = 3;
var path_width = path_width_default;
var path_paint_width = path_width;

var number_of_added_slides = 0;

/** Initialisation function.
 *  The whole presentation is set-up in this function.
 */
function jessyInkInit()
{
	// Make sure we only execute this code once. Double execution can occur if the onload event handler is set
	// in the main svg tag as well (as was recommended in earlier versions). Executing this function twice does
	// not lead to any problems, but it takes more time.
	if (jessyInkInitialised)
		return;

	// Making the presentation scaleable.
	var VIEWBOX = ROOT_NODE.getAttribute(&quot;viewBox&quot;);

	if (VIEWBOX)
	{
		WIDTH = ROOT_NODE.viewBox.animVal.width;
		HEIGHT = ROOT_NODE.viewBox.animVal.height;
	}
	else
	{
		HEIGHT = parseFloat(ROOT_NODE.getAttribute(&quot;height&quot;));
		WIDTH = parseFloat(ROOT_NODE.getAttribute(&quot;width&quot;));
		ROOT_NODE.setAttribute(&quot;viewBox&quot;, &quot;0 0 &quot; + WIDTH + &quot; &quot; + HEIGHT);
	}

	ROOT_NODE.setAttribute(&quot;width&quot;, &quot;100%&quot;);
	ROOT_NODE.setAttribute(&quot;height&quot;, &quot;100%&quot;);

	// Setting the background color.
	var namedViews = document.getElementsByTagNameNS(NSS[&quot;sodipodi&quot;], &quot;namedview&quot;);

	for (var counter = 0; counter &lt; namedViews.length; counter++)
	{
		if (namedViews[counter].hasAttribute(&quot;id&quot;) &amp;&amp; namedViews[counter].hasAttribute(&quot;pagecolor&quot;))
		{
			if (namedViews[counter].getAttribute(&quot;id&quot;) == &quot;base&quot;)
			{
				BACKGROUND_COLOR = namedViews[counter].getAttribute(&quot;pagecolor&quot;);
				var newAttribute = &quot;background-color:&quot; + BACKGROUND_COLOR + &quot;;&quot;;

				if (ROOT_NODE.hasAttribute(&quot;style&quot;))
					newAttribute += ROOT_NODE.getAttribute(&quot;style&quot;);

				ROOT_NODE.setAttribute(&quot;style&quot;, newAttribute);
			}
		}
	}

	// Defining clip-path.
	var defsNodes = document.getElementsByTagNameNS(NSS[&quot;svg&quot;], &quot;defs&quot;);

	if (defsNodes.length &gt; 0)
	{
		var existingClipPath = document.getElementById(&quot;jessyInkSlideClipPath&quot;);

		if (!existingClipPath)
		{
			var rectNode = document.createElementNS(NSS[&quot;svg&quot;], &quot;rect&quot;);
			var clipPath = document.createElementNS(NSS[&quot;svg&quot;], &quot;clipPath&quot;);

			rectNode.setAttribute(&quot;x&quot;, 0);
			rectNode.setAttribute(&quot;y&quot;, 0);
			rectNode.setAttribute(&quot;width&quot;, WIDTH);
			rectNode.setAttribute(&quot;height&quot;, HEIGHT);

			clipPath.setAttribute(&quot;id&quot;, &quot;jessyInkSlideClipPath&quot;);
			clipPath.setAttribute(&quot;clipPathUnits&quot;, &quot;userSpaceOnUse&quot;);

			clipPath.appendChild(rectNode);
			defsNodes[0].appendChild(clipPath);
		}
	}

	// Making a list of the slide and finding the master slide.
	var nodes = document.getElementsByTagNameNS(NSS[&quot;svg&quot;], &quot;g&quot;);
	var tempSlides = new Array();
	var existingJessyInkPresentationLayer = null;

	for (var counter = 0; counter &lt; nodes.length; counter++)
	{
		if (nodes[counter].getAttributeNS(NSS[&quot;inkscape&quot;], &quot;groupmode&quot;) &amp;&amp; (nodes[counter].getAttributeNS(NSS[&quot;inkscape&quot;], &quot;groupmode&quot;) == &quot;layer&quot;))
		{
			if (nodes[counter].getAttributeNS(NSS[&quot;inkscape&quot;], &quot;label&quot;) &amp;&amp; nodes[counter].getAttributeNS(NSS[&quot;jessyink&quot;], &quot;masterSlide&quot;) == &quot;masterSlide&quot;)
				masterSlide = nodes[counter];
			else if (nodes[counter].getAttributeNS(NSS[&quot;inkscape&quot;], &quot;label&quot;) &amp;&amp; nodes[counter].getAttributeNS(NSS[&quot;jessyink&quot;], &quot;presentationLayer&quot;) == &quot;presentationLayer&quot;)
				existingJessyInkPresentationLayer = nodes[counter];
			else
				tempSlides.push(nodes[counter].getAttribute(&quot;id&quot;));
		}
		else if (nodes[counter].getAttributeNS(NSS['jessyink'], 'element'))
		{
			handleElement(nodes[counter]);
		}
	}

	// Hide master slide set default transitions.
	if (masterSlide)
	{
		masterSlide.style.display = &quot;none&quot;;

		if (masterSlide.hasAttributeNS(NSS[&quot;jessyink&quot;], &quot;transitionIn&quot;))
			defaultTransitionInDict = propStrToDict(masterSlide.getAttributeNS(NSS[&quot;jessyink&quot;], &quot;transitionIn&quot;));

		if (masterSlide.hasAttributeNS(NSS[&quot;jessyink&quot;], &quot;transitionOut&quot;))
			defaultTransitionOutDict = propStrToDict(masterSlide.getAttributeNS(NSS[&quot;jessyink&quot;], &quot;transitionOut&quot;));
	}

	if (existingJessyInkPresentationLayer != null)
	{
		existingJessyInkPresentationLayer.parentNode.removeChild(existingJessyInkPresentationLayer);
	}

	// Set start slide.
	var hashObj = new LocationHash(window.location.hash);

	activeSlide = hashObj.slideNumber;
	activeEffect = hashObj.effectNumber;

	if (activeSlide &lt; 0)
		activeSlide = 0;
	else if (activeSlide &gt;= tempSlides.length)
		activeSlide = tempSlides.length - 1;

	var originalNode = document.getElementById(tempSlides[counter]);

	var JessyInkPresentationLayer = document.createElementNS(NSS[&quot;svg&quot;], &quot;g&quot;);
	JessyInkPresentationLayer.setAttributeNS(NSS[&quot;inkscape&quot;], &quot;groupmode&quot;, &quot;layer&quot;);
	JessyInkPresentationLayer.setAttributeNS(NSS[&quot;inkscape&quot;], &quot;label&quot;, &quot;JessyInk Presentation Layer&quot;);
	JessyInkPresentationLayer.setAttributeNS(NSS[&quot;jessyink&quot;], &quot;presentationLayer&quot;, &quot;presentationLayer&quot;);
	JessyInkPresentationLayer.setAttribute(&quot;id&quot;, &quot;jessyink_presentation_layer&quot;);
	JessyInkPresentationLayer.style.display = &quot;inherit&quot;;
	ROOT_NODE.appendChild(JessyInkPresentationLayer);

	// Gathering all the information about the transitions and effects of the slides, set the background
	// from the master slide and substitute the auto-texts.
	for (var counter = 0; counter &lt; tempSlides.length; counter++)
	{
		var originalNode = document.getElementById(tempSlides[counter]);
		originalNode.style.display = &quot;none&quot;;
		var node = suffixNodeIds(originalNode.cloneNode(true), &quot;_&quot; + counter);
		JessyInkPresentationLayer.appendChild(node);
		slides[counter] = new Object();
		slides[counter][&quot;original_element&quot;] = originalNode;
		slides[counter][&quot;element&quot;] = node;

		// Set build in transition.
		slides[counter][&quot;transitionIn&quot;] = new Object();

		var dict;

		if (node.hasAttributeNS(NSS[&quot;jessyink&quot;], &quot;transitionIn&quot;))
			dict = propStrToDict(node.getAttributeNS(NSS[&quot;jessyink&quot;], &quot;transitionIn&quot;));
		else
			dict = defaultTransitionInDict;

		slides[counter][&quot;transitionIn&quot;][&quot;name&quot;] = dict[&quot;name&quot;];
		slides[counter][&quot;transitionIn&quot;][&quot;options&quot;] = new Object();

		for (key in dict)
			if (key != &quot;name&quot;)
				slides[counter][&quot;transitionIn&quot;][&quot;options&quot;][key] = dict[key];

		// Set build out transition.
		slides[counter][&quot;transitionOut&quot;] = new Object();

		if (node.hasAttributeNS(NSS[&quot;jessyink&quot;], &quot;transitionOut&quot;))
			dict = propStrToDict(node.getAttributeNS(NSS[&quot;jessyink&quot;], &quot;transitionOut&quot;));
		else
			dict = defaultTransitionOutDict;

		slides[counter][&quot;transitionOut&quot;][&quot;name&quot;] = dict[&quot;name&quot;];
		slides[counter][&quot;transitionOut&quot;][&quot;options&quot;] = new Object();

		for (key in dict)
			if (key != &quot;name&quot;)
				slides[counter][&quot;transitionOut&quot;][&quot;options&quot;][key] = dict[key];

		// Copy master slide content.
		if (masterSlide)
		{
			var clonedNode = suffixNodeIds(masterSlide.cloneNode(true), &quot;_&quot; + counter);
			clonedNode.removeAttributeNS(NSS[&quot;inkscape&quot;], &quot;groupmode&quot;);
			clonedNode.removeAttributeNS(NSS[&quot;inkscape&quot;], &quot;label&quot;);
			clonedNode.style.display = &quot;inherit&quot;;

			node.insertBefore(clonedNode, node.firstChild);
		}

		// Setting clip path.
		node.setAttribute(&quot;clip-path&quot;, &quot;url(#jessyInkSlideClipPath)&quot;);

		// Substitute auto texts.
		substituteAutoTexts(node, node.getAttributeNS(NSS[&quot;inkscape&quot;], &quot;label&quot;), counter + 1, tempSlides.length);

		node.removeAttributeNS(NSS[&quot;inkscape&quot;], &quot;groupmode&quot;);
		node.removeAttributeNS(NSS[&quot;inkscape&quot;], &quot;label&quot;);

		// Set effects.
		var tempEffects = new Array();
		var groups = new Object();

		for (var IOCounter = 0; IOCounter &lt;= 1; IOCounter++)
		{
			var propName = &quot;&quot;;
			var dir = 0;

			if (IOCounter == 0)
			{
				propName = &quot;effectIn&quot;;
				dir = 1;
			}
			else if (IOCounter == 1)
			{
				propName = &quot;effectOut&quot;;
				dir = -1;
			}

			var effects = getElementsByPropertyNS(node, NSS[&quot;jessyink&quot;], propName);

			for (var effectCounter = 0; effectCounter &lt; effects.length; effectCounter++)
			{
				var element = document.getElementById(effects[effectCounter]);
				var dict = propStrToDict(element.getAttributeNS(NSS[&quot;jessyink&quot;], propName));

				// Put every element that has an effect associated with it, into its own group.
				// Unless of course, we already put it into its own group.
				if (!(groups[element.id]))
				{
					var newGroup = document.createElementNS(NSS[&quot;svg&quot;], &quot;g&quot;);

					element.parentNode.insertBefore(newGroup, element);
					newGroup.appendChild(element.parentNode.removeChild(element));
					groups[element.id] = newGroup;
				}

				var effectDict = new Object();

				effectDict[&quot;effect&quot;] = dict[&quot;name&quot;];
				effectDict[&quot;dir&quot;] = dir;
				effectDict[&quot;element&quot;] = groups[element.id];

				for (var option in dict)
				{
					if ((option != &quot;name&quot;) &amp;&amp; (option != &quot;order&quot;))
					{
						if (!effectDict[&quot;options&quot;])
							effectDict[&quot;options&quot;] = new Object();

						effectDict[&quot;options&quot;][option] = dict[option];
					}
				}

				if (!tempEffects[dict[&quot;order&quot;]])
					tempEffects[dict[&quot;order&quot;]] = new Array();

				tempEffects[dict[&quot;order&quot;]][tempEffects[dict[&quot;order&quot;]].length] = effectDict;
			}
		}

		// Make invisible, but keep in rendering tree to ensure that bounding box can be calculated.
		node.setAttribute(&quot;opacity&quot;,0);
		node.style.display = &quot;inherit&quot;;

		// Create a transform group.
		var transformGroup = document.createElementNS(NSS[&quot;svg&quot;], &quot;g&quot;);

		// Add content to transform group.
		while (node.firstChild)
			transformGroup.appendChild(node.firstChild);

		// Transfer the transform attribute from the node to the transform group.
		if (node.getAttribute(&quot;transform&quot;))
		{
			transformGroup.setAttribute(&quot;transform&quot;, node.getAttribute(&quot;transform&quot;));
			node.removeAttribute(&quot;transform&quot;);
		}

		// Create a view group.
		var viewGroup = document.createElementNS(NSS[&quot;svg&quot;], &quot;g&quot;);

		viewGroup.appendChild(transformGroup);
		slides[counter][&quot;viewGroup&quot;] = node.appendChild(viewGroup);

		// Insert background.
		if (BACKGROUND_COLOR != null)
		{
			var rectNode = document.createElementNS(NSS[&quot;svg&quot;], &quot;rect&quot;);

			rectNode.setAttribute(&quot;x&quot;, 0);
			rectNode.setAttribute(&quot;y&quot;, 0);
			rectNode.setAttribute(&quot;width&quot;, WIDTH);
			rectNode.setAttribute(&quot;height&quot;, HEIGHT);
			rectNode.setAttribute(&quot;id&quot;, &quot;jessyInkBackground&quot; + counter);
			rectNode.setAttribute(&quot;fill&quot;, BACKGROUND_COLOR);

			slides[counter][&quot;viewGroup&quot;].insertBefore(rectNode, slides[counter][&quot;viewGroup&quot;].firstChild);
		}

		// Set views.
		var tempViews = new Array();
		var views = getElementsByPropertyNS(node, NSS[&quot;jessyink&quot;], &quot;view&quot;);
		var matrixOld = (new matrixSVG()).fromElements(1, 0, 0, 0, 1, 0, 0, 0, 1);

		// Set initial view even if there are no other views.
		slides[counter][&quot;viewGroup&quot;].setAttribute(&quot;transform&quot;, matrixOld.toAttribute());
		slides[counter].initialView = matrixOld.toAttribute();

		for (var viewCounter = 0; viewCounter &lt; views.length; viewCounter++)
		{
			var element = document.getElementById(views[viewCounter]);
			var dict = propStrToDict(element.getAttributeNS(NSS[&quot;jessyink&quot;], &quot;view&quot;));

			if (dict[&quot;order&quot;] == 0)
			{
				matrixOld = pointMatrixToTransformation(rectToMatrix(element)).mult((new matrixSVG()).fromSVGMatrix(slides[counter].viewGroup.getScreenCTM()).inv().mult((new matrixSVG()).fromSVGMatrix(element.parentNode.getScreenCTM())).inv());
				slides[counter].initialView = matrixOld.toAttribute();
			}
			else
			{
				var effectDict = new Object();

				effectDict[&quot;effect&quot;] = dict[&quot;name&quot;];
				effectDict[&quot;dir&quot;] = 1;
				effectDict[&quot;element&quot;] = slides[counter][&quot;viewGroup&quot;];
				effectDict[&quot;order&quot;] = dict[&quot;order&quot;];

				for (var option in dict)
				{
					if ((option != &quot;name&quot;) &amp;&amp; (option != &quot;order&quot;))
					{
						if (!effectDict[&quot;options&quot;])
							effectDict[&quot;options&quot;] = new Object();

						effectDict[&quot;options&quot;][option] = dict[option];
					}
				}

				effectDict[&quot;options&quot;][&quot;matrixNew&quot;] = pointMatrixToTransformation(rectToMatrix(element)).mult((new matrixSVG()).fromSVGMatrix(slides[counter].viewGroup.getScreenCTM()).inv().mult((new matrixSVG()).fromSVGMatrix(element.parentNode.getScreenCTM())).inv());

				tempViews[dict[&quot;order&quot;]] = effectDict;
			}

			// Remove element.
			element.parentNode.removeChild(element);
		}

		// Consolidate view array and append it to the effect array.
		if (tempViews.length &gt; 0)
		{
			for (var viewCounter = 0; viewCounter &lt; tempViews.length; viewCounter++)
			{
				if (tempViews[viewCounter])
				{
					tempViews[viewCounter][&quot;options&quot;][&quot;matrixOld&quot;] = matrixOld;
					matrixOld = tempViews[viewCounter][&quot;options&quot;][&quot;matrixNew&quot;];

					if (!tempEffects[tempViews[viewCounter][&quot;order&quot;]])
						tempEffects[tempViews[viewCounter][&quot;order&quot;]] = new Array();

					tempEffects[tempViews[viewCounter][&quot;order&quot;]][tempEffects[tempViews[viewCounter][&quot;order&quot;]].length] = tempViews[viewCounter];
				}
			}
		}

		// Set consolidated effect array.
		if (tempEffects.length &gt; 0)
		{
			slides[counter][&quot;effects&quot;] = new Array();

			for (var effectCounter = 0; effectCounter &lt; tempEffects.length; effectCounter++)
			{
				if (tempEffects[effectCounter])
					slides[counter][&quot;effects&quot;][slides[counter][&quot;effects&quot;].length] = tempEffects[effectCounter];
			}
		}

		node.setAttribute(&quot;onmouseover&quot;, &quot;if ((currentMode == INDEX_MODE) &amp;&amp; ( activeSlide != &quot; + counter + &quot;)) { indexSetActiveSlide(&quot; + counter + &quot;); };&quot;);

		// Set visibility for initial state.
		if (counter == activeSlide)
		{
			node.style.display = &quot;inherit&quot;;
			node.setAttribute(&quot;opacity&quot;,1);
		}
		else
		{
			node.style.display = &quot;none&quot;;
			node.setAttribute(&quot;opacity&quot;,0);
		}
	}

	// Set key handler.
	var jessyInkObjects = document.getElementsByTagNameNS(NSS[&quot;svg&quot;], &quot;g&quot;);

	for (var counter = 0; counter &lt; jessyInkObjects.length; counter++)
	{
		var elem = jessyInkObjects[counter];

		if (elem.getAttributeNS(NSS[&quot;jessyink&quot;], &quot;customKeyBindings&quot;))
		{
			if (elem.getCustomKeyBindings != undefined)
				keyCodeDictionary = elem.getCustomKeyBindings();

			if (elem.getCustomCharBindings != undefined)
				charCodeDictionary = elem.getCustomCharBindings();
		}
	}

	// Set mouse handler.
	var jessyInkMouseHandler = document.getElementsByTagNameNS(NSS[&quot;jessyink&quot;], &quot;mousehandler&quot;);

	for (var counter = 0; counter &lt; jessyInkMouseHandler.length; counter++)
	{
		var elem = jessyInkMouseHandler[counter];

		if (elem.getMouseHandler != undefined)
		{
			var tempDict = elem.getMouseHandler();

			for (mode in tempDict)
			{
				if (!mouseHandlerDictionary[mode])
					mouseHandlerDictionary[mode] = new Object();

				for (handler in tempDict[mode])
					mouseHandlerDictionary[mode][handler] = tempDict[mode][handler];
			}
		}
	}

	// Check effect number.
	if ((activeEffect &lt; 0) || (!slides[activeSlide].effects))
	{
		activeEffect = 0;
	}
	else if (activeEffect &gt; slides[activeSlide].effects.length)
	{
		activeEffect = slides[activeSlide].effects.length;
	}

	createProgressBar(JessyInkPresentationLayer);
	hideProgressBar();
	setProgressBarValue(activeSlide);
	setTimeIndicatorValue(0);
	setInterval(&quot;updateTimer()&quot;, 1000);
	setSlideToState(activeSlide, activeEffect);
	jessyInkInitialised = true;
}

/** Function to subtitute the auto-texts.
 *
 *  @param node the node
 *  @param slideName name of the slide the node is on
 *  @param slideNumber number of the slide the node is on
 *  @param numberOfSlides number of slides in the presentation
 */
function substituteAutoTexts(node, slideName, slideNumber, numberOfSlides)
{
	var texts = node.getElementsByTagNameNS(NSS[&quot;svg&quot;], &quot;tspan&quot;);

	for (var textCounter = 0; textCounter &lt; texts.length; textCounter++)
	{
		if (texts[textCounter].getAttributeNS(NSS[&quot;jessyink&quot;], &quot;autoText&quot;) == &quot;slideNumber&quot;)
			texts[textCounter].firstChild.nodeValue = slideNumber;
		else if (texts[textCounter].getAttributeNS(NSS[&quot;jessyink&quot;], &quot;autoText&quot;) == &quot;numberOfSlides&quot;)
			texts[textCounter].firstChild.nodeValue = numberOfSlides;
		else if (texts[textCounter].getAttributeNS(NSS[&quot;jessyink&quot;], &quot;autoText&quot;) == &quot;slideTitle&quot;)
			texts[textCounter].firstChild.nodeValue = slideName;
	}
}

/** Convenience function to get an element depending on whether it has a property with a particular name.
 *	This function emulates some dearly missed XPath functionality.
 *
 *  @param node the node
 *  @param namespace namespace of the attribute
 *  @param name attribute name
 */
function getElementsByPropertyNS(node, namespace, name)
{
	var elems = new Array();

	if (node.getAttributeNS(namespace, name))
		elems.push(node.getAttribute(&quot;id&quot;));

	for (var counter = 0; counter &lt; node.childNodes.length; counter++)
	{
		if (node.childNodes[counter].nodeType == 1)
			elems = elems.concat(getElementsByPropertyNS(node.childNodes[counter], namespace, name));
	}

	return elems;
}

/** Function to dispatch the next effect, if there is none left, change the slide.
 *
 *  @param dir direction of the change (1 = forwards, -1 = backwards)
 */
function dispatchEffects(dir)
{
	if (slides[activeSlide][&quot;effects&quot;] &amp;&amp; (((dir == 1) &amp;&amp; (activeEffect &lt; slides[activeSlide][&quot;effects&quot;].length)) || ((dir == -1) &amp;&amp; (activeEffect &gt; 0))))
	{
		processingEffect = true;

		if (dir == 1)
		{
			effectArray = slides[activeSlide][&quot;effects&quot;][activeEffect];
			activeEffect += dir;
		}
		else if (dir == -1)
		{
			activeEffect += dir;
			effectArray = slides[activeSlide][&quot;effects&quot;][activeEffect];
		}

		transCounter = 0;
		startTime = (new Date()).getTime();
		lastFrameTime = null;
		effect(dir);
	}
	else if (((dir == 1) &amp;&amp; (activeSlide &lt; (slides.length - 1))) || (((dir == -1) &amp;&amp; (activeSlide &gt; 0))))
	{
		changeSlide(dir);
	}
}

/** Function to skip effects and directly either put the slide into start or end state or change slides.
 *
 *  @param dir direction of the change (1 = forwards, -1 = backwards)
 */
function skipEffects(dir)
{
	if (slides[activeSlide][&quot;effects&quot;] &amp;&amp; (((dir == 1) &amp;&amp; (activeEffect &lt; slides[activeSlide][&quot;effects&quot;].length)) || ((dir == -1) &amp;&amp; (activeEffect &gt; 0))))
	{
		processingEffect = true;

		if (slides[activeSlide][&quot;effects&quot;] &amp;&amp; (dir == 1))
			activeEffect = slides[activeSlide][&quot;effects&quot;].length;
		else
			activeEffect = 0;

		if (dir == 1)
			setSlideToState(activeSlide, STATE_END);
		else
			setSlideToState(activeSlide, STATE_START);

		processingEffect = false;
	}
	else if (((dir == 1) &amp;&amp; (activeSlide &lt; (slides.length - 1))) || (((dir == -1) &amp;&amp; (activeSlide &gt; 0))))
	{
		changeSlide(dir);
	}
}

/** Function to change between slides.
 *
 *  @param dir direction (1 = forwards, -1 = backwards)
 */
function changeSlide(dir)
{
	processingEffect = true;
	effectArray = new Array();

	effectArray[0] = new Object();
	if (dir == 1)
	{
		effectArray[0][&quot;effect&quot;] = slides[activeSlide][&quot;transitionOut&quot;][&quot;name&quot;];
		effectArray[0][&quot;options&quot;] = slides[activeSlide][&quot;transitionOut&quot;][&quot;options&quot;];
		effectArray[0][&quot;dir&quot;] = -1;
	}
	else if (dir == -1)
	{
		effectArray[0][&quot;effect&quot;] = slides[activeSlide][&quot;transitionIn&quot;][&quot;name&quot;];
		effectArray[0][&quot;options&quot;] = slides[activeSlide][&quot;transitionIn&quot;][&quot;options&quot;];
		effectArray[0][&quot;dir&quot;] = 1;
	}
	effectArray[0][&quot;element&quot;] = slides[activeSlide][&quot;element&quot;];

	activeSlide += dir;
	setProgressBarValue(activeSlide);

	effectArray[1] = new Object();

	if (dir == 1)
	{
		effectArray[1][&quot;effect&quot;] = slides[activeSlide][&quot;transitionIn&quot;][&quot;name&quot;];
		effectArray[1][&quot;options&quot;] = slides[activeSlide][&quot;transitionIn&quot;][&quot;options&quot;];
		effectArray[1][&quot;dir&quot;] = 1;
	}
	else if (dir == -1)
	{
		effectArray[1][&quot;effect&quot;] = slides[activeSlide][&quot;transitionOut&quot;][&quot;name&quot;];
		effectArray[1][&quot;options&quot;] = slides[activeSlide][&quot;transitionOut&quot;][&quot;options&quot;];
		effectArray[1][&quot;dir&quot;] = -1;
	}

	effectArray[1][&quot;element&quot;] = slides[activeSlide][&quot;element&quot;];

	if (slides[activeSlide][&quot;effects&quot;] &amp;&amp; (dir == -1))
		activeEffect = slides[activeSlide][&quot;effects&quot;].length;
	else
		activeEffect = 0;

	if (dir == -1)
		setSlideToState(activeSlide, STATE_END);
	else
		setSlideToState(activeSlide, STATE_START);

	transCounter = 0;
	startTime = (new Date()).getTime();
	lastFrameTime = null;
	effect(dir);
}

/** Function to toggle between index and slide mode.
*/
function toggleSlideIndex()
{
	var suspendHandle = ROOT_NODE.suspendRedraw(500);

	if (currentMode == SLIDE_MODE)
	{
		hideProgressBar();		
		INDEX_OFFSET = -1;
		indexSetPageSlide(activeSlide);
		currentMode = INDEX_MODE;
	}
	else if (currentMode == INDEX_MODE)
	{
		for (var counter = 0; counter &lt; slides.length; counter++)
		{
			slides[counter][&quot;element&quot;].setAttribute(&quot;transform&quot;,&quot;scale(1)&quot;);

			if (counter == activeSlide)
			{
				slides[counter][&quot;element&quot;].style.display = &quot;inherit&quot;;
				slides[counter][&quot;element&quot;].setAttribute(&quot;opacity&quot;,1);
				activeEffect = 0;
			}
			else
			{
				slides[counter][&quot;element&quot;].setAttribute(&quot;opacity&quot;,0);
				slides[counter][&quot;element&quot;].style.display = &quot;none&quot;;
			}
		}
		currentMode = SLIDE_MODE;
		setSlideToState(activeSlide, STATE_START);
		setProgressBarValue(activeSlide);

		if (progress_bar_visible)
		{
			showProgressBar();
		}
	}

	ROOT_NODE.unsuspendRedraw(suspendHandle);
	ROOT_NODE.forceRedraw();
}

/** Function to run an effect.
 *
 *  @param dir direction in which to play the effect (1 = forwards, -1 = backwards)
 */
function effect(dir)
{
	var done = true;

	var suspendHandle = ROOT_NODE.suspendRedraw(200);

	for (var counter = 0; counter &lt; effectArray.length; counter++)
	{
		if (effectArray[counter][&quot;effect&quot;] == &quot;fade&quot;)
			done &amp;= fade(parseInt(effectArray[counter][&quot;dir&quot;]) * dir, effectArray[counter][&quot;element&quot;], transCounter, effectArray[counter][&quot;options&quot;]);
		else if (effectArray[counter][&quot;effect&quot;] == &quot;appear&quot;)
			done &amp;= appear(parseInt(effectArray[counter][&quot;dir&quot;]) * dir, effectArray[counter][&quot;element&quot;], transCounter, effectArray[counter][&quot;options&quot;]);
		else if (effectArray[counter][&quot;effect&quot;] == &quot;pop&quot;)
			done &amp;= pop(parseInt(effectArray[counter][&quot;dir&quot;]) * dir, effectArray[counter][&quot;element&quot;], transCounter, effectArray[counter][&quot;options&quot;]);
		else if (effectArray[counter][&quot;effect&quot;] == &quot;view&quot;)
			done &amp;= view(parseInt(effectArray[counter][&quot;dir&quot;]) * dir, effectArray[counter][&quot;element&quot;], transCounter, effectArray[counter][&quot;options&quot;]);
	}

	ROOT_NODE.unsuspendRedraw(suspendHandle);
	ROOT_NODE.forceRedraw();

	if (!done)
	{
		var currentTime = (new Date()).getTime();
		var timeDiff = 1;

		transCounter = currentTime - startTime;

		if (lastFrameTime != null)
		{
			timeDiff = timeStep - (currentTime - lastFrameTime);

			if (timeDiff &lt;= 0)
				timeDiff = 1;
		}

		lastFrameTime = currentTime;

		window.setTimeout(&quot;effect(&quot; + dir + &quot;)&quot;, timeDiff);
	}
	else
	{
		window.location.hash = (activeSlide + 1) + '_' + activeEffect;
		processingEffect = false;
	}
}

/** Function to display the index sheet.
 *
 *  @param offsetNumber offset number
 */
function displayIndex(offsetNumber)
{
	var offsetX = 0;
	var offsetY = 0;

	if (offsetNumber &lt; 0)
		offsetNumber = 0;
	else if (offsetNumber &gt;= slides.length)
		offsetNumber = slides.length - 1;

	for (var counter = 0; counter &lt; slides.length; counter++)
	{
		if ((counter &lt; offsetNumber) || (counter &gt; offsetNumber + INDEX_COLUMNS * INDEX_COLUMNS - 1))
		{
			slides[counter][&quot;element&quot;].setAttribute(&quot;opacity&quot;,0);
			slides[counter][&quot;element&quot;].style.display = &quot;none&quot;;
		}
		else
		{
			offsetX = ((counter - offsetNumber) % INDEX_COLUMNS) * WIDTH;
			offsetY = Math.floor((counter - offsetNumber) / INDEX_COLUMNS) * HEIGHT;

			slides[counter][&quot;element&quot;].setAttribute(&quot;transform&quot;,&quot;scale(&quot;+1/INDEX_COLUMNS+&quot;) translate(&quot;+offsetX+&quot;,&quot;+offsetY+&quot;)&quot;);
			slides[counter][&quot;element&quot;].style.display = &quot;inherit&quot;;
			slides[counter][&quot;element&quot;].setAttribute(&quot;opacity&quot;,0.5);
		}

		setSlideToState(counter, STATE_END);
	}

	//do we need to save the current offset?
	if (INDEX_OFFSET != offsetNumber)
		INDEX_OFFSET = offsetNumber;
}

/** Function to set the active slide in the slide view.
 *
 *  @param nbr index of the active slide
 */
function slideSetActiveSlide(nbr)
{
	if (nbr &gt;= slides.length)
		nbr = slides.length - 1;
	else if (nbr &lt; 0)
		nbr = 0;

	slides[activeSlide][&quot;element&quot;].setAttribute(&quot;opacity&quot;,0);
	slides[activeSlide][&quot;element&quot;].style.display = &quot;none&quot;;

	activeSlide = parseInt(nbr);

	setSlideToState(activeSlide, STATE_START);
	slides[activeSlide][&quot;element&quot;].style.display = &quot;inherit&quot;;
	slides[activeSlide][&quot;element&quot;].setAttribute(&quot;opacity&quot;,1);

	activeEffect = 0;
	setProgressBarValue(nbr);
}

/** Function to set the active slide in the index view.
 *
 *  @param nbr index of the active slide
 */
function indexSetActiveSlide(nbr)
{
	if (nbr &gt;= slides.length)
		nbr = slides.length - 1;
	else if (nbr &lt; 0)
		nbr = 0;

	slides[activeSlide][&quot;element&quot;].setAttribute(&quot;opacity&quot;,0.5);

	activeSlide = parseInt(nbr);
	window.location.hash = (activeSlide + 1) + '_0';

	slides[activeSlide][&quot;element&quot;].setAttribute(&quot;opacity&quot;,1);
}

/** Function to set the page and active slide in index view. 
 *
 *  @param nbr index of the active slide
 *
 *  NOTE: To force a redraw,
 *  set INDEX_OFFSET to -1 before calling indexSetPageSlide().
 *
 *  This is necessary for zooming (otherwise the index might not
 *  get redrawn) and when switching to index mode.
 *
 *  INDEX_OFFSET = -1
 *  indexSetPageSlide(activeSlide);
 */
function indexSetPageSlide(nbr)
{
	if (nbr &gt;= slides.length)
		nbr = slides.length - 1;
	else if (nbr &lt; 0)
		nbr = 0;

	//calculate the offset
	var offset = nbr - nbr % (INDEX_COLUMNS * INDEX_COLUMNS);

	if (offset &lt; 0)
		offset = 0;

	//if different from kept offset, then record and change the page
	if (offset != INDEX_OFFSET)
	{
		INDEX_OFFSET = offset;
		displayIndex(INDEX_OFFSET);
	}

	//set the active slide
	indexSetActiveSlide(nbr);
}

/** Event handler for key press.
 *
 *  @param e the event
 */
function keydown(e)
{
	if (!e)
		e = window.event;

	code = e.keyCode || e.charCode;

	if (!processingEffect &amp;&amp; keyCodeDictionary[currentMode] &amp;&amp; keyCodeDictionary[currentMode][code])
		return keyCodeDictionary[currentMode][code]();
	else
		document.onkeypress = keypress;
}
// Set event handler for key down.
document.onkeydown = keydown;

/** Event handler for key press.
 *
 *  @param e the event
 */
function keypress(e)
{
	document.onkeypress = null;

	if (!e)
		e = window.event;

	str = String.fromCharCode(e.keyCode || e.charCode);

	if (!processingEffect &amp;&amp; charCodeDictionary[currentMode] &amp;&amp; charCodeDictionary[currentMode][str])
		return charCodeDictionary[currentMode][str]();
}

/** Function to supply the default char code dictionary.
 *
 * @returns default char code dictionary
 */
function getDefaultCharCodeDictionary()
{
	var charCodeDict = new Object();

	charCodeDict[SLIDE_MODE] = new Object();
	charCodeDict[INDEX_MODE] = new Object();
	charCodeDict[DRAWING_MODE] = new Object();

	charCodeDict[SLIDE_MODE][&quot;i&quot;] = function () { return toggleSlideIndex(); };
	charCodeDict[SLIDE_MODE][&quot;d&quot;] = function () { return slideSwitchToDrawingMode(); };
	charCodeDict[SLIDE_MODE][&quot;D&quot;] = function () { return slideQueryDuration(); };
	charCodeDict[SLIDE_MODE][&quot;n&quot;] = function () { return slideAddSlide(activeSlide); };
	charCodeDict[SLIDE_MODE][&quot;p&quot;] = function () { return slideToggleProgressBarVisibility(); };
	charCodeDict[SLIDE_MODE][&quot;t&quot;] = function () { return slideResetTimer(); };
	charCodeDict[SLIDE_MODE][&quot;e&quot;] = function () { return slideUpdateExportLayer(); };

	charCodeDict[DRAWING_MODE][&quot;d&quot;] = function () { return drawingSwitchToSlideMode(); };
	charCodeDict[DRAWING_MODE][&quot;0&quot;] = function () { return drawingResetPathWidth(); };
	charCodeDict[DRAWING_MODE][&quot;1&quot;] = function () { return drawingSetPathWidth(1.0); };
	charCodeDict[DRAWING_MODE][&quot;3&quot;] = function () { return drawingSetPathWidth(3.0); };
	charCodeDict[DRAWING_MODE][&quot;5&quot;] = function () { return drawingSetPathWidth(5.0); };
	charCodeDict[DRAWING_MODE][&quot;7&quot;] = function () { return drawingSetPathWidth(7.0); };
	charCodeDict[DRAWING_MODE][&quot;9&quot;] = function () { return drawingSetPathWidth(9.0); };
	charCodeDict[DRAWING_MODE][&quot;b&quot;] = function () { return drawingSetPathColour(&quot;blue&quot;); };
	charCodeDict[DRAWING_MODE][&quot;c&quot;] = function () { return drawingSetPathColour(&quot;cyan&quot;); };
	charCodeDict[DRAWING_MODE][&quot;g&quot;] = function () { return drawingSetPathColour(&quot;green&quot;); };
	charCodeDict[DRAWING_MODE][&quot;k&quot;] = function () { return drawingSetPathColour(&quot;black&quot;); };
	charCodeDict[DRAWING_MODE][&quot;m&quot;] = function () { return drawingSetPathColour(&quot;magenta&quot;); };
	charCodeDict[DRAWING_MODE][&quot;o&quot;] = function () { return drawingSetPathColour(&quot;orange&quot;); };
	charCodeDict[DRAWING_MODE][&quot;r&quot;] = function () { return drawingSetPathColour(&quot;red&quot;); };
	charCodeDict[DRAWING_MODE][&quot;w&quot;] = function () { return drawingSetPathColour(&quot;white&quot;); };
	charCodeDict[DRAWING_MODE][&quot;y&quot;] = function () { return drawingSetPathColour(&quot;yellow&quot;); };
	charCodeDict[DRAWING_MODE][&quot;z&quot;] = function () { return drawingUndo(); };

	charCodeDict[INDEX_MODE][&quot;i&quot;] = function () { return toggleSlideIndex(); };
	charCodeDict[INDEX_MODE][&quot;-&quot;] = function () { return indexDecreaseNumberOfColumns(); };
	charCodeDict[INDEX_MODE][&quot;=&quot;] = function () { return indexIncreaseNumberOfColumns(); };
	charCodeDict[INDEX_MODE][&quot;+&quot;] = function () { return indexIncreaseNumberOfColumns(); };
	charCodeDict[INDEX_MODE][&quot;0&quot;] = function () { return indexResetNumberOfColumns(); };

	return charCodeDict;
}

/** Function to supply the default key code dictionary.
 *
 * @returns default key code dictionary
 */
function getDefaultKeyCodeDictionary()
{
	var keyCodeDict = new Object();

	keyCodeDict[SLIDE_MODE] = new Object();
	keyCodeDict[INDEX_MODE] = new Object();
	keyCodeDict[DRAWING_MODE] = new Object();

	keyCodeDict[SLIDE_MODE][LEFT_KEY] = function() { return dispatchEffects(-1); };
	keyCodeDict[SLIDE_MODE][RIGHT_KEY] = function() { return dispatchEffects(1); };
	keyCodeDict[SLIDE_MODE][UP_KEY] = function() { return skipEffects(-1); };
	keyCodeDict[SLIDE_MODE][DOWN_KEY] = function() { return skipEffects(1); };
	keyCodeDict[SLIDE_MODE][PAGE_UP_KEY] = function() { return dispatchEffects(-1); };
	keyCodeDict[SLIDE_MODE][PAGE_DOWN_KEY] = function() { return dispatchEffects(1); };
	keyCodeDict[SLIDE_MODE][HOME_KEY] = function() { return slideSetActiveSlide(0); };
	keyCodeDict[SLIDE_MODE][END_KEY] = function() { return slideSetActiveSlide(slides.length - 1); };
	keyCodeDict[SLIDE_MODE][SPACE_KEY] = function() { return dispatchEffects(1); };

	keyCodeDict[INDEX_MODE][LEFT_KEY] = function() { return indexSetPageSlide(activeSlide - 1); };
	keyCodeDict[INDEX_MODE][RIGHT_KEY] = function() { return indexSetPageSlide(activeSlide + 1); };
	keyCodeDict[INDEX_MODE][UP_KEY] = function() { return indexSetPageSlide(activeSlide - INDEX_COLUMNS); };
	keyCodeDict[INDEX_MODE][DOWN_KEY] = function() { return indexSetPageSlide(activeSlide + INDEX_COLUMNS); };
	keyCodeDict[INDEX_MODE][PAGE_UP_KEY] = function() { return indexSetPageSlide(activeSlide - INDEX_COLUMNS * INDEX_COLUMNS); };
	keyCodeDict[INDEX_MODE][PAGE_DOWN_KEY] = function() { return indexSetPageSlide(activeSlide + INDEX_COLUMNS * INDEX_COLUMNS); };
	keyCodeDict[INDEX_MODE][HOME_KEY] = function() { return indexSetPageSlide(0); };
	keyCodeDict[INDEX_MODE][END_KEY] = function() { return indexSetPageSlide(slides.length - 1); };
	keyCodeDict[INDEX_MODE][ENTER_KEY] = function() { return toggleSlideIndex(); };

	keyCodeDict[DRAWING_MODE][ESCAPE_KEY] = function () { return drawingSwitchToSlideMode(); };

	return keyCodeDict;
}

/** Function to handle all mouse events.
 *
 *	@param	evnt	event
 *	@param	action	type of event (e.g. mouse up, mouse wheel)
 */
function mouseHandlerDispatch(evnt, action)
{
	if (!evnt)
		evnt = window.event;

	var retVal = true;

	if (!processingEffect &amp;&amp; mouseHandlerDictionary[currentMode] &amp;&amp; mouseHandlerDictionary[currentMode][action])
	{
		var subRetVal = mouseHandlerDictionary[currentMode][action](evnt);

		if (subRetVal != null &amp;&amp; subRetVal != undefined)
			retVal = subRetVal;
	}

	if (evnt.preventDefault &amp;&amp; !retVal)
		evnt.preventDefault();

	evnt.returnValue = retVal;

	return retVal;
}

// Set mouse event handler.
document.onmousedown = function(e) { return mouseHandlerDispatch(e, MOUSE_DOWN); };
document.onmouseup = function(e) { return mouseHandlerDispatch(e, MOUSE_UP); };
document.onmousemove = function(e) { return mouseHandlerDispatch(e, MOUSE_MOVE); };

// Moz
if (window.addEventListener)
{
	window.addEventListener('DOMMouseScroll', function(e) { return mouseHandlerDispatch(e, MOUSE_WHEEL); }, false);
}

// Opera Safari OK - may not work in IE
window.onmousewheel = function(e) { return mouseHandlerDispatch(e, MOUSE_WHEEL); };

/** Function to supply the default mouse handler dictionary.
 *
 * @returns default mouse handler dictionary
 */
function getDefaultMouseHandlerDictionary()
{
	var mouseHandlerDict = new Object();

	mouseHandlerDict[SLIDE_MODE] = new Object();
	mouseHandlerDict[INDEX_MODE] = new Object();
	mouseHandlerDict[DRAWING_MODE] = new Object();

	mouseHandlerDict[SLIDE_MODE][MOUSE_DOWN] = function(evnt) { return dispatchEffects(1); };
	mouseHandlerDict[SLIDE_MODE][MOUSE_WHEEL] = function(evnt) { return slideMousewheel(evnt); };

	mouseHandlerDict[INDEX_MODE][MOUSE_DOWN] = function(evnt) { return toggleSlideIndex(); };

	mouseHandlerDict[DRAWING_MODE][MOUSE_DOWN] = function(evnt) { return drawingMousedown(evnt); };
	mouseHandlerDict[DRAWING_MODE][MOUSE_UP] = function(evnt) { return drawingMouseup(evnt); };
	mouseHandlerDict[DRAWING_MODE][MOUSE_MOVE] = function(evnt) { return drawingMousemove(evnt); };

	return mouseHandlerDict;
}

/** Function to switch from slide mode to drawing mode.
*/
function slideSwitchToDrawingMode()
{
	currentMode = DRAWING_MODE;

	var tempDict;

	if (ROOT_NODE.hasAttribute(&quot;style&quot;))
		tempDict = propStrToDict(ROOT_NODE.getAttribute(&quot;style&quot;));
	else
		tempDict = new Object();

	tempDict[&quot;cursor&quot;] = &quot;crosshair&quot;;
	ROOT_NODE.setAttribute(&quot;style&quot;, dictToPropStr(tempDict));
}

/** Function to switch from drawing mode to slide mode.
*/
function drawingSwitchToSlideMode()
{
	currentMode = SLIDE_MODE;

	var tempDict;

	if (ROOT_NODE.hasAttribute(&quot;style&quot;))
		tempDict = propStrToDict(ROOT_NODE.getAttribute(&quot;style&quot;));
	else
		tempDict = new Object();

	tempDict[&quot;cursor&quot;] = &quot;auto&quot;;
	ROOT_NODE.setAttribute(&quot;style&quot;, dictToPropStr(tempDict));
}

/** Function to decrease the number of columns in index mode.
*/
function indexDecreaseNumberOfColumns()
{
	if (INDEX_COLUMNS &gt;= 3)
	{
		INDEX_COLUMNS -= 1;
		INDEX_OFFSET = -1
			indexSetPageSlide(activeSlide);
	}
}

/** Function to increase the number of columns in index mode.
*/
function indexIncreaseNumberOfColumns()
{
	if (INDEX_COLUMNS &lt; 7)
	{
		INDEX_COLUMNS += 1;
		INDEX_OFFSET = -1
			indexSetPageSlide(activeSlide);
	}
}

/** Function to reset the number of columns in index mode.
*/
function indexResetNumberOfColumns()
{
	if (INDEX_COLUMNS != INDEX_COLUMNS_DEFAULT)
	{
		INDEX_COLUMNS = INDEX_COLUMNS_DEFAULT;
		INDEX_OFFSET = -1
			indexSetPageSlide(activeSlide);
	}
}

/** Function to reset path width in drawing mode.
*/
function drawingResetPathWidth()
{
	path_width = path_width_default;
	set_path_paint_width();
}

/** Function to set path width in drawing mode.
 *
 * @param width new path width
 */
function drawingSetPathWidth(width)
{
	path_width = width;
	set_path_paint_width();
}

/** Function to set path colour in drawing mode.
 *
 * @param colour new path colour
 */
function drawingSetPathColour(colour)
{
	path_colour = colour;
}

/** Function to query the duration of the presentation from the user in slide mode.
*/
function slideQueryDuration()
{
	var new_duration = prompt(&quot;Length of presentation in minutes?&quot;, timer_duration);

	if ((new_duration != null) &amp;&amp; (new_duration != ''))
	{
		timer_duration = new_duration;
	}

	updateTimer();
}

/** Function to add new slide in slide mode.
 *
 * @param afterSlide after which slide to insert the new one
 */
function slideAddSlide(afterSlide)
{
	addSlide(afterSlide);
	slideSetActiveSlide(afterSlide + 1);
	updateTimer();
}

/** Function to toggle the visibility of the progress bar in slide mode.
*/
function slideToggleProgressBarVisibility()
{
	if (progress_bar_visible)
	{
		progress_bar_visible = false;
		hideProgressBar();
	}
	else
	{
		progress_bar_visible = true;
		showProgressBar();
	}
}

/** Function to reset the timer in slide mode.
*/
function slideResetTimer()
{
	timer_start = timer_elapsed;
	updateTimer();
}

/** Convenience function to pad a string with zero in front up to a certain length.
 */
function padString(str, len)
{
	var outStr = str;

	while (outStr.length &lt; len)
	{
		outStr = '0' + outStr;
	}

	return outStr;
}

/** Function to update the export layer.
 */
function slideUpdateExportLayer()
{
	// Suspend redraw since we are going to mess with the slides.
	var suspendHandle = ROOT_NODE.suspendRedraw(2000);

	var tmpActiveSlide = activeSlide;
	var tmpActiveEffect = activeEffect;
	var exportedLayers = new Array();

	for (var counterSlides = 0; counterSlides &lt; slides.length; counterSlides++)
	{
		var exportNode;

		setSlideToState(counterSlides, STATE_START);

		var maxEffect = 0;

		if (slides[counterSlides].effects)
		{
			maxEffect = slides[counterSlides].effects.length;
		}

		exportNode = slides[counterSlides].element.cloneNode(true);
		exportNode.setAttributeNS(NSS[&quot;inkscape&quot;], &quot;groupmode&quot;, &quot;layer&quot;);
		exportNode.setAttributeNS(NSS[&quot;inkscape&quot;], &quot;label&quot;, &quot;slide_&quot; + padString((counterSlides + 1).toString(), slides.length.toString().length) + &quot;_effect_&quot; + padString(&quot;0&quot;, maxEffect.toString().length));

		exportedLayers.push(exportNode);

		if (slides[counterSlides][&quot;effects&quot;])
		{	
			for (var counter = 0; counter &lt; slides[counterSlides][&quot;effects&quot;].length; counter++)
			{
				for (var subCounter = 0; subCounter &lt; slides[counterSlides][&quot;effects&quot;][counter].length; subCounter++)
				{
					var effect = slides[counterSlides][&quot;effects&quot;][counter][subCounter];
					if (effect[&quot;effect&quot;] == &quot;fade&quot;)
						fade(parseInt(effect[&quot;dir&quot;]), effect[&quot;element&quot;], STATE_END, effect[&quot;options&quot;]);	
					else if (effect[&quot;effect&quot;] == &quot;appear&quot;)
						appear(parseInt(effect[&quot;dir&quot;]), effect[&quot;element&quot;], STATE_END, effect[&quot;options&quot;]);	
					else if (effect[&quot;effect&quot;] == &quot;pop&quot;)
						pop(parseInt(effect[&quot;dir&quot;]), effect[&quot;element&quot;], STATE_END, effect[&quot;options&quot;]);	
					else if (effect[&quot;effect&quot;] == &quot;view&quot;)
						view(parseInt(effect[&quot;dir&quot;]), effect[&quot;element&quot;], STATE_END, effect[&quot;options&quot;]);	
				}

				var layerName = &quot;slide_&quot; + padString((counterSlides + 1).toString(), slides.length.toString().length) + &quot;_effect_&quot; + padString((counter + 1).toString(), maxEffect.toString().length);
				exportNode = slides[counterSlides].element.cloneNode(true);
				exportNode.setAttributeNS(NSS[&quot;inkscape&quot;], &quot;groupmode&quot;, &quot;layer&quot;);
				exportNode.setAttributeNS(NSS[&quot;inkscape&quot;], &quot;label&quot;, layerName);
				exportNode.setAttribute(&quot;id&quot;, layerName);

				exportedLayers.push(exportNode);
			}
		}
	}

	activeSlide = tmpActiveSlide;
	activeEffect = tmpActiveEffect;
	setSlideToState(activeSlide, activeEffect);

	// Copy image.
	var newDoc = document.documentElement.cloneNode(true);

	// Delete viewbox form new imag and set width and height.
	newDoc.removeAttribute('viewbox');
	newDoc.setAttribute('width', WIDTH);
	newDoc.setAttribute('height', HEIGHT);

	// Delete all layers and script elements.
	var nodesToBeRemoved = new Array();

	for (var childCounter = 0; childCounter &lt;  newDoc.childNodes.length; childCounter++)
	{
		var child = newDoc.childNodes[childCounter];

		if (child.nodeType == 1)
		{
			if ((child.nodeName.toUpperCase() == 'G') || (child.nodeName.toUpperCase() == 'SCRIPT'))
			{
				nodesToBeRemoved.push(child);
			}
		}
	}

	for (var ndCounter = 0; ndCounter &lt; nodesToBeRemoved.length; ndCounter++)
	{
		var nd = nodesToBeRemoved[ndCounter];

		nd.parentNode.removeChild(nd);
	}

	// Set current layer.
	if (exportedLayers[0])
	{
		var namedView;

		for (var nodeCounter = 0; nodeCounter &lt; newDoc.childNodes.length; nodeCounter++)
		{
			if ((newDoc.childNodes[nodeCounter].nodeType == 1) &amp;&amp; (newDoc.childNodes[nodeCounter].getAttribute('id') == 'base'))
			{
				namedView = newDoc.childNodes[nodeCounter];
			}
		}

		if (namedView)
		{
			namedView.setAttributeNS(NSS['inkscape'], 'current-layer', exportedLayers[0].getAttributeNS(NSS['inkscape'], 'label'));
		}
	}

	// Add exported layers.
	while (exportedLayers.length &gt; 0)
	{
		var nd = exportedLayers.pop();

		nd.setAttribute(&quot;opacity&quot;,1);
		nd.style.display = &quot;inherit&quot;;

		newDoc.appendChild(nd);
	}

	// Serialise the new document.
	var serializer = new XMLSerializer();
	var strm = 
	{
		content : &quot;&quot;,
		close : function() {},  
		flush : function() {},  
		write : function(str, count) { this.content += str; }  
	};

	var xml = serializer.serializeToStream(newDoc, strm, 'UTF-8');

	window.open('data:image/svg+xml;base64;charset=utf-8,' + window.btoa(strm.content), '_blank');

	// Unsuspend redraw.
	ROOT_NODE.unsuspendRedraw(suspendHandle);
	ROOT_NODE.forceRedraw();
}

/** Function to undo last drawing operation.
*/
function drawingUndo()
{
	mouse_presentation_path = null;
	mouse_original_path = null;

	if (history_presentation_elements.length &gt; 0)
	{
		var p = history_presentation_elements.pop();
		var parent = p.parentNode.removeChild(p);

		p = history_original_elements.pop();
		parent = p.parentNode.removeChild(p);
	}
}

/** Event handler for mouse down in drawing mode.
 *
 *  @param e the event
 */
function drawingMousedown(e)
{
	var value = 0;

	if (e.button)
		value = e.button;
	else if (e.which)
		value = e.which;

	if (value == 1)
	{
		history_counter++;

		var p = calcCoord(e);

		mouse_last_x = e.clientX;
		mouse_last_y = e.clientY;
		mouse_original_path = document.createElementNS(NSS[&quot;svg&quot;], &quot;path&quot;);
		mouse_original_path.setAttribute(&quot;stroke&quot;, path_colour);
		mouse_original_path.setAttribute(&quot;stroke-width&quot;, path_paint_width);
		mouse_original_path.setAttribute(&quot;fill&quot;, &quot;none&quot;);
		mouse_original_path.setAttribute(&quot;id&quot;, &quot;path &quot; + Date());
		mouse_original_path.setAttribute(&quot;d&quot;, &quot;M&quot; + p.x + &quot;,&quot; + p.y);
		slides[activeSlide][&quot;original_element&quot;].appendChild(mouse_original_path);
		history_original_elements.push(mouse_original_path);

		mouse_presentation_path = document.createElementNS(NSS[&quot;svg&quot;], &quot;path&quot;);
		mouse_presentation_path.setAttribute(&quot;stroke&quot;, path_colour);
		mouse_presentation_path.setAttribute(&quot;stroke-width&quot;, path_paint_width);
		mouse_presentation_path.setAttribute(&quot;fill&quot;, &quot;none&quot;);
		mouse_presentation_path.setAttribute(&quot;id&quot;, &quot;path &quot; + Date() + &quot; presentation copy&quot;);
		mouse_presentation_path.setAttribute(&quot;d&quot;, &quot;M&quot; + p.x + &quot;,&quot; + p.y);

		if (slides[activeSlide][&quot;viewGroup&quot;])
			slides[activeSlide][&quot;viewGroup&quot;].appendChild(mouse_presentation_path);
		else
			slides[activeSlide][&quot;element&quot;].appendChild(mouse_presentation_path);

		history_presentation_elements.push(mouse_presentation_path);

		return false;
	}

	return true;
}

/** Event handler for mouse up in drawing mode.
 *
 *  @param e the event
 */
function drawingMouseup(e)
{
	if(!e)
		e = window.event;

	if (mouse_presentation_path != null)
	{
		var p = calcCoord(e);
		var d = mouse_presentation_path.getAttribute(&quot;d&quot;);
		d += &quot; L&quot; + p.x + &quot;,&quot; + p.y;
		mouse_presentation_path.setAttribute(&quot;d&quot;, d);
		mouse_presentation_path = null;
		mouse_original_path.setAttribute(&quot;d&quot;, d);
		mouse_original_path = null;

		return false;
	}

	return true;
}

/** Event handler for mouse move in drawing mode.
 *
 *  @param e the event
 */
function drawingMousemove(e)
{
	if(!e)
		e = window.event;

	var dist = (mouse_last_x - e.clientX) * (mouse_last_x - e.clientX) + (mouse_last_y - e.clientY) * (mouse_last_y - e.clientY);

	if (mouse_presentation_path == null)
	{
		return true;
	}

	if (dist &gt;= mouse_min_dist_sqr)
	{
		var p = calcCoord(e);
		var d = mouse_presentation_path.getAttribute(&quot;d&quot;);
		d += &quot; L&quot; + p.x + &quot;,&quot; + p.y;
		mouse_presentation_path.setAttribute(&quot;d&quot;, d);
		mouse_original_path.setAttribute(&quot;d&quot;, d);
		mouse_last_x = e.clientX;
		mouse_last_y = e.clientY;
	}

	return false;
}

/** Event handler for mouse wheel events in slide mode.
 *  based on http://adomas.org/javascript-mouse-wheel/
 *
 *  @param e the event
 */
function slideMousewheel(e)
{
	var delta = 0;

	if (!e)
		e = window.event;

	if (e.wheelDelta)
	{ // IE Opera
		delta = e.wheelDelta/120;
	}
	else if (e.detail)
	{ // MOZ
		delta = -e.detail/3;
	}

	if (delta &gt; 0)
		skipEffects(-1);
	else if (delta &lt; 0)
		skipEffects(1);

	if (e.preventDefault)
		e.preventDefault();

	e.returnValue = false;
}

/** Event handler for mouse wheel events in index mode.
 *  based on http://adomas.org/javascript-mouse-wheel/
 *
 *  @param e the event
 */
function indexMousewheel(e)
{
	var delta = 0;

	if (!e)
		e = window.event;

	if (e.wheelDelta)
	{ // IE Opera
		delta = e.wheelDelta/120;
	}
	else if (e.detail)
	{ // MOZ
		delta = -e.detail/3;
	}

	if (delta &gt; 0)
		indexSetPageSlide(activeSlide - INDEX_COLUMNS * INDEX_COLUMNS);
	else if (delta &lt; 0)
		indexSetPageSlide(activeSlide + INDEX_COLUMNS * INDEX_COLUMNS);

	if (e.preventDefault)
		e.preventDefault();

	e.returnValue = false;
}

/** Function to set the path paint width.
*/
function set_path_paint_width()
{
	var svgPoint1 = document.documentElement.createSVGPoint();
	var svgPoint2 = document.documentElement.createSVGPoint();

	svgPoint1.x = 0.0;
	svgPoint1.y = 0.0;
	svgPoint2.x = 1.0;
	svgPoint2.y = 0.0;

	var matrix = slides[activeSlide][&quot;element&quot;].getTransformToElement(ROOT_NODE);

	if (slides[activeSlide][&quot;viewGroup&quot;])
		matrix = slides[activeSlide][&quot;viewGroup&quot;].getTransformToElement(ROOT_NODE);

	svgPoint1 = svgPoint1.matrixTransform(matrix);
	svgPoint2 = svgPoint2.matrixTransform(matrix);

	path_paint_width = path_width / Math.sqrt((svgPoint2.x - svgPoint1.x) * (svgPoint2.x - svgPoint1.x) + (svgPoint2.y - svgPoint1.y) * (svgPoint2.y - svgPoint1.y));
}

/** The view effect.
 *
 *  @param dir direction the effect should be played (1 = forwards, -1 = backwards)
 *  @param element the element the effect should be applied to
 *  @param time the time that has elapsed since the beginning of the effect
 *  @param options a dictionary with additional options (e.g. length of the effect); for the view effect the options need to contain the old and the new matrix.
 */
function view(dir, element, time, options)
{
	var length = 250;
	var fraction;

	if (!options[&quot;matrixInitial&quot;])
	{
		var tempString = slides[activeSlide][&quot;viewGroup&quot;].getAttribute(&quot;transform&quot;);

		if (tempString)
			options[&quot;matrixInitial&quot;] = (new matrixSVG()).fromAttribute(tempString);
		else
			options[&quot;matrixInitial&quot;] = (new matrixSVG()).fromSVGElements(1, 0, 0, 1, 0, 0);
	}

	if ((time == STATE_END) || (time == STATE_START))
		fraction = 1;
	else
	{
		if (options &amp;&amp; options[&quot;length&quot;])
			length = options[&quot;length&quot;];

		fraction = time / length;
	}

	if (dir == 1)
	{
		if (fraction &lt;= 0)
		{
			element.setAttribute(&quot;transform&quot;, options[&quot;matrixInitial&quot;].toAttribute());
		}
		else if (fraction &gt;= 1)
		{
			element.setAttribute(&quot;transform&quot;, options[&quot;matrixNew&quot;].toAttribute());

			set_path_paint_width();

			options[&quot;matrixInitial&quot;] = null;
			return true;
		}
		else
		{
			element.setAttribute(&quot;transform&quot;, options[&quot;matrixInitial&quot;].mix(options[&quot;matrixNew&quot;], fraction).toAttribute());
		}
	}
	else if (dir == -1)
	{
		if (fraction &lt;= 0)
		{
			element.setAttribute(&quot;transform&quot;, options[&quot;matrixInitial&quot;].toAttribute());
		}
		else if (fraction &gt;= 1)
		{
			element.setAttribute(&quot;transform&quot;, options[&quot;matrixOld&quot;].toAttribute());
			set_path_paint_width();

			options[&quot;matrixInitial&quot;] = null;
			return true;
		}
		else
		{
			element.setAttribute(&quot;transform&quot;, options[&quot;matrixInitial&quot;].mix(options[&quot;matrixOld&quot;], fraction).toAttribute());
		}
	}

	return false;
}

/** The fade effect.
 *
 *  @param dir direction the effect should be played (1 = forwards, -1 = backwards)
 *  @param element the element the effect should be applied to
 *  @param time the time that has elapsed since the beginning of the effect
 *  @param options a dictionary with additional options (e.g. length of the effect)
 */
function fade(dir, element, time, options)
{
	var length = 250;
	var fraction;

	if ((time == STATE_END) || (time == STATE_START))
		fraction = 1;
	else
	{
		if (options &amp;&amp; options[&quot;length&quot;])
			length = options[&quot;length&quot;];

		fraction = time / length;
	}

	if (dir == 1)
	{
		if (fraction &lt;= 0)
		{
			element.style.display = &quot;none&quot;;
			element.setAttribute(&quot;opacity&quot;, 0);
		}
		else if (fraction &gt;= 1)
		{
			element.style.display = &quot;inherit&quot;;
			element.setAttribute(&quot;opacity&quot;, 1);
			return true;
		}
		else
		{
			element.style.display = &quot;inherit&quot;;
			element.setAttribute(&quot;opacity&quot;, fraction);
		}
	}
	else if (dir == -1)
	{
		if (fraction &lt;= 0)
		{
			element.style.display = &quot;inherit&quot;;
			element.setAttribute(&quot;opacity&quot;, 1);
		}
		else if (fraction &gt;= 1)
		{
			element.setAttribute(&quot;opacity&quot;, 0);
			element.style.display = &quot;none&quot;;
			return true;
		}
		else
		{
			element.style.display = &quot;inherit&quot;;
			element.setAttribute(&quot;opacity&quot;, 1 - fraction);
		}
	}
	return false;
}

/** The appear effect.
 *
 *  @param dir direction the effect should be played (1 = forwards, -1 = backwards)
 *  @param element the element the effect should be applied to
 *  @param time the time that has elapsed since the beginning of the effect
 *  @param options a dictionary with additional options (e.g. length of the effect)
 */
function appear(dir, element, time, options)
{
	if (dir == 1)
	{
		element.style.display = &quot;inherit&quot;;
		element.setAttribute(&quot;opacity&quot;,1);
	}
	else if (dir == -1)
	{
		element.style.display = &quot;none&quot;;
		element.setAttribute(&quot;opacity&quot;,0);
	}
	return true;
}

/** The pop effect.
 *
 *  @param dir direction the effect should be played (1 = forwards, -1 = backwards)
 *  @param element the element the effect should be applied to
 *  @param time the time that has elapsed since the beginning of the effect
 *  @param options a dictionary with additional options (e.g. length of the effect)
 */
function pop(dir, element, time, options)
{
	var length = 500;
	var fraction;

	if ((time == STATE_END) || (time == STATE_START))
		fraction = 1;
	else
	{
		if (options &amp;&amp; options[&quot;length&quot;])
			length = options[&quot;length&quot;];

		fraction = time / length;
	}

	if (dir == 1)
	{
		if (fraction &lt;= 0)
		{
			element.setAttribute(&quot;opacity&quot;, 0);
			element.setAttribute(&quot;transform&quot;, &quot;scale(0)&quot;);
			element.style.display = &quot;none&quot;;
		}
		else if (fraction &gt;= 1)
		{
			element.setAttribute(&quot;opacity&quot;, 1);
			element.removeAttribute(&quot;transform&quot;);
			element.style.display = &quot;inherit&quot;;
			return true;
		}
		else
		{
			element.style.display = &quot;inherit&quot;;
			var opacityFraction = fraction * 3;
			if (opacityFraction &gt; 1)
				opacityFraction = 1;
			element.setAttribute(&quot;opacity&quot;, opacityFraction);
			var offsetX = WIDTH * (1.0 - fraction) / 2.0;
			var offsetY = HEIGHT * (1.0 - fraction) / 2.0;
			element.setAttribute(&quot;transform&quot;, &quot;translate(&quot; + offsetX + &quot;,&quot; + offsetY + &quot;) scale(&quot; + fraction + &quot;)&quot;);
		}
	}
	else if (dir == -1)
	{
		if (fraction &lt;= 0)
		{
			element.setAttribute(&quot;opacity&quot;, 1);
			element.setAttribute(&quot;transform&quot;, &quot;scale(1)&quot;);
			element.style.display = &quot;inherit&quot;;
		}
		else if (fraction &gt;= 1)
		{
			element.setAttribute(&quot;opacity&quot;, 0);
			element.removeAttribute(&quot;transform&quot;);
			element.style.display = &quot;none&quot;;
			return true;
		}
		else
		{
			element.setAttribute(&quot;opacity&quot;, 1 - fraction);
			element.setAttribute(&quot;transform&quot;, &quot;scale(&quot; + 1 - fraction + &quot;)&quot;);
			element.style.display = &quot;inherit&quot;;
		}
	}
	return false;
}

/** Function to set a slide either to the start or the end state.
 *  
 *  @param slide the slide to use
 *  @param state the state into which the slide should be set
 */
function setSlideToState(slide, state)
{
	slides[slide][&quot;viewGroup&quot;].setAttribute(&quot;transform&quot;, slides[slide].initialView);

	if (slides[slide][&quot;effects&quot;])
	{	
		if (state == STATE_END)
		{
			for (var counter = 0; counter &lt; slides[slide][&quot;effects&quot;].length; counter++)
			{
				for (var subCounter = 0; subCounter &lt; slides[slide][&quot;effects&quot;][counter].length; subCounter++)
				{
					var effect = slides[slide][&quot;effects&quot;][counter][subCounter];
					if (effect[&quot;effect&quot;] == &quot;fade&quot;)
						fade(effect[&quot;dir&quot;], effect[&quot;element&quot;], STATE_END, effect[&quot;options&quot;]);	
					else if (effect[&quot;effect&quot;] == &quot;appear&quot;)
						appear(effect[&quot;dir&quot;], effect[&quot;element&quot;], STATE_END, effect[&quot;options&quot;]);	
					else if (effect[&quot;effect&quot;] == &quot;pop&quot;)
						pop(effect[&quot;dir&quot;], effect[&quot;element&quot;], STATE_END, effect[&quot;options&quot;]);	
					else if (effect[&quot;effect&quot;] == &quot;view&quot;)
						view(effect[&quot;dir&quot;], effect[&quot;element&quot;], STATE_END, effect[&quot;options&quot;]);	
				}
			}
		}
		else if (state == STATE_START)
		{
			for (var counter = slides[slide][&quot;effects&quot;].length - 1; counter &gt;= 0; counter--)
			{
				for (var subCounter = 0; subCounter &lt; slides[slide][&quot;effects&quot;][counter].length; subCounter++)
				{
					var effect = slides[slide][&quot;effects&quot;][counter][subCounter];
					if (effect[&quot;effect&quot;] == &quot;fade&quot;)
						fade(parseInt(effect[&quot;dir&quot;]) * -1, effect[&quot;element&quot;], STATE_START, effect[&quot;options&quot;]);	
					else if (effect[&quot;effect&quot;] == &quot;appear&quot;)
						appear(parseInt(effect[&quot;dir&quot;]) * -1, effect[&quot;element&quot;], STATE_START, effect[&quot;options&quot;]);	
					else if (effect[&quot;effect&quot;] == &quot;pop&quot;)
						pop(parseInt(effect[&quot;dir&quot;]) * -1, effect[&quot;element&quot;], STATE_START, effect[&quot;options&quot;]);	
					else if (effect[&quot;effect&quot;] == &quot;view&quot;)
						view(parseInt(effect[&quot;dir&quot;]) * -1, effect[&quot;element&quot;], STATE_START, effect[&quot;options&quot;]);	
				}
			}
		}
		else
		{
			setSlideToState(slide, STATE_START);

			for (var counter = 0; counter &lt; slides[slide][&quot;effects&quot;].length &amp;&amp; counter &lt; state; counter++)
			{
				for (var subCounter = 0; subCounter &lt; slides[slide][&quot;effects&quot;][counter].length; subCounter++)
				{
					var effect = slides[slide][&quot;effects&quot;][counter][subCounter];
					if (effect[&quot;effect&quot;] == &quot;fade&quot;)
						fade(effect[&quot;dir&quot;], effect[&quot;element&quot;], STATE_END, effect[&quot;options&quot;]);	
					else if (effect[&quot;effect&quot;] == &quot;appear&quot;)
						appear(effect[&quot;dir&quot;], effect[&quot;element&quot;], STATE_END, effect[&quot;options&quot;]);	
					else if (effect[&quot;effect&quot;] == &quot;pop&quot;)
						pop(effect[&quot;dir&quot;], effect[&quot;element&quot;], STATE_END, effect[&quot;options&quot;]);	
					else if (effect[&quot;effect&quot;] == &quot;view&quot;)
						view(effect[&quot;dir&quot;], effect[&quot;element&quot;], STATE_END, effect[&quot;options&quot;]);	
				}
			}
		}
	}

	window.location.hash = (activeSlide + 1) + '_' + activeEffect;
}

/** Convenience function to translate a attribute string into a dictionary.
 *
 *	@param str the attribute string
 *  @return a dictionary
 *  @see dictToPropStr
 */
function propStrToDict(str)
{
	var list = str.split(&quot;;&quot;);
	var obj = new Object();

	for (var counter = 0; counter &lt; list.length; counter++)
	{
		var subStr = list[counter];
		var subList = subStr.split(&quot;:&quot;);
		if (subList.length == 2)
		{
			obj[subList[0]] = subList[1];
		}	
	}

	return obj;
}

/** Convenience function to translate a dictionary into a string that can be used as an attribute.
 *
 *  @param dict the dictionary to convert
 *  @return a string that can be used as an attribute
 *  @see propStrToDict
 */
function dictToPropStr(dict)
{
	var str = &quot;&quot;;

	for (var key in dict)
	{
		str += key + &quot;:&quot; + dict[key] + &quot;;&quot;;
	}

	return str;
}

/** Sub-function to add a suffix to the ids of the node and all its children.
 *	
 *	@param node the node to change
 *	@param suffix the suffix to add
 *	@param replace dictionary of replaced ids
 *  @see suffixNodeIds
 */
function suffixNoneIds_sub(node, suffix, replace)
{
	if (node.nodeType == 1)
	{
		if (node.getAttribute(&quot;id&quot;))
		{
			var id = node.getAttribute(&quot;id&quot;)
				replace[&quot;#&quot; + id] = id + suffix;
			node.setAttribute(&quot;id&quot;, id + suffix);
		}

		if ((node.nodeName == &quot;use&quot;) &amp;&amp; (node.getAttributeNS(NSS[&quot;xlink&quot;], &quot;href&quot;)) &amp;&amp; (replace[node.getAttribute(NSS[&quot;xlink&quot;], &quot;href&quot;)]))
			node.setAttribute(NSS[&quot;xlink&quot;], &quot;href&quot;, node.getAttribute(NSS[&quot;xlink&quot;], &quot;href&quot;) + suffix);

		if (node.childNodes)
		{
			for (var counter = 0; counter &lt; node.childNodes.length; counter++)
				suffixNoneIds_sub(node.childNodes[counter], suffix, replace);
		}
	}
}

/** Function to add a suffix to the ids of the node and all its children.
 *	
 *	@param node the node to change
 *	@param suffix the suffix to add
 *  @return the changed node
 *  @see suffixNodeIds_sub
 */
function suffixNodeIds(node, suffix)
{
	var replace = new Object();

	suffixNoneIds_sub(node, suffix, replace);

	return node;
}

/** Function to build a progress bar.
 *	
 *  @param parent node to attach the progress bar to
 */
function createProgressBar(parent_node)
{
	var g = document.createElementNS(NSS[&quot;svg&quot;], &quot;g&quot;);
	g.setAttribute(&quot;clip-path&quot;, &quot;url(#jessyInkSlideClipPath)&quot;);
	g.setAttribute(&quot;id&quot;, &quot;layer_progress_bar&quot;);
	g.setAttribute(&quot;style&quot;, &quot;display: none;&quot;);

	var rect_progress_bar = document.createElementNS(NSS[&quot;svg&quot;], &quot;rect&quot;);
	rect_progress_bar.setAttribute(&quot;style&quot;, &quot;marker: none; fill: rgb(128, 128, 128); stroke: none;&quot;);
	rect_progress_bar.setAttribute(&quot;id&quot;, &quot;rect_progress_bar&quot;);
	rect_progress_bar.setAttribute(&quot;x&quot;, 0);
	rect_progress_bar.setAttribute(&quot;y&quot;, 0.99 * HEIGHT);
	rect_progress_bar.setAttribute(&quot;width&quot;, 0);
	rect_progress_bar.setAttribute(&quot;height&quot;, 0.01 * HEIGHT);
	g.appendChild(rect_progress_bar);

	var circle_timer_indicator = document.createElementNS(NSS[&quot;svg&quot;], &quot;circle&quot;);
	circle_timer_indicator.setAttribute(&quot;style&quot;, &quot;marker: none; fill: rgb(255, 0, 0); stroke: none;&quot;);
	circle_timer_indicator.setAttribute(&quot;id&quot;, &quot;circle_timer_indicator&quot;);
	circle_timer_indicator.setAttribute(&quot;cx&quot;, 0.005 * HEIGHT);
	circle_timer_indicator.setAttribute(&quot;cy&quot;, 0.995 * HEIGHT);
	circle_timer_indicator.setAttribute(&quot;r&quot;, 0.005 * HEIGHT);
	g.appendChild(circle_timer_indicator);

	parent_node.appendChild(g);
}

/** Function to hide the progress bar.
 *	
 */
function hideProgressBar()
{
	var progress_bar = document.getElementById(&quot;layer_progress_bar&quot;);

	if (!progress_bar)
	{
		return;
	}

	progress_bar.setAttribute(&quot;style&quot;, &quot;display: none;&quot;);
}

/** Function to show the progress bar.
 *	
 */
function showProgressBar()
{
	var progress_bar = document.getElementById(&quot;layer_progress_bar&quot;);

	if (!progress_bar)
	{
		return;
	}

	progress_bar.setAttribute(&quot;style&quot;, &quot;display: inherit;&quot;);
}

/** Set progress bar value.
 *	
 *	@param value the current slide number
 *
 */
function setProgressBarValue(value)
{
	var rect_progress_bar = document.getElementById(&quot;rect_progress_bar&quot;);

	if (!rect_progress_bar)
	{
		return;
	}

	if (value &lt; 1)
	{
		// First slide, assumed to be the title of the presentation
		var x = 0;
		var w = 0.01 * HEIGHT;
	}
	else if (value &gt;= slides.length - 1)
	{
		// Last slide, assumed to be the end of the presentation
		var x = WIDTH - 0.01 * HEIGHT;
		var w = 0.01 * HEIGHT;
	}
	else
	{
		value -= 1;
		value /= (slides.length - 2);

		var x = WIDTH * value;
		var w = WIDTH / (slides.length - 2);
	}

	rect_progress_bar.setAttribute(&quot;x&quot;, x);
	rect_progress_bar.setAttribute(&quot;width&quot;, w);
}

/** Set time indicator.
 *	
 *	@param value the percentage of time elapse so far between 0.0 and 1.0
 *
 */
function setTimeIndicatorValue(value)
{
	var circle_timer_indicator = document.getElementById(&quot;circle_timer_indicator&quot;);

	if (!circle_timer_indicator)
	{
		return;
	}

	if (value &lt; 0.0)
	{
		value = 0.0;
	}

	if (value &gt; 1.0)
	{
		value = 1.0;
	}

	var cx = (WIDTH - 0.01 * HEIGHT) * value + 0.005 * HEIGHT;
	circle_timer_indicator.setAttribute(&quot;cx&quot;, cx);
}

/** Update timer.
 *	
 */
function updateTimer()
{
	timer_elapsed += 1;
	setTimeIndicatorValue((timer_elapsed - timer_start) / (60 * timer_duration));
}

/** Convert screen coordinates to document coordinates.
 *
 *  @param e event with screen coordinates
 *
 *  @return coordinates in SVG file coordinate system	
 */
function calcCoord(e)
{
	var svgPoint = document.documentElement.createSVGPoint();
	svgPoint.x = e.clientX + window.pageXOffset;
	svgPoint.y = e.clientY + window.pageYOffset;

	var matrix = slides[activeSlide][&quot;element&quot;].getScreenCTM();

	if (slides[activeSlide][&quot;viewGroup&quot;])
		matrix = slides[activeSlide][&quot;viewGroup&quot;].getScreenCTM();

	svgPoint = svgPoint.matrixTransform(matrix.inverse());
	return svgPoint;
}

/** Add slide.
 *
 *	@param after_slide after which slide the new slide should be inserted into the presentation
 */
function addSlide(after_slide)
{
	number_of_added_slides++;

	var g = document.createElementNS(NSS[&quot;svg&quot;], &quot;g&quot;);
	g.setAttribute(&quot;clip-path&quot;, &quot;url(#jessyInkSlideClipPath)&quot;);
	g.setAttribute(&quot;id&quot;, &quot;Whiteboard &quot; + Date() + &quot; presentation copy&quot;);
	g.setAttribute(&quot;style&quot;, &quot;display: none;&quot;);

	var new_slide = new Object();
	new_slide[&quot;element&quot;] = g;

	// Set build in transition.
	new_slide[&quot;transitionIn&quot;] = new Object();
	var dict = defaultTransitionInDict;
	new_slide[&quot;transitionIn&quot;][&quot;name&quot;] = dict[&quot;name&quot;];
	new_slide[&quot;transitionIn&quot;][&quot;options&quot;] = new Object();

	for (key in dict)
		if (key != &quot;name&quot;)
			new_slide[&quot;transitionIn&quot;][&quot;options&quot;][key] = dict[key];

	// Set build out transition.
	new_slide[&quot;transitionOut&quot;] = new Object();
	dict = defaultTransitionOutDict;
	new_slide[&quot;transitionOut&quot;][&quot;name&quot;] = dict[&quot;name&quot;];
	new_slide[&quot;transitionOut&quot;][&quot;options&quot;] = new Object();

	for (key in dict)
		if (key != &quot;name&quot;)
			new_slide[&quot;transitionOut&quot;][&quot;options&quot;][key] = dict[key];

	// Copy master slide content.
	if (masterSlide)
	{
		var clonedNode = suffixNodeIds(masterSlide.cloneNode(true), &quot;_&quot; + Date() + &quot; presentation_copy&quot;);
		clonedNode.removeAttributeNS(NSS[&quot;inkscape&quot;], &quot;groupmode&quot;);
		clonedNode.removeAttributeNS(NSS[&quot;inkscape&quot;], &quot;label&quot;);
		clonedNode.style.display = &quot;inherit&quot;;

		g.appendChild(clonedNode);
	}

	// Substitute auto texts.
	substituteAutoTexts(g, &quot;Whiteboard &quot; + number_of_added_slides, &quot;W&quot; + number_of_added_slides, slides.length);

	g.setAttribute(&quot;onmouseover&quot;, &quot;if ((currentMode == INDEX_MODE) &amp;&amp; ( activeSlide != &quot; + (after_slide + 1) + &quot;)) { indexSetActiveSlide(&quot; + (after_slide + 1) + &quot;); };&quot;);

	// Create a transform group.
	var transformGroup = document.createElementNS(NSS[&quot;svg&quot;], &quot;g&quot;);

	// Add content to transform group.
	while (g.firstChild)
		transformGroup.appendChild(g.firstChild);

	// Transfer the transform attribute from the node to the transform group.
	if (g.getAttribute(&quot;transform&quot;))
	{
		transformGroup.setAttribute(&quot;transform&quot;, g.getAttribute(&quot;transform&quot;));
		g.removeAttribute(&quot;transform&quot;);
	}

	// Create a view group.
	var viewGroup = document.createElementNS(NSS[&quot;svg&quot;], &quot;g&quot;);

	viewGroup.appendChild(transformGroup);
	new_slide[&quot;viewGroup&quot;] = g.appendChild(viewGroup);

	// Insert background.
	if (BACKGROUND_COLOR != null)
	{
		var rectNode = document.createElementNS(NSS[&quot;svg&quot;], &quot;rect&quot;);

		rectNode.setAttribute(&quot;x&quot;, 0);
		rectNode.setAttribute(&quot;y&quot;, 0);
		rectNode.setAttribute(&quot;width&quot;, WIDTH);
		rectNode.setAttribute(&quot;height&quot;, HEIGHT);
		rectNode.setAttribute(&quot;id&quot;, &quot;jessyInkBackground&quot; + Date());
		rectNode.setAttribute(&quot;fill&quot;, BACKGROUND_COLOR);

		new_slide[&quot;viewGroup&quot;].insertBefore(rectNode, new_slide[&quot;viewGroup&quot;].firstChild);
	}

	// Set initial view even if there are no other views.
	var matrixOld = (new matrixSVG()).fromElements(1, 0, 0, 0, 1, 0, 0, 0, 1);

	new_slide[&quot;viewGroup&quot;].setAttribute(&quot;transform&quot;, matrixOld.toAttribute());
	new_slide.initialView = matrixOld.toAttribute();

	// Insert slide
	var node = slides[after_slide][&quot;element&quot;];
	var next_node = node.nextSibling;
	var parent_node = node.parentNode;

	if (next_node)
	{
		parent_node.insertBefore(g, next_node);
	}
	else
	{
		parent_node.appendChild(g);
	}

	g = document.createElementNS(NSS[&quot;svg&quot;], &quot;g&quot;);
	g.setAttributeNS(NSS[&quot;inkscape&quot;], &quot;groupmode&quot;, &quot;layer&quot;);
	g.setAttributeNS(NSS[&quot;inkscape&quot;], &quot;label&quot;, &quot;Whiteboard &quot; + number_of_added_slides);
	g.setAttribute(&quot;clip-path&quot;, &quot;url(#jessyInkSlideClipPath)&quot;);
	g.setAttribute(&quot;id&quot;, &quot;Whiteboard &quot; + Date());
	g.setAttribute(&quot;style&quot;, &quot;display: none;&quot;);

	new_slide[&quot;original_element&quot;] = g;

	node = slides[after_slide][&quot;original_element&quot;];
	next_node = node.nextSibling;
	parent_node = node.parentNode;

	if (next_node)
	{
		parent_node.insertBefore(g, next_node);
	}
	else
	{
		parent_node.appendChild(g);
	}

	before_new_slide = slides.slice(0, after_slide + 1);
	after_new_slide = slides.slice(after_slide + 1);
	slides = before_new_slide.concat(new_slide, after_new_slide);

	//resetting the counter attributes on the slides that follow the new slide...
	for (var counter = after_slide+2; counter &lt; slides.length; counter++)
	{
		slides[counter][&quot;element&quot;].setAttribute(&quot;onmouseover&quot;, &quot;if ((currentMode == INDEX_MODE) &amp;&amp; ( activeSlide != &quot; + counter + &quot;)) { indexSetActiveSlide(&quot; + counter + &quot;); };&quot;);
	}
}

/** Convenience function to obtain a transformation matrix from a point matrix.
 *
 *	@param mPoints Point matrix.
 *	@return A transformation matrix.
 */
function pointMatrixToTransformation(mPoints)
{
	mPointsOld = (new matrixSVG()).fromElements(0, WIDTH, WIDTH, 0, 0, HEIGHT, 1, 1, 1);

	return mPointsOld.mult(mPoints.inv());
}

/** Convenience function to obtain a matrix with three corners of a rectangle.
 *
 *	@param rect an svg rectangle
 *	@return a matrixSVG containing three corners of the rectangle
 */
function rectToMatrix(rect)
{
	rectWidth = rect.getBBox().width;
	rectHeight = rect.getBBox().height;
	rectX = rect.getBBox().x;
	rectY = rect.getBBox().y;
	rectXcorr = 0;
	rectYcorr = 0;

	scaleX = WIDTH / rectWidth;
	scaleY = HEIGHT / rectHeight;

	if (scaleX &gt; scaleY)
	{
		scaleX = scaleY;
		rectXcorr -= (WIDTH / scaleX - rectWidth) / 2;
		rectWidth = WIDTH / scaleX;
	}	
	else
	{
		scaleY = scaleX;
		rectYcorr -= (HEIGHT / scaleY - rectHeight) / 2;
		rectHeight = HEIGHT / scaleY;
	}

	if (rect.transform.baseVal.numberOfItems &lt; 1)
	{
		mRectTrans = (new matrixSVG()).fromElements(1, 0, 0, 0, 1, 0, 0, 0, 1);
	}
	else
	{
		mRectTrans = (new matrixSVG()).fromSVGMatrix(rect.transform.baseVal.consolidate().matrix);
	}

	newBasePoints = (new matrixSVG()).fromElements(rectX, rectX, rectX, rectY, rectY, rectY, 1, 1, 1);
	newVectors = (new matrixSVG()).fromElements(rectXcorr, rectXcorr + rectWidth, rectXcorr + rectWidth, rectYcorr, rectYcorr, rectYcorr + rectHeight, 0, 0, 0);

	return mRectTrans.mult(newBasePoints.add(newVectors));
}

/** Function to handle JessyInk elements.
 *
 *	@param	node	Element node.
 */
function handleElement(node)
{
	if (node.getAttributeNS(NSS['jessyink'], 'element') == 'core.video')
	{
		var url;
		var width;
		var height;
		var x;
		var y;
		var transform;

		var tspans = node.getElementsByTagNameNS(&quot;http://www.w3.org/2000/svg&quot;, &quot;tspan&quot;);

		for (var tspanCounter = 0; tspanCounter &lt; tspans.length; tspanCounter++)
		{
			if (tspans[tspanCounter].getAttributeNS(&quot;https://launchpad.net/jessyink&quot;, &quot;video&quot;) == &quot;url&quot;)
			{
				url = tspans[tspanCounter].firstChild.nodeValue;
			}
		}

		var rects = node.getElementsByTagNameNS(&quot;http://www.w3.org/2000/svg&quot;, &quot;rect&quot;);

		for (var rectCounter = 0; rectCounter &lt; rects.length; rectCounter++)
		{
			if (rects[rectCounter].getAttributeNS(&quot;https://launchpad.net/jessyink&quot;, &quot;video&quot;) == &quot;rect&quot;)
			{
				x = rects[rectCounter].getAttribute(&quot;x&quot;);
				y = rects[rectCounter].getAttribute(&quot;y&quot;);
				width = rects[rectCounter].getAttribute(&quot;width&quot;);
				height = rects[rectCounter].getAttribute(&quot;height&quot;);
				transform = rects[rectCounter].getAttribute(&quot;transform&quot;);
			}
		}

		for (var childCounter = 0; childCounter &lt; node.childNodes.length; childCounter++)
		{
			if (node.childNodes[childCounter].nodeType == 1)
			{
				if (node.childNodes[childCounter].style)
				{
					node.childNodes[childCounter].style.display = 'none';
				}
				else
				{
					node.childNodes[childCounter].setAttribute(&quot;style&quot;, &quot;display: none;&quot;);
				}
			}
		}

		var foreignNode = document.createElementNS(&quot;http://www.w3.org/2000/svg&quot;, &quot;foreignObject&quot;);
		foreignNode.setAttribute(&quot;x&quot;, x);
		foreignNode.setAttribute(&quot;y&quot;, y);
		foreignNode.setAttribute(&quot;width&quot;, width);
		foreignNode.setAttribute(&quot;height&quot;, height);
		foreignNode.setAttribute(&quot;transform&quot;, transform);

		var videoNode = document.createElementNS(&quot;http://www.w3.org/1999/xhtml&quot;, &quot;video&quot;);
		videoNode.setAttribute(&quot;src&quot;, url);

		foreignNode.appendChild(videoNode);
		node.appendChild(foreignNode);
	}
}

/** Class processing the location hash.
 *
 *	@param str location hash
 */
function LocationHash(str)
{
	this.slideNumber = 0;
	this.effectNumber = 0;

	str = str.substr(1, str.length - 1);

	var parts = str.split('_');

	// Try to extract slide number.
	if (parts.length &gt;= 1)
	{
		try
		{
			var slideNumber = parseInt(parts[0]);

			if (!isNaN(slideNumber))
			{
				this.slideNumber = slideNumber - 1;
			}
		}
		catch (e)
		{
		}
	}
	
	// Try to extract effect number.
	if (parts.length &gt;= 2)
	{
		try
		{
			var effectNumber = parseInt(parts[1]);

			if (!isNaN(effectNumber))
			{
				this.effectNumber = effectNumber;
			}
		}
		catch (e)
		{
		}
	}
}

/** Class representing an svg matrix.
*/
function matrixSVG()
{
	this.e11 = 0; // a
	this.e12 = 0; // c
	this.e13 = 0; // e
	this.e21 = 0; // b
	this.e22 = 0; // d
	this.e23 = 0; // f
	this.e31 = 0;
	this.e32 = 0;
	this.e33 = 0;
}

/** Constructor function.
 *
 *	@param a element a (i.e. 1, 1) as described in the svg standard.
 *	@param b element b (i.e. 2, 1) as described in the svg standard.
 *	@param c element c (i.e. 1, 2) as described in the svg standard.
 *	@param d element d (i.e. 2, 2) as described in the svg standard.
 *	@param e element e (i.e. 1, 3) as described in the svg standard.
 *	@param f element f (i.e. 2, 3) as described in the svg standard.
 */
matrixSVG.prototype.fromSVGElements = function(a, b, c, d, e, f)
{
	this.e11 = a;
	this.e12 = c;
	this.e13 = e;
	this.e21 = b;
	this.e22 = d;
	this.e23 = f;
	this.e31 = 0;
	this.e32 = 0;
	this.e33 = 1;

	return this;
}

/** Constructor function.
 *
 *	@param matrix an svg matrix as described in the svg standard.
 */
matrixSVG.prototype.fromSVGMatrix = function(m)
{
	this.e11 = m.a;
	this.e12 = m.c;
	this.e13 = m.e;
	this.e21 = m.b;
	this.e22 = m.d;
	this.e23 = m.f;
	this.e31 = 0;
	this.e32 = 0;
	this.e33 = 1;

	return this;
}

/** Constructor function.
 *
 *	@param e11 element 1, 1 of the matrix.
 *	@param e12 element 1, 2 of the matrix.
 *	@param e13 element 1, 3 of the matrix.
 *	@param e21 element 2, 1 of the matrix.
 *	@param e22 element 2, 2 of the matrix.
 *	@param e23 element 2, 3 of the matrix.
 *	@param e31 element 3, 1 of the matrix.
 *	@param e32 element 3, 2 of the matrix.
 *	@param e33 element 3, 3 of the matrix.
 */
matrixSVG.prototype.fromElements = function(e11, e12, e13, e21, e22, e23, e31, e32, e33)
{
	this.e11 = e11;
	this.e12 = e12;
	this.e13 = e13;
	this.e21 = e21;
	this.e22 = e22;
	this.e23 = e23;
	this.e31 = e31;
	this.e32 = e32;
	this.e33 = e33;

	return this;
}

/** Constructor function.
 *
 *	@param attrString string value of the &quot;transform&quot; attribute (currently only &quot;matrix&quot; is accepted)
 */
matrixSVG.prototype.fromAttribute = function(attrString)
{
	str = attrString.substr(7, attrString.length - 8);

	str = str.trim();

	strArray = str.split(&quot;,&quot;);

	// Opera does not use commas to separate the values of the matrix, only spaces.
	if (strArray.length != 6)
		strArray = str.split(&quot; &quot;);

	this.e11 = parseFloat(strArray[0]);
	this.e21 = parseFloat(strArray[1]);
	this.e31 = 0;
	this.e12 = parseFloat(strArray[2]);
	this.e22 = parseFloat(strArray[3]);
	this.e32 = 0;
	this.e13 = parseFloat(strArray[4]);
	this.e23 = parseFloat(strArray[5]);
	this.e33 = 1;

	return this;
}

/** Output function
 *
 *	@return a string that can be used as the &quot;transform&quot; attribute.
 */
matrixSVG.prototype.toAttribute = function()
{
	return &quot;matrix(&quot; + this.e11 + &quot;, &quot; + this.e21 + &quot;, &quot; + this.e12 + &quot;, &quot; + this.e22 + &quot;, &quot; + this.e13 + &quot;, &quot; + this.e23 + &quot;)&quot;;
}

/** Matrix nversion.
 *
 *	@return the inverse of the matrix
 */
matrixSVG.prototype.inv = function()
{
	out = new matrixSVG();

	det = this.e11 * (this.e33 * this.e22 - this.e32 * this.e23) - this.e21 * (this.e33 * this.e12 - this.e32 * this.e13) + this.e31 * (this.e23 * this.e12 - this.e22 * this.e13);

	out.e11 =  (this.e33 * this.e22 - this.e32 * this.e23) / det;
	out.e12 = -(this.e33 * this.e12 - this.e32 * this.e13) / det;
	out.e13 =  (this.e23 * this.e12 - this.e22 * this.e13) / det;
	out.e21 = -(this.e33 * this.e21 - this.e31 * this.e23) / det;
	out.e22 =  (this.e33 * this.e11 - this.e31 * this.e13) / det;
	out.e23 = -(this.e23 * this.e11 - this.e21 * this.e13) / det;
	out.e31 =  (this.e32 * this.e21 - this.e31 * this.e22) / det;
	out.e32 = -(this.e32 * this.e11 - this.e31 * this.e12) / det;
	out.e33 =  (this.e22 * this.e11 - this.e21 * this.e12) / det;

	return out;
}

/** Matrix multiplication.
 *
 *	@param op another svg matrix
 *	@return this * op
 */
matrixSVG.prototype.mult = function(op)
{
	out = new matrixSVG();

	out.e11 = this.e11 * op.e11 + this.e12 * op.e21 + this.e13 * op.e31;
	out.e12 = this.e11 * op.e12 + this.e12 * op.e22 + this.e13 * op.e32;
	out.e13 = this.e11 * op.e13 + this.e12 * op.e23 + this.e13 * op.e33;
	out.e21 = this.e21 * op.e11 + this.e22 * op.e21 + this.e23 * op.e31;
	out.e22 = this.e21 * op.e12 + this.e22 * op.e22 + this.e23 * op.e32;
	out.e23 = this.e21 * op.e13 + this.e22 * op.e23 + this.e23 * op.e33;
	out.e31 = this.e31 * op.e11 + this.e32 * op.e21 + this.e33 * op.e31;
	out.e32 = this.e31 * op.e12 + this.e32 * op.e22 + this.e33 * op.e32;
	out.e33 = this.e31 * op.e13 + this.e32 * op.e23 + this.e33 * op.e33;

	return out;
}

/** Matrix addition.
 *
 *	@param op another svg matrix
 *	@return this + op
 */
matrixSVG.prototype.add = function(op)
{
	out = new matrixSVG();

	out.e11 = this.e11 + op.e11;
	out.e12 = this.e12 + op.e12;
	out.e13 = this.e13 + op.e13;
	out.e21 = this.e21 + op.e21;
	out.e22 = this.e22 + op.e22;
	out.e23 = this.e23 + op.e23;
	out.e31 = this.e31 + op.e31;
	out.e32 = this.e32 + op.e32;
	out.e33 = this.e33 + op.e33;

	return out;
}

/** Matrix mixing.
 *
 *	@param op another svg matrix
 *	@parma contribOp contribution of the other matrix (0 &lt;= contribOp &lt;= 1)
 *	@return (1 - contribOp) * this + contribOp * op
 */
matrixSVG.prototype.mix = function(op, contribOp)
{
	contribThis = 1.0 - contribOp;
	out = new matrixSVG();

	out.e11 = contribThis * this.e11 + contribOp * op.e11;
	out.e12 = contribThis * this.e12 + contribOp * op.e12;
	out.e13 = contribThis * this.e13 + contribOp * op.e13;
	out.e21 = contribThis * this.e21 + contribOp * op.e21;
	out.e22 = contribThis * this.e22 + contribOp * op.e22;
	out.e23 = contribThis * this.e23 + contribOp * op.e23;
	out.e31 = contribThis * this.e31 + contribOp * op.e31;
	out.e32 = contribThis * this.e32 + contribOp * op.e32;
	out.e33 = contribThis * this.e33 + contribOp * op.e33;

	return out;
}

/** Trimming function for strings.
*/
String.prototype.trim = function()
{
	return this.replace(/^\s+|\s+$/g, '');
}

</script>
</svg>
